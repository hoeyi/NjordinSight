@page "/custodians/edit"

@inherits ModelListPage<AccountCustodian>

<PageTitle>@(PageTitle.UpdateMany(string.Empty).AsPageTitle())</PageTitle>

<ThemedComponent>
    <ModelPageMenuHeader Header="@(PageTitle.UpdateMany(string.Empty))" />

    @if (IsLoading)
    {
        <LoadingSvg />
    }
    else
    {   
        <CascadingValue Value="@ErrorMessage">
            <ErrorMessageBox Header="@Resources.Strings.Exception_Message_Generic" />
        </CascadingValue>

        <ContentTile>
            <Body>
                <EditForm width="100%" EditContext="@_context" >
                    <ActionButtonMenu>
                        <button class="form-control button"
                            @onclick="@(async (args) => await Submit_OnClick(context, args))">
                            @Strings.Caption_Button_Save
                        </button>
                        <button class="form-control button" 
                            @onclick="(async (args) => await AddNewAsync(args))">
                            @Strings.Caption_CreateNew.Format(ModelNoun?.GetSingular())
                        </button>
                        <button class="form-control button" @onclick="Cancel_OnClick"
                            @onclick:preventDefault>
                            @Strings.Caption_Button_Cancel
                        </button>
                    </ActionButtonMenu>
                    <DataAnnotationsValidator/>
                    <DataGrid Data="@Entries">
                        <DataGridColumn Property=@nameof(AccountCustodian.CustodianCode)
                                    Caption=@(NameFor(x => x.CustodianCode))>
                            <CellEditTemplate Context="model">
                                <InputText class="form-control" @bind-Value=model.CustodianCode />
                                <ValidationMessage For=@(()=> model.CustodianCode) />
                            </CellEditTemplate>
                        </DataGridColumn>
                        <DataGridColumn Property=@nameof(AccountCustodian.DisplayName)
                                    Caption=@(NameFor(x => x.DisplayName))>
                            <CellEditTemplate Context="model">
                                <InputText class="form-control" @bind-Value=model.DisplayName />
                                <ValidationMessage For=@(()=> model.DisplayName) />
                            </CellEditTemplate>
                        </DataGridColumn>
                        <DataGridColumn Type="DataGridCellType.Button">
                            <CellEditTemplate Context="model">
                                <ToolTip Text="@Strings.Caption_Button_Delete">
                                    <button class="form-control button icon"
                                        type="button"
                                        @onclick="async (args) => await DeleteAsync(args, model)">
                                        <IonIcon Name="close-circle" />
                                    </button>
                                </ToolTip>
                            </CellEditTemplate>
                        </DataGridColumn>
                    </DataGrid>
                </EditForm>
            </Body>
        </ContentTile>
    }
</ThemedComponent>
