@page "/custodians"

@inherits ModelIndex<AccountCustodian>

<PageTitle>@(PageTitle.ReadMany().AsPageTitle())</PageTitle>

<ThemedComponent>
    <ModelPageMenuHeader ActionMenu="@SectionNavigationMenu" Header="@(PageTitle.ReadMany())" />

    @if (IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <CascadingValue Value="@ErrorMessage">
            <ErrorMessageBox Header="@Resources.Strings.Exception_Message_Generic" />
        </CascadingValue>

        <ContentTile>
            <Body>
                <DataGrid Data="@Models">
                    <DataGridColumn 
                        Property=@nameof(AccountCustodian.CustodianCode)
                        Caption=@(NameFor(x => x.CustodianCode))>
                        <CellTemplate Context="model">
                            @model.CustodianCode
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn 
                        Property=@nameof(AccountCustodian.DisplayName)
                        Caption=@(NameFor(x => x.DisplayName))>
                        <CellTemplate Context="model">
                            @model.DisplayName
                        </CellTemplate>
                    </DataGridColumn>
                </DataGrid>
            </Body>
        </ContentTile>
    }
</ThemedComponent>

@code {
    protected override MenuRoot CreateSectionNavigationMenu() => new()
    {
        IconKey = "reorder-four",
        Children = new()
        {
            new MenuItem()
            {
                IconKey = "pencil",
                Caption = string.Format(
                    Strings.Caption_EditMany, ModelNoun?.GetPlural()),
                UriRelativePath = $"{IndexUriRelativePath}/edit"
            }
        }
    };

    protected override async Task OnInitializedAsync()
    {
        MaxRecordCount = -1;

        await base.OnInitializedAsync();
    }
}