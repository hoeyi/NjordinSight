@page "/attributes"

@inherits ModelIndex<ModelAttribute>

<PageTitle>@(PageTitle.ReadMany().AsPageTitle())</PageTitle>

    <ThemedComponent>
        <ModelPageHeader ActionMenu="@SectionNavigationMenu" Header="@(PageTitle.ReadMany())" />

    <CascadingValue Value="@ErrorMessage">
        <ErrorMessageBox Header="@Resources.Strings.Exception_Message_Generic" />
    </CascadingValue>

    <ContentTile>
        <TitleAlignLeft>
            <Paginator Model="PaginationHelper"
                    IndexChanged="OnIndexChangedAsync" PageSizeChanged="OnPageSizeChangedAsync" />
        </TitleAlignLeft>
        <Body>
            @if (IsLoading)
            {
                <LoadingSvg />
            }
            else
            {
                <DataGrid Data="@Entries" FootNote="@PaginationHelper.RecordReport">
                    <DataGridColumn Property="@nameof(ModelAttribute.DisplayName)"
                         Caption="@(ModelMetadata.NameFor<ModelAttribute>(x => x.DisplayName))"
                         Type="DataGridCellType.Link" >
                         <CellTemplate Context="model">
                            <a class="custom-nav-link" href="@(FormatDetailUri(model.AttributeId))" 
                                @onclick:preventDefault
                                @onclick="@(args => Detail_OnClick(model, args))">
                                @model.DisplayName
                            </a>
                         </CellTemplate>
                     </DataGridColumn>
                     <DataGridColumn Property="@nameof(ModelAttribute.ModelAttributeScopes)"
                        Caption=@(ModelMetadata.NameFor<ModelAttribute>(x => x.ModelAttributeScopes))
                        Type="DataGridCellType.Text">
                        <CellTemplate Context="model">
                            @GetAttributeScopeDisplayString(model)
                        </CellTemplate>
                     </DataGridColumn>
                </DataGrid>
            }
        </Body>
    </ContentTile>
</ThemedComponent>

@code {
    private void Detail_OnClick(ModelAttribute model, MouseEventArgs args)
    {
        NavigationHelper.NavigateTo(FormatDetailUri(model.AttributeId));
    }

    private string GetAttributeScopeDisplayString(ModelAttribute model)
    {
        if (model.ModelAttributeScopes is null)
            throw new InvalidOperationException();

        return string.Join(", ",
            model.ModelAttributeScopes.Select(a => 
                a.ScopeCode.ConvertFromStringCode<ModelAttributeScopeCode>()?.GetDisplayName()));
    }
}