@page "/accounts"

@inherits ModelIndex<Account>

<PageTitle>@(PageTitle.ReadMany().AsPageTitle())</PageTitle>

<ThemedComponent>
    <ModelPageHeader ActionMenu="@SectionNavigationMenu" Header="@(PageTitle.ReadMany())" />

    @if(SearchFields is null)
    {
        <LoadingSvg />
    }
    else
    {
        <ContentTile>
            <Body>
                <SearchInputTable TModel="Account"
                    ComparisonOperators=@ComparisonOperators
                    ExpressionBuilder=@ExpressionBuilder
                    SearchFields=@SearchFields
                    OnSearchClick=@(async (args) => await SearchClicked(args))>
                </SearchInputTable>
            </Body>
        </ContentTile>
    }

    <CascadingValue Value="@ErrorMessage">
        <ErrorMessageBox Header="@(Resources.Strings.Exception_Message_Generic)" />
    </CascadingValue>

    <ContentTile>
        <TitleAlignLeft>
            <Paginator Model="PaginationHelper"
                    IndexChanged="OnIndexChangedAsync" PageSizeChanged="OnPageSizeChangedAsync" />
        </TitleAlignLeft>
        <Body>
            @if (IsLoading)
            {
                <LoadingSvg />
            }
            else
            {
                <DataGrid Data="@Entries" FootNote="@PaginationHelper.RecordReport">
                    <DataGridColumn Property=@nameof(Account.AccountNavigation.AccountObjectCode)
                                Caption=@(ModelMetadata.NameFor<AccountObject>(x => x.AccountObjectCode))
                                Type=@DataGridCellType.Link>
                        <CellTemplate Context="model">
                            <a class="custom-nav-link" href=@(FormatDetailUri(model.AccountId)) 
                                @onclick:preventDefault 
                                @onclick="@(args => Detail_OnClick(model, args))">
                                @model.AccountNavigation.AccountObjectCode.ToUpper()
                            </a>
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.AccountNavigation.ObjectDisplayName)
                                Caption=@(ModelMetadata.NameFor<AccountObject>(x => x.ObjectDisplayName))>
                        <CellTemplate Context="model">
                            @model.AccountNavigation.ObjectDisplayName
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.AccountNavigation.ObjectDescription)
                                Caption=@(ModelMetadata.NameFor<AccountObject>(x => x.ObjectDescription))>
                        <CellTemplate Context="model">
                            @model.AccountNavigation.ObjectDescription
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.AccountNavigation.StartDate)
                                Caption=@(ModelMetadata.NameFor<AccountObject>(x => x.StartDate))>
                        <CellTemplate Context="model">
                            @model.AccountNavigation.StartDate.ToShortDateString()
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.AccountNavigation.CloseDate)
                                Caption=@(ModelMetadata.NameFor<AccountObject>(x => x.CloseDate))>
                        <CellTemplate Context="model">
                            @model.AccountNavigation.CloseDate?.ToShortDateString()
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.AccountNumber)
                                Caption=@(ModelMetadata.NameFor<Account>(x => x.AccountNumber))>
                        <CellTemplate Context="model">
                            @model.AccountNumber
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.BooksClosedDate)
                                Caption=@(ModelMetadata.NameFor<Account>(x => x.BooksClosedDate))>
                        <CellTemplate Context="model">
                            @model.BooksClosedDate?.ToShortDateString()
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.IsComplianceTradable)
                                Caption=@(ModelMetadata.NameFor<Account>(x => x.IsComplianceTradable))>
                        <CellTemplate Context="model">
                            @model.IsComplianceTradable
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.HasWallet)
                                Caption=@(ModelMetadata.NameFor<Account>(x => x.HasWallet))>
                        <CellTemplate Context="model">
                            @model.HasWallet
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.HasBankTransaction)
                                Caption=@(ModelMetadata.NameFor<Account>(x => x.HasBankTransaction))>
                        <CellTemplate Context="model">
                            @model.HasBankTransaction
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.HasBrokerTransaction)
                                Caption=@(ModelMetadata.NameFor<Account>(x => x.HasBrokerTransaction))>
                        <CellTemplate Context="model">
                            @model.HasBrokerTransaction
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(Account.AccountCustodian.CustodianCode)
                                Caption=@(ModelMetadata.NameFor<Account>(x => x.AccountCustodianId))>
                        <CellTemplate Context="model">
                            @model.AccountCustodian?.CustodianCode
                        </CellTemplate>
                    </DataGridColumn>
                </DataGrid>
            }
        </Body>
    </ContentTile>
</ThemedComponent>


@code {
    [Inject]
    protected IHttpService<NjordinSight.DataTransfer.Common.AccountDto> HttpService { get; init; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var response = await HttpService.SelectAsync();
    }

    private void Detail_OnClick(Account model, MouseEventArgs args)
    {
        NavigationHelper.NavigateTo(FormatDetailUri(model.AccountId));
    }
}