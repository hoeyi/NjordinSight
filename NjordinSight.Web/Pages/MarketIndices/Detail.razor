@page "/market-indices/{IndexId:int}/detail"

@inherits ModelDetail<MarketIndex>

<ThemedComponent>
    @if(IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <PageTitle>@(PageTitle.ReadSingle(Model.IndexCode).AsPageTitle())</PageTitle>

        <ModelPageMenuHeader 
            ActionMenu="@ActionMenu"
            Header="@(PageTitle.ReadSingle(Model.IndexCode))" />

        <ContentTile>
            <Body>
                <CascadingValue Value="@Model" >
                    <EditForm class="model-editor" Model="@Model">
                        <MarketIndexCRUD Disabled="false" ReadOnly="true" />
                    </EditForm>
                </CascadingValue>
            </Body>
        </ContentTile>
    }
</ThemedComponent>


@code{
    /// <summary>
    /// Gets or sets the identifier for the <see cref="MarketIndex" /> worked using this page.
    /// </summary>
    [Parameter]
    public int IndexId { get; set; }

    /// <inheritdoc/>
    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        try
        {
            var modelQuery = await Controller.ReadAsync(IndexId);
            if(modelQuery.Value is MarketIndex index)
                Model = index;

            ActionMenu = new()
                {
                    IconKey = "reorder-four",
                    Children = new()
                    {
                        // Add return to index button.
                        { 0, new MenuItem()
                            {
                                IconKey = "caret-back-circle",
                                Caption = string.Format(
                                    Strings.Caption_NavigateBackTo,
                                    ModelMetadata
                                        .GetAttribute<MarketIndex, NounAttribute>()
                                        ?.GetPlural()),
                                UriStem = $"{IndexUriRelativePath}"
                            }
                        },
                        // Add edit button.
                        { 1, new MenuItem()
                            {
                                IconKey = "pencil",
                                Caption = string.Format(
                                    Strings.Caption_EditSingle, ModelNoun?.GetSingular()),
                                UriStem = FormatEditUri(GetKeyValueOrDefault<int>(Model))
                            }
                        }
                    }
                };
        }
        finally
        {
            IsLoading = Model is null;
        }
    }
}