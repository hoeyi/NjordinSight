@page "/countries/{ModelId:int}/detail"

@inherits ModelDetail<CountryDto>

<ThemedComponent>
    @if (IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <PageTitle>@(PageTitle.ReadSingle(Model.DisplayName).AsPageTitle())</PageTitle>

        <ModelPageHeader ActionMenu="@SectionNavigationMenu"
                         Header="@(PageTitle.ReadSingle(Model.DisplayName))" />


        <CascadingValue Value="@ErrorMessage">
            <ErrorMessageBox Header="@Resources.Strings.Exception_Message_Generic" />
        </CascadingValue>

        <ContentTile>
            <Body>
                <CascadingValue Value="@Model">
                    <EditForm class="model-editor" Model="@Model">
                        <CountryCRUD Disabled="false" ReadOnly="true" />
                    </EditForm>
                </CascadingValue>
            </Body>
        </ContentTile>
        @foreach (var group in Model.AttributeCollection.CurrentEntryCollectionGroups
            .OrderBy(g => g.ParentAttribute.DisplayName))
        {
            <CascadingValue Value="@group">
                <EditForm class="model-editor" Model="@group">
                    <CountryAttributesCRUD 
                        Disabled="false"
                        ReadOnly="true" />
                </EditForm>
            </CascadingValue>
        }
    }
</ThemedComponent>

@code {
    [Parameter]
    public int ModelId { get; init; }

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        try
        {
            Model = await HttpService.GetAsync(ModelId);
        }
        finally
        {
            IsLoading = Model is null;
        }
    }
}