@page "/broker-transaction-codes/create/{RequestGuid:guid}"

@inherits ModelDetail<BrokerTransactionCodeDto>

<PageTitle>@(PageTitle.CreateSingle().AsPageTitle())</PageTitle>

<ThemedComponent>
    @if (IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <ModelPageHeader Header="@(PageTitle.CreateSingle())" />

        <CascadingValue Value="@ErrorMessage">
            <ErrorMessageBox Header="@Resources.Strings.Exception_Message_Generic" />
        </CascadingValue>

        <CascadingValue Value="@Model">
            <AttributeEntryEditor 
                TViewModelParent="BrokerCodeAttributeDtoCollection"
                TViewModelChild="BrokerTransactionCodeAttributeGrouping"
                TModel="BrokerTransactionCodeDto"
                TModelChild="BrokerTransactionCodeAttributeDto"
                OnCancelEditorClick="FormCancelClickHandler"
                OnValidFormSubmit="HandleValidSubmit"
                ModelDto="@Model.AttributeCollection"
                Mode="EditorMode.Add">
                <ViewModelCRUD>
                    <BrokerTransactionCodeCRUD Disabled="false" ReadOnly="false" />
                </ViewModelCRUD>
                <ViewModelChildCRUD>
                </ViewModelChildCRUD>
            </AttributeEntryEditor>
        </CascadingValue>
    }
</ThemedComponent>

@code {
    [Parameter]
    public Guid RequestGuid { get; init; }

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        try
        {
            Model = await HttpService.InitDefaultAsync();
        }
        finally
        {
            IsLoading = Model is null;
        }
    }

    private void FormCancelClickHandler() => NavigationHelper.NavigateTo(IndexUriRelativePath);
}