@page "/composites/{ModelId:int}/detail"

@inherits ModelDetail<AccountComposite>

<ThemedComponent>
    @if (IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <PageTitle>@(PageTitle.ReadSingle(Model.AccountCompositeCode).AsPageTitle())</PageTitle>

        <ModelPageMenuHeader 
            ActionMenu="@SectionNavigationMenu" 
            Header="@(PageTitle.ReadSingle(Model.AccountCompositeCode))" />

        <CascadingValue Value="@ErrorMessage">
            <ErrorMessageBox Header="@Resources.Strings.Exception_Message_Generic" />
        </CascadingValue>

        <CascadingValue Value="@ModelDto">
            <EditForm class="model-editor" Model="@ModelDto">
                <ContentTile>
                    <Body>
                        <AccountCompositeCRUD Disabled="false" ReadOnly="true" />
                    </Body>
                </ContentTile>
                <ContentTile>
                    <Body>
                        <AccountCompositeMembersCRUD 
                            Accounts="@Accounts" Disabled="false" ReadOnly="true" />
                    </Body>
                </ContentTile>
            </EditForm>
        </CascadingValue>
        @foreach (var entry in ModelDto.AttributeViewModel.CurrentEntries.OrderBy(g =>
            g.AttributeMember.Attribute.DisplayName))
        {
            <ContentTile>
                <Body>
                    <EditForm Model="@entry">
                        <ModelForm TModelDto="AccountAttributeMemberEntry">
                            <ModelFormLineItem LabelOverride="@entry.AttributeMember.Attribute.DisplayName"
                                       ForMember="@(() => entry.AttributeMember.DisplayName)">
                                <div class="form-control">
                                    @entry.AttributeMember.DisplayName
                                </div>
                            </ModelFormLineItem>
                            <ModelFormLineItem ForMember="@(() => entry.EffectiveDate)">
                                <div class="form-control">
                                    @entry.EffectiveDate.ToShortDateString()
                                </div>
                            </ModelFormLineItem>
                        </ModelForm>
                    </EditForm>
                </Body>
            </ContentTile>
        }
    }
</ThemedComponent>

@code {
    [Parameter]
    public int ModelId { get; init; }

    private IEnumerable<LookupModel<int, string>> Accounts { get; set; }

    private AccountCompositeDto ModelDto { get; set; }

    protected override async Task OnInitializedAsync()
    {

        IsLoading = true;

        try
        {
            var compositeQuery = Controller.ReadAsync(ModelId);
            var accountsQuery = Controller.ReferenceQueries.GetAccountDTOsAsync();

            Task dataTasks = Task.WhenAll(compositeQuery, accountsQuery);
            await dataTasks;

            if ((await compositeQuery).Value is AccountComposite composite)
                Model = composite;

            Accounts = (await accountsQuery).Value;
            ModelDto = new(Model);
        }
        finally
        {
            IsLoading = Accounts is null || Model is null;
        }

        // TODO: Take corrective action here, accountQuery.Value should be Account
    }
}
