<h3>
    <span>@Header</span>
    @if(ActionMenu is not null)
    {
        foreach(var menuItem in ActionMenu.Children)
        {
            <button class="form-control button"
                @onclick="((args) => 
                HyperlinkClickHandler(new(){ UriPath = menuItem.UriRelativePath } ))">
                @menuItem.Caption
            </button>
        }
    }
</h3>

@code {
    /// <summary>
    /// Gets or sets the <see="Menu" /> for the component.
    /// </summary>
    [Parameter]
    public MenuRoot ActionMenu { get; set; }

    /// <summary>
    /// Gets or sets the text header for the component.
    /// </summary>
    [Parameter]
    public string Header { get; set; } = string.Empty;

    [Inject]
    public NavigationManager NavigationManager { get; init; }

    private void HyperlinkClickHandler(LinkClickEventArgs args)
    {
        if (string.IsNullOrEmpty(args.UriPath) || args.UriPath == NavigationManager.Uri)
            return;
        else
            // TODO: Add special handling for special keypress/mouseclick scenarios.
            NavigationManager.NavigateTo(uri: args.UriPath, replace: true);
    }
}
