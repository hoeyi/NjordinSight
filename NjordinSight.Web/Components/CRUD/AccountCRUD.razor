@inherits ModelCRUD<AccountDto>

@if (ModelDto is null || AccountCustodians is null)
{
    <LoadingSvg />
}
else
{   
    <ModelForm TModelDto="AccountDto">
        @*AccountObject inputs*@
        <ModelFormEntry ForMember="@(() => ModelDto.ShortCode)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ModelDto.ShortCode
                </div>
            }
            else
            {
                <InputText class="form-control" @bind-Value=ModelDto.ShortCode
                    disable="@Disabled"
                    DisplayName=@(NameFor(x => x.ShortCode)) />
            }
        </ModelFormEntry>
        <ModelFormEntry ForMember="@(() => ModelDto.DisplayName)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ModelDto.DisplayName
                </div>
            }
            else
            {
                <InputText class="form-control" @bind-Value=ModelDto.DisplayName
                    disable="@Disabled"
                    DisplayName=@(NameFor(x => x.DisplayName)) />
            }
        </ModelFormEntry>
        <ModelFormEntry ForMember="@(() => ModelDto.Description)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ModelDto.Description
                </div>
            }
            else
            {
                <InputText class="form-control" @bind-Value=ModelDto.Description
                    disable="@Disabled"
                    DisplayName=@(NameFor(x => x.Description)) />
            }
        </ModelFormEntry>
        <ModelFormEntry ForMember="@(() => ModelDto.StartDate)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ModelDto.StartDate.ToShortDateString()
                </div>
            }
            else
            {
                <InputDate class="form-control" @bind-Value=ModelDto.StartDate 
                    disable="@Disabled" 
                    DisplayName=@(NameFor(x => x.StartDate))/>
            }
        </ModelFormEntry>
        <ModelFormEntry ForMember="@(() => ModelDto.CloseDate)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ModelDto.CloseDate?.ToShortDateString()
                </div>
            }
            else
            {
                <InputDate class="form-control" @bind-Value=ModelDto.CloseDate 
                    disable="@Disabled"
                    DisplayName=@(NameFor(x => x.CloseDate)) />
            }
        </ModelFormEntry>

        @*Account inputs*@
        <ModelFormEntry ForMember="@(() => ModelDto.AccountNumber)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ModelDto.AccountNumber
                </div>
            }
            else
            {
                <InputText class="form-control" @bind-Value=ModelDto.AccountNumber
                    disable="@Disabled"
                    DisplayName=@(NameFor(x => x.AccountNumber)) />
            }
        </ModelFormEntry>
        <ModelFormEntry ForMember="@(() => ModelDto.AccountCustodianId)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @CustodianDisplayName(ModelDto.AccountCustodianId)
                </div>
            }
            else
            {
                <InputSelect class="form-control"
                    DisplayName=@(NameFor(x => x.AccountCustodianId))
                    @bind-Value="ModelDto.AccountCustodianId"
                    disabled="@Disabled">
                    @foreach (var custodian in AccountCustodians)
                    {
                        <option value=@custodian.AccountCustodianId>@custodian.CustodianCode</option>
                    }
                </InputSelect>
            }
        </ModelFormEntry>
        <ModelFormEntry ForMember="@(() => ModelDto.BooksClosedDate)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ModelDto.BooksClosedDate?.ToShortDateString()
                </div>
            }
            else
            {
                <InputDate class="form-control" @bind-Value=ModelDto.BooksClosedDate
                        disabled="@Disabled"
                        DisplayName=@(NameFor(x => x.BooksClosedDate))/>
            }
        </ModelFormEntry>
        <ModelFormEntry ForMember="@(() => ModelDto.HasWallet)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ModelDto.HasWallet
                </div>
            }
            else
            {
                <InputCheckbox class="checkbox-themed" @bind-Value=ModelDto.HasWallet disabled="@Disabled" />
                <ValidationMessage For="@(() => ModelDto.HasWallet)" />
            }
        </ModelFormEntry>
        <ModelFormEntry ForMember="@(() => ModelDto.HasBankTransaction)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ModelDto.HasBankTransaction
                </div>
            }
            else
            {
                <InputCheckbox class="checkbox-themed" @bind-Value=ModelDto.HasBankTransaction disabled="@Disabled" />
                <ValidationMessage For="@(() => ModelDto.HasBankTransaction)" />
            }
        </ModelFormEntry>
        <ModelFormEntry ForMember="@(() => ModelDto.HasBrokerTransaction)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ModelDto.HasBrokerTransaction
                </div>
            }
            else
            {
                <InputCheckbox class="checkbox-themed" @bind-Value=ModelDto.HasBrokerTransaction disabled="@Disabled" />
            }
        </ModelFormEntry>
    </ModelForm>
}
@code {
    [Parameter]
    public IEnumerable<AccountCustodianDto> AccountCustodians { get; set; }

    private string CustodianDisplayName(int? id) =>
         AccountCustodians.FirstOrDefault(a => a.AccountCustodianId == id)?.CustodianCode ?? string.Empty;
}
