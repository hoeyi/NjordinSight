using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Design;
using Microsoft.EntityFrameworkCore.Diagnostics;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion.Internal;
using Microsoft.IdentityModel.Tokens;
using NjordinSight.EntityModel.ConstraintType;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NjordinSight.EntityModel.Context.Configurations
{
    /// <summary>
    ///  Extension method container for method-chaining a <see cref="IConfigurationCollection"/> 
    ///  to seed data.
    /// </summary>
    public static partial class ConfigurationFluentExtension
    {
        /// <summary>
        /// Adds a new <see cref="Action"/> accepting <see cref="ModelBuilder"/> input that applies 
        /// the given <see cref="IEntityConfiguration{TEntity}"/>. The action is invoked by the caller, 
        /// typically be iterating over the <see cref="IConfigurationCollection"/> instance.
        /// </summary>
        /// <<returns>The <see cref="IConfigurationCollection"/> instance for chaining method calls.</returns>
        /// <typeparam name="T"></typeparam>
        /// <param name="configuration"></param>
        /// <exception cref="ArgumentNullException"><paramref name="configuration"/> was null.</exception>
        public static IConfigurationCollection WithConfiguration<T>(
            this IConfigurationCollection collection,
            IEntityConfiguration<T> configuration)
            where T : class
        {
            if (collection is null)
                throw new ArgumentNullException(paramName: nameof(collection));

            collection.AddConfiguration(configuration);

            return collection;
        }

    }

    #region SAMPLE DATA METHODS
    public static partial class ConfigurationFluentExtension
    {
        /// <summary>
        /// Helper method for creating new <see cref="IEntityConfiguration{TEntity}"/> instances.
        /// </summary>
        /// <typeparam name="T"></typeparam>
        /// <param name="sourceGuid"></param>
        /// <param name="entries"></param>
        /// <returns><see cref="IEntityConfiguration{TEntity}"/>.</returns>
        private static IEntityConfiguration<T> NewConfiguration<T>(
            string sourceGuid, params T[] entries) where T : class
            => new EntityConfiguration<T>(Guid.Parse(sourceGuid), entries);
        
        /// <summary>
        /// Seeds this <see cref="IConfigurationCollection"/> with sample data for:
        /// <list type="bullet">
        /// <item><see cref="ModelAttribute"/></item>
        /// <item><see cref="ModelAttributeScope"/></item>
        /// <item><see cref="ModelAttributeMember"/></item>
        /// </list>
        /// </summary>
        /// <param name="configurationcollection"></param>
        /// <returns>This <see cref="IConfigurationCollection"/> for method chaining.</returns>
        public static IConfigurationCollection WithSample_ModelAttributeGraph(
            this IConfigurationCollection configurationcollection)
        {
            const string sourceGuid = "{B86AD8A7-9A34-40C6-A96C-1A2A577D95D8}";

            var modelAttributes = new ModelAttribute[]
            {
                new()
                {
                    AttributeId = (int)ModelAttributeEnum.AccountType,
                    DisplayName = Strings.ModelAttribute_AccountType
                },
                new()
                {
                    AttributeId = (int)ModelAttributeEnum.BankTransactionGroup,
                    DisplayName = Strings.ModelAttribute_BankTransactionGroup
                },
                new()
                {
                    AttributeId = (int)ModelAttributeEnum.BankTransactionType,
                    DisplayName = Strings.ModelAttribute_BankTransactionType
                },
                new()
                {
                    AttributeId = (int)ModelAttributeEnum.Economy,
                    DisplayName = Strings.ModelAttribute_Economy
                }
            };

            var modelAttributescopes = new ModelAttributeScope[]
            {
                new()
                {
                    AttributeId = (int)ModelAttributeEnum.AccountType,
                    ScopeCode = ModelAttributeScopeCode.Account.ConvertToStringCode()
                },
                new()
                {
                    AttributeId = (int)ModelAttributeEnum.BankTransactionGroup,
                    ScopeCode = ModelAttributeScopeCode.BankTransactionCode.ConvertToStringCode()
                },
                new()
                {
                    AttributeId = (int)ModelAttributeEnum.BankTransactionType,
                    ScopeCode = ModelAttributeScopeCode.BankTransactionCode.ConvertToStringCode()
                },
                new()
                {
                    AttributeId = (int)ModelAttributeEnum.Economy,
                    ScopeCode = ModelAttributeScopeCode.Country.ConvertToStringCode()
                }
            };

            int accountTypeAttributeId = (int)ModelAttributeEnum.AccountType;
            int bankTransactionTypeAttributeId = (int)ModelAttributeEnum.BankTransactionType;
            int bankTransctionGroupAttributeId = (int)ModelAttributeEnum.BankTransactionGroup;
            int economyAttributeId = (int)ModelAttributeEnum.Economy;

            var modelAttributeMembers = new ModelAttributeMember[]
            {
                // ACCOUNT TYPE
                new() { AttributeMemberId = -901, AttributeId = accountTypeAttributeId, DisplayName = "Student Loan", DisplayOrder = 0 },
                new() { AttributeMemberId = -902, AttributeId = accountTypeAttributeId, DisplayName = "401(k)", DisplayOrder = 1 },
                new() { AttributeMemberId = -903, AttributeId = accountTypeAttributeId, DisplayName = "Rollover IRA", DisplayOrder = 2 },
                new() { AttributeMemberId = -904, AttributeId = accountTypeAttributeId, DisplayName = "Contributory IRA", DisplayOrder = 3 },
                new() { AttributeMemberId = -905, AttributeId = accountTypeAttributeId, DisplayName = "Brokerage", DisplayOrder = 4 },
                new() { AttributeMemberId = -906, AttributeId = accountTypeAttributeId, DisplayName = "Stock Purchase Plan", DisplayOrder = 5 },
                new() { AttributeMemberId = -907, AttributeId = accountTypeAttributeId, DisplayName = "Checking", DisplayOrder = 6 },
                new() { AttributeMemberId = -908, AttributeId = accountTypeAttributeId, DisplayName = "Savings", DisplayOrder = 7 },
                new() { AttributeMemberId = -909, AttributeId = accountTypeAttributeId, DisplayName = "Credit", DisplayOrder = 8 },
                new() { AttributeMemberId = -910, AttributeId = accountTypeAttributeId, DisplayName = "Health-Savings", DisplayOrder = 9 },
                new() { AttributeMemberId = -911, AttributeId = accountTypeAttributeId, DisplayName = "Roth Contributory IRA", DisplayOrder = 10 },

                // BANK TRANSACTION TYPE
                new() { AttributeMemberId = -920, AttributeId = bankTransactionTypeAttributeId, DisplayName = "Transportation", DisplayOrder = 0 },
                new() { AttributeMemberId = -921, AttributeId = bankTransactionTypeAttributeId, DisplayName = "Utilities", DisplayOrder = 1 },
                new() { AttributeMemberId = -922, AttributeId = bankTransactionTypeAttributeId, DisplayName = "Entertainment", DisplayOrder = 2 },
                new() { AttributeMemberId = -923, AttributeId = bankTransactionTypeAttributeId, DisplayName = "Medical", DisplayOrder = 3 },
                new() { AttributeMemberId = -924, AttributeId = bankTransactionTypeAttributeId, DisplayName = "Housing", DisplayOrder = 4 },
                new() { AttributeMemberId = -925, AttributeId = bankTransactionTypeAttributeId, DisplayName = "Restaurants/Dining", DisplayOrder = 5 },
                new() { AttributeMemberId = -926, AttributeId = bankTransactionTypeAttributeId, DisplayName = "Employment", DisplayOrder = 6 },

                // BANK TRANSACTION GROUP
                new() { AttributeMemberId = -931, AttributeId = bankTransctionGroupAttributeId, DisplayName = "Necessary expense", DisplayOrder = 0 },
                new() { AttributeMemberId = -932, AttributeId = bankTransctionGroupAttributeId, DisplayName = "Discretionary expense", DisplayOrder = 1 },
                new() { AttributeMemberId = -933, AttributeId = bankTransctionGroupAttributeId, DisplayName = "Income", DisplayOrder = 2 },

                // ECONOMY
                new() { AttributeMemberId = -951, AttributeId = economyAttributeId, DisplayName = "Developed", DisplayOrder = 0 },
                new() { AttributeMemberId = -952, AttributeId = economyAttributeId, DisplayName = "Emerging", DisplayOrder = 1 },
                new() { AttributeMemberId = -953, AttributeId = economyAttributeId, DisplayName = "Frontier", DisplayOrder = 2 }
            };

            configurationcollection
                .WithConfiguration(NewConfiguration(sourceGuid, modelAttributes))
                .WithConfiguration(NewConfiguration(sourceGuid, modelAttributescopes))
                .WithConfiguration(NewConfiguration(sourceGuid, modelAttributeMembers));

            return configurationcollection;
        }

        /// <summary>
        /// Seeds this <see cref="IConfigurationCollection"/> with sample data for:
        /// <list type="bullet">
        /// <item><see cref="CountryAttributeMemberEntry"/></item>
        /// </list>
        /// Depends on <see cref="WithSample_ModelAttributeGraph(IConfigurationCollection)"/>.
        /// </summary>
        /// <param name="configurationCollection"></param>
        /// <returns>This <see cref="IConfigurationCollection"/> for method chaining.</returns>
        public static IConfigurationCollection WithSample_CountryAttributeEntries(
            this IConfigurationCollection configurationCollection)
        {
            const string sourceGuid = "{09236F18-7E05-43B3-96E2-6B0AD47D2BE4}";

            var minDate = DateTime.MinValue.Date;
            var countryAttributeMemberEntries = new CountryAttributeMemberEntry[]
            {
                // ECONOMY
                new() { AttributeMemberId = -952, CountryId = -832, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -609, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -612, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -613, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -620, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -617, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -616, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -630, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -639, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -814, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -643, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -644, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -647, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -657, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -682, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -659, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -664, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -808, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -668, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -674, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -675, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -833, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -685, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -699, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -653, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -700, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -703, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -702, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -706, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -708, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -709, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -713, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -711, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -714, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -715, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -718, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -719, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -723, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -809, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -728, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -750, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -743, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -741, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -734, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -761, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -756, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -765, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -758, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -766, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -767, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -773, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -774, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -776, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -777, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -779, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -780, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -781, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -794, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -799, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -796, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -802, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -813, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -819, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -825, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -826, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -816, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -951, CountryId = -835, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -953, CountryId = -840, EffectiveDate = minDate, Weight = 1M },
                new() { AttributeMemberId = -952, CountryId = -805, EffectiveDate = minDate, Weight = 1M }
            };

            configurationCollection
                .WithConfiguration(NewConfiguration(sourceGuid, countryAttributeMemberEntries));

            return configurationCollection;
        }

        /// <summary>
        /// Seeds this <see cref="IConfigurationCollection"/> with sample data for:
        /// <list type="bullet">
        /// <item><see cref="MarketIndex"/></item>
        /// <item><see cref="MarketIndexPrice"/></item>
        /// </list>
        /// </summary>
        /// <param name="configurationCollection"></param>
        /// <returns>This <see cref="IConfigurationCollection"/> for method chaining.</returns>
        public static IConfigurationCollection WithSample_MarketIndexGraph(
            this IConfigurationCollection configurationCollection)
        {
            const string sourceGuid = "{D38E2D00-A04B-45F5-B911-743739E79EA2}";

            var marketIndices = new MarketIndex[]
            {
                new() { IndexId = -2, IndexCode = "SPX", IndexDescription = "S&P 500" },
                new() { IndexId = -3, IndexCode = "DJIA", IndexDescription = "Dow Jones Industrial Average" },
                new() { IndexId = -4, IndexCode = "NASDAQ", IndexDescription = "NASDAQ Composite" }
            };

            string priceCode = MarketIndexPriceCode.PriceReturn.ConvertToStringCode();

            var marketIndexRates = new MarketIndexPrice[]
            {
                new(){ IndexPriceId = -1, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 3), PriceCode = priceCode },
                new(){ IndexPriceId = -2, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 3), PriceCode = priceCode },
                new(){ IndexPriceId = -3, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 3), PriceCode = priceCode },
                new(){ IndexPriceId = -4, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 4), PriceCode = priceCode },
                new(){ IndexPriceId = -5, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 4), PriceCode = priceCode },
                new(){ IndexPriceId = -6, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 4), PriceCode = priceCode },
                new(){ IndexPriceId = -7, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 5), PriceCode = priceCode },
                new(){ IndexPriceId = -8, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 5), PriceCode = priceCode },
                new(){ IndexPriceId = -9, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 5), PriceCode = priceCode },
                new(){ IndexPriceId = -10, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 6), PriceCode = priceCode },
                new(){ IndexPriceId = -11, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 6), PriceCode = priceCode },
                new(){ IndexPriceId = -12, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 6), PriceCode = priceCode },
                new(){ IndexPriceId = -13, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 9), PriceCode = priceCode },
                new(){ IndexPriceId = -14, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 9), PriceCode = priceCode },
                new(){ IndexPriceId = -15, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 9), PriceCode = priceCode },
                new(){ IndexPriceId = -16, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 10), PriceCode = priceCode },
                new(){ IndexPriceId = -17, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 10), PriceCode = priceCode },
                new(){ IndexPriceId = -18, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 10), PriceCode = priceCode },
                new(){ IndexPriceId = -19, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 11), PriceCode = priceCode },
                new(){ IndexPriceId = -20, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 11), PriceCode = priceCode },
                new(){ IndexPriceId = -21, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 11), PriceCode = priceCode },
                new(){ IndexPriceId = -22, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 12), PriceCode = priceCode },
                new(){ IndexPriceId = -23, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 12), PriceCode = priceCode },
                new(){ IndexPriceId = -24, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 12), PriceCode = priceCode },
                new(){ IndexPriceId = -25, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 13), PriceCode = priceCode },
                new(){ IndexPriceId = -26, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 13), PriceCode = priceCode },
                new(){ IndexPriceId = -27, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 13), PriceCode = priceCode },
                new(){ IndexPriceId = -28, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 17), PriceCode = priceCode },
                new(){ IndexPriceId = -29, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 17), PriceCode = priceCode },
                new(){ IndexPriceId = -30, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 17), PriceCode = priceCode },
                new(){ IndexPriceId = -31, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 18), PriceCode = priceCode },
                new(){ IndexPriceId = -32, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 18), PriceCode = priceCode },
                new(){ IndexPriceId = -33, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 18), PriceCode = priceCode },
                new(){ IndexPriceId = -34, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 19), PriceCode = priceCode },
                new(){ IndexPriceId = -35, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 19), PriceCode = priceCode },
                new(){ IndexPriceId = -36, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 19), PriceCode = priceCode },
                new(){ IndexPriceId = -37, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 20), PriceCode = priceCode },
                new(){ IndexPriceId = -38, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 20), PriceCode = priceCode },
                new(){ IndexPriceId = -39, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 20), PriceCode = priceCode },
                new(){ IndexPriceId = -40, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 23), PriceCode = priceCode },
                new(){ IndexPriceId = -41, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 23), PriceCode = priceCode },
                new(){ IndexPriceId = -42, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 23), PriceCode = priceCode },
                new(){ IndexPriceId = -43, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 24), PriceCode = priceCode },
                new(){ IndexPriceId = -44, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 24), PriceCode = priceCode },
                new(){ IndexPriceId = -45, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 24), PriceCode = priceCode },
                new(){ IndexPriceId = -46, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 25), PriceCode = priceCode },
                new(){ IndexPriceId = -47, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 25), PriceCode = priceCode },
                new(){ IndexPriceId = -48, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 25), PriceCode = priceCode },
                new(){ IndexPriceId = -49, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 26), PriceCode = priceCode },
                new(){ IndexPriceId = -50, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 26), PriceCode = priceCode },
                new(){ IndexPriceId = -51, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 26), PriceCode = priceCode },
                new(){ IndexPriceId = -52, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 27), PriceCode = priceCode },
                new(){ IndexPriceId = -53, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 27), PriceCode = priceCode },
                new(){ IndexPriceId = -54, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 27), PriceCode = priceCode },
                new(){ IndexPriceId = -55, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 30), PriceCode = priceCode },
                new(){ IndexPriceId = -56, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 30), PriceCode = priceCode },
                new(){ IndexPriceId = -57, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 30), PriceCode = priceCode },
                new(){ IndexPriceId = -58, MarketIndexId = -3, PriceDate = new DateTime(2023, 1, 31), PriceCode = priceCode },
                new(){ IndexPriceId = -59, MarketIndexId = -4, PriceDate = new DateTime(2023, 1, 31), PriceCode = priceCode },
                new(){ IndexPriceId = -60, MarketIndexId = -2, PriceDate = new DateTime(2023, 1, 31), PriceCode = priceCode },
                new(){ IndexPriceId = -61, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 1), PriceCode = priceCode },
                new(){ IndexPriceId = -62, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 1), PriceCode = priceCode },
                new(){ IndexPriceId = -63, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 1), PriceCode = priceCode },
                new(){ IndexPriceId = -64, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 2), PriceCode = priceCode },
                new(){ IndexPriceId = -65, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 2), PriceCode = priceCode },
                new(){ IndexPriceId = -66, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 2), PriceCode = priceCode },
                new(){ IndexPriceId = -67, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 3), PriceCode = priceCode },
                new(){ IndexPriceId = -68, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 3), PriceCode = priceCode },
                new(){ IndexPriceId = -69, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 3), PriceCode = priceCode },
                new(){ IndexPriceId = -70, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 6), PriceCode = priceCode },
                new(){ IndexPriceId = -71, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 6), PriceCode = priceCode },
                new(){ IndexPriceId = -72, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 6), PriceCode = priceCode },
                new(){ IndexPriceId = -73, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 7), PriceCode = priceCode },
                new(){ IndexPriceId = -74, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 7), PriceCode = priceCode },
                new(){ IndexPriceId = -75, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 7), PriceCode = priceCode },
                new(){ IndexPriceId = -76, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 8), PriceCode = priceCode },
                new(){ IndexPriceId = -77, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 8), PriceCode = priceCode },
                new(){ IndexPriceId = -78, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 8), PriceCode = priceCode },
                new(){ IndexPriceId = -79, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 9), PriceCode = priceCode },
                new(){ IndexPriceId = -80, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 9), PriceCode = priceCode },
                new(){ IndexPriceId = -81, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 9), PriceCode = priceCode },
                new(){ IndexPriceId = -82, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 10), PriceCode = priceCode },
                new(){ IndexPriceId = -83, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 10), PriceCode = priceCode },
                new(){ IndexPriceId = -84, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 10), PriceCode = priceCode },
                new(){ IndexPriceId = -85, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 13), PriceCode = priceCode },
                new(){ IndexPriceId = -86, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 13), PriceCode = priceCode },
                new(){ IndexPriceId = -87, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 13), PriceCode = priceCode },
                new(){ IndexPriceId = -88, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 14), PriceCode = priceCode },
                new(){ IndexPriceId = -89, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 14), PriceCode = priceCode },
                new(){ IndexPriceId = -90, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 14), PriceCode = priceCode },
                new(){ IndexPriceId = -91, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 15), PriceCode = priceCode },
                new(){ IndexPriceId = -92, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 15), PriceCode = priceCode },
                new(){ IndexPriceId = -93, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 15), PriceCode = priceCode },
                new(){ IndexPriceId = -94, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 16), PriceCode = priceCode },
                new(){ IndexPriceId = -95, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 16), PriceCode = priceCode },
                new(){ IndexPriceId = -96, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 16), PriceCode = priceCode },
                new(){ IndexPriceId = -97, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 17), PriceCode = priceCode },
                new(){ IndexPriceId = -98, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 17), PriceCode = priceCode },
                new(){ IndexPriceId = -99, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 17), PriceCode = priceCode },
                new(){ IndexPriceId = -100, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 21), PriceCode = priceCode },
                new(){ IndexPriceId = -101, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 21), PriceCode = priceCode },
                new(){ IndexPriceId = -102, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 21), PriceCode = priceCode },
                new(){ IndexPriceId = -103, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 22), PriceCode = priceCode },
                new(){ IndexPriceId = -104, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 22), PriceCode = priceCode },
                new(){ IndexPriceId = -105, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 22), PriceCode = priceCode },
                new(){ IndexPriceId = -106, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 23), PriceCode = priceCode },
                new(){ IndexPriceId = -107, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 23), PriceCode = priceCode },
                new(){ IndexPriceId = -108, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 23), PriceCode = priceCode },
                new(){ IndexPriceId = -109, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 24), PriceCode = priceCode },
                new(){ IndexPriceId = -110, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 24), PriceCode = priceCode },
                new(){ IndexPriceId = -111, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 24), PriceCode = priceCode },
                new(){ IndexPriceId = -112, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 27), PriceCode = priceCode },
                new(){ IndexPriceId = -113, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 27), PriceCode = priceCode },
                new(){ IndexPriceId = -114, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 27), PriceCode = priceCode },
                new(){ IndexPriceId = -115, MarketIndexId = -3, PriceDate = new DateTime(2023, 2, 28), PriceCode = priceCode },
                new(){ IndexPriceId = -116, MarketIndexId = -4, PriceDate = new DateTime(2023, 2, 28), PriceCode = priceCode },
                new(){ IndexPriceId = -117, MarketIndexId = -2, PriceDate = new DateTime(2023, 2, 28), PriceCode = priceCode },
                new(){ IndexPriceId = -118, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 1), PriceCode = priceCode },
                new(){ IndexPriceId = -119, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 1), PriceCode = priceCode },
                new(){ IndexPriceId = -120, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 1), PriceCode = priceCode },
                new(){ IndexPriceId = -121, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 2), PriceCode = priceCode },
                new(){ IndexPriceId = -122, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 2), PriceCode = priceCode },
                new(){ IndexPriceId = -123, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 2), PriceCode = priceCode },
                new(){ IndexPriceId = -124, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 3), PriceCode = priceCode },
                new(){ IndexPriceId = -125, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 3), PriceCode = priceCode },
                new(){ IndexPriceId = -126, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 3), PriceCode = priceCode },
                new(){ IndexPriceId = -127, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 6), PriceCode = priceCode },
                new(){ IndexPriceId = -128, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 6), PriceCode = priceCode },
                new(){ IndexPriceId = -129, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 6), PriceCode = priceCode },
                new(){ IndexPriceId = -130, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 7), PriceCode = priceCode },
                new(){ IndexPriceId = -131, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 7), PriceCode = priceCode },
                new(){ IndexPriceId = -132, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 7), PriceCode = priceCode },
                new(){ IndexPriceId = -133, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 8), PriceCode = priceCode },
                new(){ IndexPriceId = -134, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 8), PriceCode = priceCode },
                new(){ IndexPriceId = -135, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 8), PriceCode = priceCode },
                new(){ IndexPriceId = -136, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 9), PriceCode = priceCode },
                new(){ IndexPriceId = -137, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 9), PriceCode = priceCode },
                new(){ IndexPriceId = -138, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 9), PriceCode = priceCode },
                new(){ IndexPriceId = -139, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 10), PriceCode = priceCode },
                new(){ IndexPriceId = -140, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 10), PriceCode = priceCode },
                new(){ IndexPriceId = -141, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 10), PriceCode = priceCode },
                new(){ IndexPriceId = -142, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 13), PriceCode = priceCode },
                new(){ IndexPriceId = -143, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 13), PriceCode = priceCode },
                new(){ IndexPriceId = -144, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 13), PriceCode = priceCode },
                new(){ IndexPriceId = -145, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 14), PriceCode = priceCode },
                new(){ IndexPriceId = -146, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 14), PriceCode = priceCode },
                new(){ IndexPriceId = -147, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 14), PriceCode = priceCode },
                new(){ IndexPriceId = -148, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 15), PriceCode = priceCode },
                new(){ IndexPriceId = -149, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 15), PriceCode = priceCode },
                new(){ IndexPriceId = -150, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 15), PriceCode = priceCode },
                new(){ IndexPriceId = -151, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 16), PriceCode = priceCode },
                new(){ IndexPriceId = -152, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 16), PriceCode = priceCode },
                new(){ IndexPriceId = -153, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 16), PriceCode = priceCode },
                new(){ IndexPriceId = -154, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 17), PriceCode = priceCode },
                new(){ IndexPriceId = -155, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 17), PriceCode = priceCode },
                new(){ IndexPriceId = -156, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 17), PriceCode = priceCode },
                new(){ IndexPriceId = -157, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 20), PriceCode = priceCode },
                new(){ IndexPriceId = -158, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 20), PriceCode = priceCode },
                new(){ IndexPriceId = -159, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 20), PriceCode = priceCode },
                new(){ IndexPriceId = -160, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 21), PriceCode = priceCode },
                new(){ IndexPriceId = -161, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 21), PriceCode = priceCode },
                new(){ IndexPriceId = -162, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 21), PriceCode = priceCode },
                new(){ IndexPriceId = -163, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 22), PriceCode = priceCode },
                new(){ IndexPriceId = -164, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 22), PriceCode = priceCode },
                new(){ IndexPriceId = -165, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 22), PriceCode = priceCode },
                new(){ IndexPriceId = -166, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 23), PriceCode = priceCode },
                new(){ IndexPriceId = -167, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 23), PriceCode = priceCode },
                new(){ IndexPriceId = -168, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 23), PriceCode = priceCode },
                new(){ IndexPriceId = -169, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 24), PriceCode = priceCode },
                new(){ IndexPriceId = -170, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 24), PriceCode = priceCode },
                new(){ IndexPriceId = -171, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 24), PriceCode = priceCode },
                new(){ IndexPriceId = -172, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 27), PriceCode = priceCode },
                new(){ IndexPriceId = -173, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 27), PriceCode = priceCode },
                new(){ IndexPriceId = -174, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 27), PriceCode = priceCode },
                new(){ IndexPriceId = -175, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 28), PriceCode = priceCode },
                new(){ IndexPriceId = -176, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 28), PriceCode = priceCode },
                new(){ IndexPriceId = -177, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 28), PriceCode = priceCode },
                new(){ IndexPriceId = -178, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 29), PriceCode = priceCode },
                new(){ IndexPriceId = -179, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 29), PriceCode = priceCode },
                new(){ IndexPriceId = -180, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 29), PriceCode = priceCode },
                new(){ IndexPriceId = -181, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 30), PriceCode = priceCode },
                new(){ IndexPriceId = -182, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 30), PriceCode = priceCode },
                new(){ IndexPriceId = -183, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 30), PriceCode = priceCode },
                new(){ IndexPriceId = -184, MarketIndexId = -3, PriceDate = new DateTime(2023, 3, 31), PriceCode = priceCode },
                new(){ IndexPriceId = -185, MarketIndexId = -4, PriceDate = new DateTime(2023, 3, 31), PriceCode = priceCode },
                new(){ IndexPriceId = -186, MarketIndexId = -2, PriceDate = new DateTime(2023, 3, 31), PriceCode = priceCode }
            };

            configurationCollection
                .WithConfiguration(NewConfiguration(sourceGuid, marketIndices))
                .WithConfiguration(NewConfiguration(sourceGuid, marketIndexRates));

            return configurationCollection;
        }


        /// <summary>
        /// Seeds this <see cref="IConfigurationCollection"/> with sample data for:
        /// <list type="bullet">
        /// <item><see cref="BankTransactionCode"/></item>
        /// <item><see cref="BankTransactionCodeAttributeMemberEntry"/></item>
        /// </list>
        /// </summary>
        /// <param name="configurationCollection"></param>
        /// <returns>This <see cref="IConfigurationCollection"/> for method chaining.</returns>
        public static IConfigurationCollection WithSample_BankTransactionCodeGraph(
            this IConfigurationCollection configurationCollection)
        {

            var bankTransactionCodes = new BankTransactionCode[]
            {
                new() { TransactionCodeId = -5, TransactionCode = "electricity", DisplayName = "Electricity Service" },
                new() { TransactionCodeId = -7, TransactionCode = "media", DisplayName = "Entertainment" },
                new() { TransactionCodeId = -9, TransactionCode = "gas", DisplayName = "Gasoline/Fuel" },
                new() { TransactionCodeId = -12, TransactionCode = "medical", DisplayName = "Healthcare/Medical" },
                new() { TransactionCodeId = -15, TransactionCode = "insurance", DisplayName = "Insurance" },
                new() { TransactionCodeId = -16, TransactionCode = "internet", DisplayName = "Internet Service" },
                new() { TransactionCodeId = -21, TransactionCode = "mortgage/rent", DisplayName = "Mortgage/Rent" },
                new() { TransactionCodeId = -23, TransactionCode = "dineout", DisplayName = "Restaurants/Dining" },
                new() { TransactionCodeId = -42, TransactionCode = "salary", DisplayName = "Salary/Wages" }
            };

            return configurationCollection;
        }

        /// <summary>
        /// Seeds this <see cref="IConfigurationCollection"/> with sample data for:
        /// <list type="bullet">
        /// <item><see cref="InvestmentStrategy"/></item>
        /// <item><see cref="InvestmentStrategyTarget"/></item>
        /// </list>
        /// Depends on <see cref="WithSample_CountryAttributeEntries(IConfigurationCollection)"/>.
        /// </summary>
        /// <param name="configurationCollection"></param>
        /// <returns>This <see cref="IConfigurationCollection"/> for method chaining.</returns>
        public static IConfigurationCollection WithSample_InvestmentStrategyGraph(
            this IConfigurationCollection configurationCollection)
        {
            const string sourceGuid = "{BDC0F7E6-1C83-4B72-B08C-8EE0536E6634}";

            var investmentModels = new InvestmentStrategy[]
            {
                new() { InvestmentStrategyId = -1, DisplayName = "Retirement", Notes = "Retirement Strategy" },
                new() { InvestmentStrategyId = -2, DisplayName = "YOLOS", Notes = "Risky Bets Strategy"}
            };

            var modelTargets = new InvestmentStrategyTarget[]
            {
                new() { InvestmentStrategyId = -1, AttributeMemberId = -100, EffectiveDate = new DateTime(2021, 12, 31), Weight = 0.8M },
                new() { InvestmentStrategyId = -1, AttributeMemberId = -101, EffectiveDate = new DateTime(2021, 12, 31), Weight = 0.2M },
                new() { InvestmentStrategyId = -1, AttributeMemberId = -951, EffectiveDate = new DateTime(2015, 6, 30), Weight = 0.85M },
                new() { InvestmentStrategyId = -1, AttributeMemberId = -952, EffectiveDate = new DateTime(2015, 6, 30), Weight = 0.15M },

                new() { InvestmentStrategyId = -2, AttributeMemberId = -102, EffectiveDate = new DateTime(2019, 9, 30), Weight = 0.6M },
                new() { InvestmentStrategyId = -2, AttributeMemberId = -103, EffectiveDate = new DateTime(2019, 9, 30), Weight = 0.4M },

                new() { InvestmentStrategyId = -2, AttributeMemberId = -952, EffectiveDate = new DateTime(2015, 6, 30), Weight = 0.35M },
                new() { InvestmentStrategyId = -2, AttributeMemberId = -953, EffectiveDate = new DateTime(2015, 6, 30), Weight = 0.65M },
            };

            configurationCollection
                .WithConfiguration(NewConfiguration(sourceGuid, investmentModels))
                .WithConfiguration(NewConfiguration(sourceGuid, modelTargets));

            return configurationCollection;
        }

        public static IConfigurationCollection WithSample_SecurityGraph(
            this IConfigurationCollection configurationCollection)
        {
            const string sourceGuid = "{9B3CF420-F806-49B4-B810-72FA4D1EC804}";

            var securityObjects = 
                from object[] row in new object[,]
                {
                    { -761, "Alexander Saches Growth Equity Fund", "Alexander Sachs Group", false, false, -302, -8 },
                    { -442, "Alexander Sachs Balanced Fund", "Alexander Sachs Group", false, false, -303, null },
                    { -574, "Sachs Industrial Fund", "Alexander Sachs Group", false, false, -303, null },
                    { -578, "Harmonia Investment Bond ETF", "Alexander Sachs Group", false, false, -303, null },
                    { -315, "AlphaTech Corporation", "AlphaTech Corporation", false, false, -300, -5 },
                    { -759, "Cygnus Systems Corporation", "Cygnus Systems Corporation", false, false, -300, -5 },
                    { -411, "Cygnus Sustainable Growth Fund", "E. Logan Asset Management", false, false, -302, -9 },
                    { -577, "E. Logan Global Equity Fund", "E. Logan Asset Management", false, false, -303, null },
                    { -745, "Celestial Bond ETF", "Luminous Investments", false, false, -302, -8 },
                    { -747, "StellarCom Communication Technology ETF", "Luminous Investments", false, false, -302, -8 },
                    { -748, "LMN 1/19/2024 15.00 Call", "Luminous Investments", false, false, -310, null },
                    { -392, "Mercury Capital Small-Cap Growth Fund", "Mercury Capital Group", false, false, -302, -8 },
                    { -482, "MindShares", "MindShares", false, false, -300, -5 },
                    { -400, "NebulaTech Technology ETF", "Nebula Holdings", false, false, -302, -8 },
                    { -728, "Nebula Laboratories", "Nebula Laboratories", false, false, -300, -5 },
                    { -397, "StellarInvest Large-Cap Value Fund", "Oceanic Finance Solutions", false, false, -302, -8 },
                    { -514, "Oceanic Finance Bond Fund", "Oceanic Finance Solutions", false, false, -302, -8 },
                    { -523, "Pinnacle Ventures", "Pinnacle Ventures", false, false, -300, -2 },
                    { -325, "QuantumSoft Inc.", "QuantumSoft Inc.", false, false, -300, -5 },
                    { -416, "Spectrum Bank Deposit", "Spectrum Financial Group", true, false, -319, null },
                    { -760, "Spectrum Financial Services", "Spectrum Financial Services", false, false, -300, -2 },
                    { -493, "Stellar Wealth Management", "Stellar Wealth Management", false, false, -300, -2 },
                    { -403, "Luminous Energy ETF", "Stellar Wealth Management", false, false, -302, -8 },
                    { -406, "Visionary Global Equity Fund", "Stellar Wealth Management", false, false, -302, -8 },
                    { -575, "Forestbrook Renewable Energy Fund", "Stellar Wealth Management", false, false, -303, null },
                    { -576, "FutureEnergy Clean Energy Stock", "Stellar Wealth Management", false, false, -303, null },
                    { -432, "Government Money Fund", "Stellar Wealth Management", true, false, -317, null },
                    { -758, "LunaticornCoin", "Unicorn Network", true, true, -312, null },
                    { -727, "Unity Funds", "Unity Funds", false, false, -300, -5 },
                }
                select row;

            var securities = securityObjects
                .Select(row =>
                    new Security()
                    {
                        SecurityId = Convert.ToInt32(row[0]),
                        SecurityDescription = Convert.ToString(row[1]),
                        Issuer = Convert.ToString(row[2]),
                        HasPerpetualPrice = Convert.ToBoolean(row[3]),
                        HasPerpetualMarket = Convert.ToBoolean(row[4]),
                        SecurityTypeId = Convert.ToInt32(row[5]),
                        SecurityExchangeId = row[6] as int?
                    })
                .ToArray();

            var symbols = new SecuritySymbol[]
            {
                new() { SymbolId = -2, SecurityId = -315, SymbolTypeId = -40, Ticker = "ATECH", EffectiveDate = new DateTime(2018, 2, 5) },
                new() { SymbolId = -3, SecurityId = -325, SymbolTypeId = -40, Ticker = "QSOFT", EffectiveDate = new DateTime(2016, 8, 22) },
                new() { SymbolId = -4, SecurityId = -392, SymbolTypeId = -40, Ticker = "MCGF", EffectiveDate = new DateTime(2019, 3, 19) },
                new() { SymbolId = -5, SecurityId = -397, SymbolTypeId = -40, Ticker = "SLCX", EffectiveDate = new DateTime(2019, 3, 19) },
                new() { SymbolId = -6, SecurityId = -400, SymbolTypeId = -40, Ticker = "NEBU", EffectiveDate = new DateTime(2018, 7, 27) },
                new() { SymbolId = -7, SecurityId = -403, SymbolTypeId = -40, Ticker = "LUMIN", EffectiveDate = new DateTime(2018, 6, 15) },
                new() { SymbolId = -8, SecurityId = -406, SymbolTypeId = -40, Ticker = "VISG", EffectiveDate = new DateTime(2019, 3, 19) },
                new() { SymbolId = -9, SecurityId = -411, SymbolTypeId = -40, Ticker = "CSG", EffectiveDate = new DateTime(2019, 3, 19) },
                new() { SymbolId = -10, SecurityId = -416, SymbolTypeId = -20, CustomSymbol = "SBP", EffectiveDate = new DateTime(2007, 12, 31) },
                new() { SymbolId = -11, SecurityId = -432, SymbolTypeId = -40, Ticker = "SGOXX", EffectiveDate = new DateTime(2018, 6, 19) },
                new() { SymbolId = -12, SecurityId = -442, SymbolTypeId = -40, Ticker = "ASBX", EffectiveDate = new DateTime(2016, 7, 29) },
                new() { SymbolId = -13, SecurityId = -482, SymbolTypeId = -40, Ticker = "MIND", EffectiveDate = new DateTime(2020, 3, 16) },
                new() { SymbolId = -14, SecurityId = -493, SymbolTypeId = -40, Ticker = "SWM", EffectiveDate = new DateTime(2020, 6, 23) },
                new() { SymbolId = -15, SecurityId = -514, SymbolTypeId = -40, Ticker = "OFB", EffectiveDate = new DateTime(2020, 10, 2) },
                new() { SymbolId = -16, SecurityId = -523, SymbolTypeId = -40, Ticker = "PV", EffectiveDate = new DateTime(2020, 10, 30) },
                new() { SymbolId = -17, SecurityId = -574, SymbolTypeId = -40, Ticker = "SIF", EffectiveDate = new DateTime(2021, 1, 13) },
                new() { SymbolId = -18, SecurityId = -575, SymbolTypeId = -40, Ticker = "FREF", EffectiveDate = new DateTime(2021, 1, 13) },
                new() { SymbolId = -19, SecurityId = -576, SymbolTypeId = -40, Ticker = "FECES", EffectiveDate = new DateTime(2021, 1, 13) },
                new() { SymbolId = -20, SecurityId = -577, SymbolTypeId = -40, Ticker = "ELGEF", EffectiveDate = new DateTime(2021, 1, 13) },
                new() { SymbolId = -21, SecurityId = -578, SymbolTypeId = -40, Ticker = "HIBETF", EffectiveDate = new DateTime(2021, 1, 13) },
                new() { SymbolId = -22, SecurityId = -727, SymbolTypeId = -40, Ticker = "UF", EffectiveDate = new DateTime(2021, 8, 25) },
                new() { SymbolId = -23, SecurityId = -728, SymbolTypeId = -40, Ticker = "NL", EffectiveDate = new DateTime(2021, 8, 27) },
                new() { SymbolId = -24, SecurityId = -745, SymbolTypeId = -40, Ticker = "CBETF", EffectiveDate = new DateTime(2021, 9, 28) },
                new() { SymbolId = -25, SecurityId = -747, SymbolTypeId = -40, Ticker = "SCOMM", EffectiveDate = new DateTime(2021, 9, 30) },
                new() { SymbolId = -26, SecurityId = -748, SymbolTypeId = -30, OptionTicker = "LMNC202401190001500C", EffectiveDate = new DateTime(1753, 1, 1) },
                new() { SymbolId = -27, SecurityId = -758, SymbolTypeId = -40, Ticker = "LCOIN", EffectiveDate = new DateTime(2022, 5, 12) },
                new() { SymbolId = -28, SecurityId = -759, SymbolTypeId = -40, Ticker = "CSC", EffectiveDate = new DateTime(2020, 1, 1) },
                new() { SymbolId = -29, SecurityId = -760, SymbolTypeId = -40, Ticker = "SFS", EffectiveDate = new DateTime(2023, 3, 14) },
                new() { SymbolId = -30, SecurityId = -761, SymbolTypeId = -40, Ticker = "ASGEF", EffectiveDate = new DateTime(2023, 4, 20) }
            };

            var minDate = DateTime.MinValue.Date;

            var securityAttributes = new SecurityAttributeMemberEntry[]
            {
                // ASSET CLASS
                new() { SecurityId = -315, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -325, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -392, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -397, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -400, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -403, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -406, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -411, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -416, AttributeMemberId = -104, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -432, AttributeMemberId = -104, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -442, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -482, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -493, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -514, AttributeMemberId = -101, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -523, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -574, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -575, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -576, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -577, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -578, AttributeMemberId = -101, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -727, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -728, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -745, AttributeMemberId = -101, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -747, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -748, AttributeMemberId = -102, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -758, AttributeMemberId = -103, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -759, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -760, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -761, AttributeMemberId = -100, EffectiveDate = minDate, Weight = 1M },

                // COUNTRY EXPOSURE
                new() { SecurityId = -325,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -392,AttributeMemberId = -814, EffectiveDate = minDate, Weight = 0.0063M },
                new() { SecurityId = -392,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.9937M },
                new() { SecurityId = -397,AttributeMemberId = -674, EffectiveDate = minDate, Weight = 0.0178M },
                new() { SecurityId = -397,AttributeMemberId = -709, EffectiveDate = minDate, Weight = 0.035M },
                new() { SecurityId = -397,AttributeMemberId = -808, EffectiveDate = minDate, Weight = 0.0385M },
                new() { SecurityId = -397,AttributeMemberId = -659, EffectiveDate = minDate, Weight = 0.046M },
                new() { SecurityId = -397,AttributeMemberId = -813, EffectiveDate = minDate, Weight = 0.0581M },
                new() { SecurityId = -397,AttributeMemberId = -849, EffectiveDate = minDate, Weight = 0.0626M },
                new() { SecurityId = -397,AttributeMemberId = -756, EffectiveDate = minDate, Weight = 0.0706M },
                new() { SecurityId = -397,AttributeMemberId = -682, EffectiveDate = minDate, Weight = 0.1204M },
                new() { SecurityId = -397,AttributeMemberId = -814, EffectiveDate = minDate, Weight = 0.1567M },
                new() { SecurityId = -397,AttributeMemberId = -675, EffectiveDate = minDate, Weight = 0.1603M },
                new() { SecurityId = -397,AttributeMemberId = -833, EffectiveDate = minDate, Weight = 0.234M },
                new() { SecurityId = -400,AttributeMemberId = -814, EffectiveDate = minDate, Weight = 0.0009M },
                new() { SecurityId = -400,AttributeMemberId = -778, EffectiveDate = minDate, Weight = 0.0014M },
                new() { SecurityId = -400,AttributeMemberId = -813, EffectiveDate = minDate, Weight = 0.0017M },
                new() { SecurityId = -400,AttributeMemberId = -702, EffectiveDate = minDate, Weight = 0.0022M },
                new() { SecurityId = -400,AttributeMemberId = -833, EffectiveDate = minDate, Weight = 0.0052M },
                new() { SecurityId = -400,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.9886M },
                new() { SecurityId = -403,AttributeMemberId = -756, EffectiveDate = minDate, Weight = 0.0014M },
                new() { SecurityId = -403,AttributeMemberId = -814, EffectiveDate = minDate, Weight = 0.0031M },
                new() { SecurityId = -403,AttributeMemberId = -833, EffectiveDate = minDate, Weight = 0.0059M },
                new() { SecurityId = -403,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.9896M },
                new() { SecurityId = -406,AttributeMemberId = -718, EffectiveDate = minDate, Weight = 0.0174M },
                new() { SecurityId = -406,AttributeMemberId = -675, EffectiveDate = minDate, Weight = 0.0266M },
                new() { SecurityId = -406,AttributeMemberId = -682, EffectiveDate = minDate, Weight = 0.0274M },
                new() { SecurityId = -406,AttributeMemberId = -644, EffectiveDate = minDate, Weight = 0.0292M },
                new() { SecurityId = -406,AttributeMemberId = -833, EffectiveDate = minDate, Weight = 0.0634M },
                new() { SecurityId = -406,AttributeMemberId = -699, EffectiveDate = minDate, Weight = 0.0843M },
                new() { SecurityId = -406,AttributeMemberId = -814, EffectiveDate = minDate, Weight = 0.0896M },
                new() { SecurityId = -406,AttributeMemberId = -849, EffectiveDate = minDate, Weight = 0.1161M },
                new() { SecurityId = -406,AttributeMemberId = -711, EffectiveDate = minDate, Weight = 0.1412M },
                new() { SecurityId = -406,AttributeMemberId = -639, EffectiveDate = minDate, Weight = 0.1982M },
                new() { SecurityId = -406,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.2066M },
                new() { SecurityId = -411,AttributeMemberId = -814, EffectiveDate = minDate, Weight = 0.0091M },
                new() { SecurityId = -411,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.9909M },
                new() { SecurityId = -442,AttributeMemberId = -734, EffectiveDate = minDate, Weight = 0.0202M },
                new() { SecurityId = -442,AttributeMemberId = -703, EffectiveDate = minDate, Weight = 0.0215M },
                new() { SecurityId = -442,AttributeMemberId = -743, EffectiveDate = minDate, Weight = 0.0264M },
                new() { SecurityId = -442,AttributeMemberId = -819, EffectiveDate = minDate, Weight = 0.0316M },
                new() { SecurityId = -442,AttributeMemberId = -805, EffectiveDate = minDate, Weight = 0.0396M },
                new() { SecurityId = -442,AttributeMemberId = -794, EffectiveDate = minDate, Weight = 0.0439M },
                new() { SecurityId = -442,AttributeMemberId = -630, EffectiveDate = minDate, Weight = 0.0605M },
                new() { SecurityId = -442,AttributeMemberId = -849, EffectiveDate = minDate, Weight = 0.0841M },
                new() { SecurityId = -442,AttributeMemberId = -816, EffectiveDate = minDate, Weight = 0.1609M },
                new() { SecurityId = -442,AttributeMemberId = -702, EffectiveDate = minDate, Weight = 0.1745M },
                new() { SecurityId = -442,AttributeMemberId = -644, EffectiveDate = minDate, Weight = 0.3368M },
                new() { SecurityId = -482,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -493,AttributeMemberId = -849, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -514,AttributeMemberId = -833, EffectiveDate = minDate, Weight = 0.0031M },
                new() { SecurityId = -514,AttributeMemberId = -702, EffectiveDate = minDate, Weight = 0.0038M },
                new() { SecurityId = -514,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.9931M },
                new() { SecurityId = -523,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -574,AttributeMemberId = -816, EffectiveDate = minDate, Weight = 0.003M },
                new() { SecurityId = -574,AttributeMemberId = -639, EffectiveDate = minDate, Weight = 0.0032M },
                new() { SecurityId = -574,AttributeMemberId = -644, EffectiveDate = minDate, Weight = 0.0033M },
                new() { SecurityId = -574,AttributeMemberId = -814, EffectiveDate = minDate, Weight = 0.0042M },
                new() { SecurityId = -574,AttributeMemberId = -799, EffectiveDate = minDate, Weight = 0.0068M },
                new() { SecurityId = -574,AttributeMemberId = -833, EffectiveDate = minDate, Weight = 0.008M },
                new() { SecurityId = -574,AttributeMemberId = -756, EffectiveDate = minDate, Weight = 0.01M },
                new() { SecurityId = -574,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.9615M },
                new() { SecurityId = -575,AttributeMemberId = -799, EffectiveDate = minDate, Weight = 0.0003M },
                new() { SecurityId = -575,AttributeMemberId = -756, EffectiveDate = minDate, Weight = 0.0013M },
                new() { SecurityId = -575,AttributeMemberId = -814, EffectiveDate = minDate, Weight = 0.0038M },
                new() { SecurityId = -575,AttributeMemberId = -833, EffectiveDate = minDate, Weight = 0.0058M },
                new() { SecurityId = -575,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.9888M },
                new() { SecurityId = -576,AttributeMemberId = -639, EffectiveDate = minDate, Weight = 0.0505M },
                new() { SecurityId = -576,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.9495M },
                new() { SecurityId = -577,AttributeMemberId = -711, EffectiveDate = minDate, Weight = 0.0006M },
                new() { SecurityId = -577,AttributeMemberId = -708, EffectiveDate = minDate, Weight = 0.0062M },
                new() { SecurityId = -577,AttributeMemberId = -813, EffectiveDate = minDate, Weight = 0.0077M },
                new() { SecurityId = -577,AttributeMemberId = -706, EffectiveDate = minDate, Weight = 0.0191M },
                new() { SecurityId = -577,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.9664M },
                new() { SecurityId = -578,AttributeMemberId = -659, EffectiveDate = minDate, Weight = 0.0215M },
                new() { SecurityId = -578,AttributeMemberId = -709, EffectiveDate = minDate, Weight = 0.0228M },
                new() { SecurityId = -578,AttributeMemberId = -813, EffectiveDate = minDate, Weight = 0.0623M },
                new() { SecurityId = -578,AttributeMemberId = -756, EffectiveDate = minDate, Weight = 0.0693M },
                new() { SecurityId = -578,AttributeMemberId = -682, EffectiveDate = minDate, Weight = 0.0779M },
                new() { SecurityId = -578,AttributeMemberId = -849, EffectiveDate = minDate, Weight = 0.0926M },
                new() { SecurityId = -578,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.0927M },
                new() { SecurityId = -578,AttributeMemberId = -711, EffectiveDate = minDate, Weight = 0.1102M },
                new() { SecurityId = -578,AttributeMemberId = -833, EffectiveDate = minDate, Weight = 0.1217M },
                new() { SecurityId = -578,AttributeMemberId = -814, EffectiveDate = minDate, Weight = 0.1375M },
                new() { SecurityId = -578,AttributeMemberId = -675, EffectiveDate = minDate, Weight = 0.1915M },
                new() { SecurityId = -727,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -728,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -745,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -747,AttributeMemberId = -833, EffectiveDate = minDate, Weight = 0.0071M },
                new() { SecurityId = -747,AttributeMemberId = -814, EffectiveDate = minDate, Weight = 0.0244M },
                new() { SecurityId = -747,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 0.9685M },
                new() { SecurityId = -748,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -760,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 1M },
                new() { SecurityId = -761,AttributeMemberId = -835, EffectiveDate = minDate, Weight = 1M },
            };

            var securityPrices =
                (from object[] row in new object[,]
                {
                    { -315, new DateTime(2023, 1, 26), 85.85M, 66.22M, 66.62M, 67.86M, 50984056 },
                    { -315, new DateTime(2023, 1, 20), 65.7M, 67.03M, 69.7M, 71.85M, 47768262 },
                    { -315, new DateTime(2023, 1, 23), 77.74M, 69.35M, 85.17M, 75.09M, 83422949 },
                    { -315, new DateTime(2023, 1, 24), 73.8M, 64.97M, 76.79M, 84.99M, 62517159 },
                    { -315, new DateTime(2023, 1, 25), 70.17M, 66.26M, 75.25M, 72.17M, 44141391 },
                    { -315, new DateTime(2023, 1, 27), 75.8M, 78.37M, 83.23M, 75.86M, 64442724 },
                    { -315, new DateTime(2023, 1, 30), 65.25M, 82.67M, 79.03M, 64.07M, 41949017 },
                    { -315, new DateTime(2023, 1, 31), 70.99M, 76.69M, 89.12M, 82.45M, 66328191 },
                    { -315, new DateTime(2023, 2, 1), 81.38M, 81.45M, 86.59M, 74.93M, 147107506 },
                    { -315, new DateTime(2023, 2, 2), 87.42M, 93.28M, 87.71M, 69.86M, 91317531 },
                    { -315, new DateTime(2023, 2, 3), 77.86M, 81.9M, 93.49M, 77.16M, 61766519 },
                    { -315, new DateTime(2023, 2, 6), 87.34M, 74.16M, 74.02M, 70.2M, 50998002 },
                    { -315, new DateTime(2023, 2, 7), 91.21M, 74.95M, 90.71M, 74.1M, 71003060 },
                    { -315, new DateTime(2023, 2, 8), 83.56M, 86.16M, 89.11M, 83.63M, 48809509 },
                    { -315, new DateTime(2023, 2, 9), 88.95M, 87.33M, 90.57M, 80.75M, 45035356 },
                    { -315, new DateTime(2023, 2, 22), 80.46M, 69.31M, 80.6M, 60.56M, 53161493 },
                    { -315, new DateTime(2023, 2, 23), 77.93M, 89.96M, 69.49M, 74.59M, 75693247 },
                    { -315, new DateTime(2023, 2, 24), 77.68M, 75.86M, 75.84M, 82.13M, 46366241 },
                    { -315, new DateTime(2023, 2, 27), 81.32M, 77.39M, 82.67M, 81.91M, 41222685 },
                    { -315, new DateTime(2023, 2, 28), 73.14M, 75.38M, 90.47M, 74.69M, 44877075 },
                    { -315, new DateTime(2023, 3, 1), 69.58M, 73.76M, 69.55M, 73.15M, 44698056 },
                    { -315, new DateTime(2023, 3, 2), 81.43M, 76.72M, 73.39M, 69.01M, 54245594 },
                    { -315, new DateTime(2023, 3, 3), 83.97M, 80.07M, 90.88M, 74.65M, 53034116 },
                    { -315, new DateTime(2023, 3, 6), 87.7M, 80.2M, 79.25M, 77.06M, 60020128 },
                    { -315, new DateTime(2023, 3, 7), 82.42M, 71.28M, 81.58M, 79.64M, 65243358 },
                    { -315, new DateTime(2023, 3, 8), 84.23M, 85.44M, 87.58M, 83.55M, 71624381 },
                    { -315, new DateTime(2023, 3, 9), 78.83M, 85.66M, 96.7M, 80.13M, 85072187 },
                    { -315, new DateTime(2023, 3, 10), 82.74M, 87.4M, 88.39M, 68.93M, 76161382 },
                    { -315, new DateTime(2023, 3, 13), 71.05M, 77M, 79.22M, 80.04M, 67510242 },
                    { -315, new DateTime(2023, 2, 10), 78.2M, 79.47M, 80.02M, 74.99M, 45607117 },
                    { -315, new DateTime(2023, 2, 13), 84.27M, 78.04M, 85.83M, 86.06M, 47753469 },
                    { -315, new DateTime(2023, 2, 14), 82.67M, 80.5M, 84.54M, 86.02M, 54776302 },
                    { -315, new DateTime(2023, 2, 15), 83.91M, 85.32M, 98.78M, 83.66M, 42477393 },
                    { -315, new DateTime(2023, 2, 16), 79.03M, 89.06M, 83.62M, 90.96M, 49106494 },
                    { -315, new DateTime(2023, 2, 17), 85.45M, 75.78M, 84.78M, 81.7M, 51905304 },
                    { -315, new DateTime(2023, 2, 21), 72.65M, 76.53M, 89.43M, 80.27M, 44507747 },
                    { -315, new DateTime(2023, 3, 20), 110.64M, 99.41M, 98.35M, 85.54M, 80681546 },
                    { -315, new DateTime(2023, 4, 19), 78.63M, 94.37M, 88.2M, 85.14M, 40439760 },
                    { -315, new DateTime(2023, 4, 20), 81.45M, 87.19M, 90.03M, 85.42M, 45829036 },
                    { -315, new DateTime(2023, 4, 21), 83.17M, 85M, 104.13M, 92.58M, 47308369 },
                    { -315, new DateTime(2023, 3, 14), 93.76M, 79.62M, 85.64M, 74.51M, 67870015 },
                    { -315, new DateTime(2023, 4, 18), 87.13M, 91.64M, 87.63M, 93.72M, 40661555 },
                    { -315, new DateTime(2023, 3, 15), 94.61M, 82.01M, 92.82M, 83.11M, 85516774 },
                    { -315, new DateTime(2023, 3, 16), 112.86M, 76.38M, 95.28M, 89.6M, 125108392 },
                    { -315, new DateTime(2023, 3, 17), 102.21M, 86.13M, 103.7M, 103.69M, 86867965 },
                    { -315, new DateTime(2023, 3, 21), 89.91M, 97.81M, 102.79M, 90.34M, 93035078 },
                    { -315, new DateTime(2023, 3, 22), 93.91M, 106.27M, 95.98M, 90.94M, 112331879 },
                    { -315, new DateTime(2023, 3, 23), 96.78M, 105.84M, 105.88M, 113.59M, 85563681 },
                    { -315, new DateTime(2023, 3, 24), 103.24M, 100.71M, 96.78M, 96.12M, 60319821 },
                    { -315, new DateTime(2023, 3, 27), 90.38M, 105.86M, 97.13M, 94.47M, 64038943 },
                    { -315, new DateTime(2023, 3, 28), 100.94M, 95.43M, 107.15M, 96.46M, 59498542 },
                    { -315, new DateTime(2023, 3, 29), 97.61M, 99.08M, 99.14M, 103.23M, 57643913 },
                    { -315, new DateTime(2023, 3, 30), 105.68M, 94.33M, 102.46M, 98.71M, 67332683 },
                    { -315, new DateTime(2023, 3, 31), 96.48M, 96.36M, 103.66M, 100.16M, 60711541 },
                    { -315, new DateTime(2023, 4, 3), 98.36M, 91.46M, 93.78M, 100.06M, 54378380 },
                    { -315, new DateTime(2023, 4, 4), 96.57M, 100.21M, 96.98M, 108.89M, 36440890 },
                    { -315, new DateTime(2023, 4, 5), 100.92M, 89.26M, 87.93M, 84.41M, 49428293 },
                    { -315, new DateTime(2023, 4, 6), 94.67M, 83.24M, 84.17M, 81.25M, 46489914 },
                    { -315, new DateTime(2023, 4, 10), 102.42M, 98.55M, 92.66M, 99.03M, 51898103 },
                    { -315, new DateTime(2023, 4, 11), 100.92M, 91.75M, 87.43M, 97.73M, 51960320 },
                    { -315, new DateTime(2023, 4, 12), 87.15M, 102.34M, 92.57M, 91.47M, 55096009 },
                    { -315, new DateTime(2023, 4, 13), 89.77M, 88.56M, 96.25M, 98.07M, 38516524 },
                    { -315, new DateTime(2023, 4, 14), 96.15M, 85.74M, 90.23M, 84.69M, 45189667 },
                    { -315, new DateTime(2023, 4, 17), 87.96M, 99.09M, 95.72M, 80.26M, 45814300 },
                    { -325, new DateTime(2023, 2, 1), 259.06M, 252.22M, 231.51M, 254.68M, 30025205 },
                    { -325, new DateTime(2023, 2, 2), 281.69M, 257.81M, 249.16M, 291.41M, 46058808 },
                    { -325, new DateTime(2023, 2, 3), 226.15M, 272.61M, 281.55M, 220.32M, 31343769 },
                    { -325, new DateTime(2023, 2, 6), 268.37M, 247.07M, 278.19M, 266.94M, 22178389 },
                    { -325, new DateTime(2023, 2, 7), 255.36M, 243.89M, 263.83M, 247.39M, 54436844 },
                    { -325, new DateTime(2023, 2, 8), 246.04M, 302.03M, 246.94M, 267.72M, 54127281 },
                    { -325, new DateTime(2023, 2, 9), 260.03M, 285.19M, 283.07M, 261.41M, 41885587 },
                    { -325, new DateTime(2023, 1, 11), 240.6M, 229.36M, 255.32M, 231.7M, 27764275 },
                    { -325, new DateTime(2023, 1, 12), 255.97M, 226.58M, 235.2M, 258.24M, 27213326 },
                    { -325, new DateTime(2023, 1, 13), 274.92M, 238.22M, 226.6M, 218.96M, 20458101 },
                    { -325, new DateTime(2023, 1, 17), 221.09M, 258.18M, 248.19M, 260.68M, 29161008 },
                    { -325, new DateTime(2023, 1, 18), 238.92M, 252.5M, 209.13M, 208.1M, 26105316 },
                    { -325, new DateTime(2023, 1, 19), 195.77M, 210.43M, 222.98M, 218.57M, 30306061 },
                    { -325, new DateTime(2023, 1, 20), 215.05M, 241.49M, 207.58M, 217.93M, 34125030 },
                    { -325, new DateTime(2023, 1, 23), 238.32M, 253.89M, 251.81M, 227.4M, 34079439 },
                    { -325, new DateTime(2023, 1, 24), 258.86M, 229.45M, 241.5M, 242.7M, 38904398 },
                    { -325, new DateTime(2023, 1, 25), 223.04M, 216.61M, 245.74M, 240.98M, 65219961 },
                    { -325, new DateTime(2023, 1, 26), 236.64M, 231.36M, 247.84M, 227.37M, 35288578 },
                    { -325, new DateTime(2023, 1, 27), 253.86M, 253.17M, 247.81M, 220.82M, 27566782 },
                    { -325, new DateTime(2023, 1, 30), 249.69M, 238.23M, 225.81M, 261.24M, 23931864 },
                    { -325, new DateTime(2023, 1, 3), 236.18M, 223.54M, 249.71M, 221.5M, 27950765 },
                    { -325, new DateTime(2023, 1, 31), 267.35M, 221.32M, 251.72M, 238.31M, 27497133 },
                    { -325, new DateTime(2023, 1, 4), 214.27M, 258.48M, 248.48M, 245.55M, 46425110 },
                    { -325, new DateTime(2023, 3, 13), 248.95M, 221.89M, 282.97M, 280.5M, 33068355 },
                    { -325, new DateTime(2023, 3, 14), 246.12M, 253.29M, 227.85M, 226.71M, 34283126 },
                    { -325, new DateTime(2023, 3, 15), 261.45M, 291.2M, 269.86M, 236M, 42814291 },
                    { -325, new DateTime(2023, 3, 16), 287.15M, 250.35M, 314.79M, 262.21M, 51528749 },
                    { -325, new DateTime(2023, 3, 17), 231.44M, 284.05M, 318.89M, 267.28M, 61826172 },
                    { -325, new DateTime(2023, 3, 20), 290.93M, 272.06M, 302.43M, 265.97M, 40808131 },
                    { -325, new DateTime(2023, 3, 21), 255.54M, 275.44M, 276.08M, 276.03M, 31430926 },
                    { -325, new DateTime(2023, 3, 22), 294.44M, 242.22M, 254.41M, 313.36M, 35427826 },
                    { -325, new DateTime(2023, 3, 23), 244.95M, 274.04M, 283.57M, 289.65M, 35162738 },
                    { -325, new DateTime(2023, 3, 24), 312.38M, 279.89M, 267.56M, 265.34M, 26459599 },
                    { -325, new DateTime(2023, 3, 27), 268.83M, 251.75M, 285.88M, 267.17M, 24592856 },
                    { -325, new DateTime(2023, 3, 28), 290.71M, 257.09M, 282.7M, 258.19M, 18915567 },
                    { -325, new DateTime(2023, 3, 29), 300.91M, 330.45M, 277.75M, 282.13M, 21911894 },
                    { -325, new DateTime(2023, 3, 30), 289.45M, 276.98M, 278.71M, 287.13M, 27493906 },
                    { -325, new DateTime(2023, 3, 31), 303.12M, 295.43M, 284.84M, 280M, 33017783 },
                    { -325, new DateTime(2023, 4, 3), 240.88M, 295.22M, 250.03M, 256.24M, 23510056 },
                    { -325, new DateTime(2023, 4, 4), 254.33M, 284.13M, 270.93M, 259.77M, 24904441 },
                    { -325, new DateTime(2023, 4, 5), 281.94M, 259.92M, 272.79M, 280.98M, 24529410 },
                    { -325, new DateTime(2023, 4, 6), 301.59M, 253.25M, 310.29M, 294.56M, 28991986 },
                    { -325, new DateTime(2023, 1, 5), 224.27M, 269.76M, 252.18M, 207.51M, 39937745 },
                    { -325, new DateTime(2023, 1, 6), 223.62M, 207.47M, 210.81M, 182.31M, 48958159 },
                    { -325, new DateTime(2023, 1, 9), 234.56M, 223.53M, 231.06M, 233.73M, 28527656 },
                    { -325, new DateTime(2023, 1, 10), 241.41M, 225.38M, 236.61M, 232.96M, 24713776 },
                    { -325, new DateTime(2023, 2, 17), 256.72M, 279.27M, 265.55M, 232.61M, 32836850 },
                    { -325, new DateTime(2023, 2, 21), 224.67M, 223.08M, 262.63M, 242.23M, 28341450 },
                    { -325, new DateTime(2023, 4, 18), 262.93M, 301.53M, 285.35M, 265.58M, 20304677 },
                    { -325, new DateTime(2023, 4, 19), 319.35M, 284.94M, 328.47M, 298.91M, 17856777 },
                    { -325, new DateTime(2023, 4, 20), 282.37M, 276.18M, 302.51M, 272.15M, 21301299 },
                    { -325, new DateTime(2023, 4, 21), 311.52M, 301.16M, 277.15M, 259.23M, 21834430 },
                    { -325, new DateTime(2023, 2, 22), 235.43M, 246.71M, 275.56M, 227.13M, 21731925 },
                    { -325, new DateTime(2023, 2, 23), 260.45M, 247.72M, 216.76M, 229.44M, 29112145 },
                    { -325, new DateTime(2023, 2, 24), 238.9M, 245.82M, 262.48M, 237.51M, 26604158 },
                    { -325, new DateTime(2023, 2, 27), 233.19M, 269.46M, 219.96M, 220.83M, 21227557 },
                    { -325, new DateTime(2023, 2, 28), 212.9M, 244.22M, 276.93M, 278.46M, 24782832 },
                    { -325, new DateTime(2023, 3, 1), 237.88M, 225.08M, 262.58M, 245.5M, 24279363 },
                    { -325, new DateTime(2023, 3, 2), 262.04M, 256.52M, 229.53M, 275.59M, 24074658 },
                    { -325, new DateTime(2023, 3, 3), 266.17M, 272.88M, 249.98M, 243.22M, 31702409 },
                    { -325, new DateTime(2023, 3, 6), 217.4M, 286.32M, 268.31M, 267.26M, 23589336 },
                    { -325, new DateTime(2023, 3, 7), 259.87M, 280.19M, 217.8M, 260.35M, 21487370 },
                    { -325, new DateTime(2023, 3, 8), 259.06M, 246.59M, 264.54M, 244.93M, 15627329 },
                    { -325, new DateTime(2023, 3, 9), 230.46M, 293.27M, 280.91M, 244.3M, 25829971 },
                    { -325, new DateTime(2023, 3, 10), 240.76M, 261.14M, 244.23M, 278.34M, 27455173 },
                    { -325, new DateTime(2023, 2, 10), 254.82M, 251.64M, 284.31M, 276.4M, 22875729 },
                    { -325, new DateTime(2023, 2, 13), 268.13M, 278.26M, 312.82M, 271.03M, 44998050 },
                    { -325, new DateTime(2023, 2, 14), 284.6M, 293.79M, 269.3M, 303.87M, 39843945 },
                    { -325, new DateTime(2023, 2, 15), 258.09M, 246.85M, 323.62M, 244.79M, 27907455 },
                    { -325, new DateTime(2023, 2, 16), 284.91M, 289.42M, 318.89M, 248.63M, 31753308 },
                    { -325, new DateTime(2023, 4, 17), 276.82M, 273.84M, 291.44M, 270.88M, 25215268 },
                    { -325, new DateTime(2023, 4, 10), 317.63M, 324.2M, 298.24M, 312.04M, 20630080 },
                    { -325, new DateTime(2023, 4, 11), 306.35M, 317.37M, 309.01M, 274.05M, 28049658 },
                    { -325, new DateTime(2023, 4, 12), 297.67M, 251.74M, 297.36M, 275.98M, 28135013 },
                    { -325, new DateTime(2023, 4, 13), 300.93M, 304.03M, 294.75M, 310.68M, 25821036 },
                    { -325, new DateTime(2023, 4, 14), 318.36M, 283.81M, 275.24M, 323.71M, 20083191 },
                    { -392, new DateTime(2023, 1, 3), 80.79M, 73.39M, 78.47M, 78.44M, 3314896 },
                    { -392, new DateTime(2023, 1, 4), 81.3M, 76.51M, 81.13M, 76M, 4170990 },
                    { -392, new DateTime(2023, 1, 5), 72.47M, 86.52M, 69.41M, 76.65M, 2663402 },
                    { -392, new DateTime(2023, 1, 6), 71.63M, 76.58M, 79.03M, 68.75M, 3384100 },
                    { -392, new DateTime(2023, 1, 9), 74.9M, 71.84M, 71.45M, 81.66M, 4352117 },
                    { -392, new DateTime(2023, 1, 10), 86.68M, 80.91M, 75.9M, 77.14M, 3775569 },
                    { -392, new DateTime(2023, 2, 1), 68.92M, 81.67M, 79.57M, 87.58M, 4912686 },
                    { -392, new DateTime(2023, 2, 2), 72.43M, 77.34M, 74.02M, 66.26M, 5790110 },
                    { -392, new DateTime(2023, 2, 3), 75.14M, 75.19M, 86.26M, 85.41M, 3865739 },
                    { -392, new DateTime(2023, 2, 6), 73.63M, 70.14M, 82.99M, 77.28M, 3273986 },
                    { -392, new DateTime(2023, 2, 7), 75.3M, 84.74M, 76.79M, 68.16M, 4040260 },
                    { -392, new DateTime(2023, 2, 8), 62.88M, 80.14M, 79.52M, 77.93M, 2922780 },
                    { -392, new DateTime(2023, 2, 9), 80.4M, 77.78M, 77.99M, 84.01M, 2953406 },
                    { -392, new DateTime(2023, 1, 31), 80.98M, 74.3M, 69.27M, 75.57M, 4865784 },
                    { -392, new DateTime(2023, 1, 30), 73.41M, 72.92M, 78.11M, 72.13M, 2713383 },
                    { -392, new DateTime(2023, 1, 27), 79.26M, 83.27M, 72.92M, 75M, 3709732 },
                    { -392, new DateTime(2023, 1, 26), 82.14M, 71.06M, 80.2M, 75.24M, 2460540 },
                    { -392, new DateTime(2023, 1, 25), 83.41M, 84.78M, 74.7M, 74.18M, 3094388 },
                    { -392, new DateTime(2023, 3, 1), 73.01M, 75.36M, 72.7M, 69.88M, 3484325 },
                    { -392, new DateTime(2023, 3, 2), 80.16M, 74.6M, 77.57M, 76.27M, 2696539 },
                    { -392, new DateTime(2023, 3, 3), 78.1M, 80.31M, 78.79M, 78.54M, 2952104 },
                    { -392, new DateTime(2023, 3, 6), 80.4M, 67.12M, 95.49M, 74.47M, 2485696 },
                    { -392, new DateTime(2023, 3, 7), 74.21M, 85.99M, 74.79M, 79.29M, 2722204 },
                    { -392, new DateTime(2023, 3, 8), 80.59M, 76.52M, 72.29M, 74.45M, 3072342 },
                    { -392, new DateTime(2023, 3, 9), 74.78M, 71.41M, 81.58M, 75.43M, 4226465 },
                    { -392, new DateTime(2023, 3, 10), 74M, 66M, 73.31M, 69.34M, 5778872 },
                    { -392, new DateTime(2023, 3, 13), 75.51M, 71.46M, 77.45M, 65.58M, 12170674 },
                    { -392, new DateTime(2023, 3, 14), 82.81M, 72.17M, 75.67M, 71.89M, 3790698 },
                    { -392, new DateTime(2023, 3, 15), 57.73M, 80.33M, 66.43M, 67.96M, 6837051 },
                    { -392, new DateTime(2023, 3, 16), 62.86M, 69.72M, 69.18M, 68.03M, 3755456 },
                    { -392, new DateTime(2023, 3, 17), 86.12M, 74.51M, 66.81M, 72.74M, 4909782 },
                    { -392, new DateTime(2023, 3, 20), 74.01M, 69.13M, 80.79M, 71.48M, 3249108 },
                    { -392, new DateTime(2023, 3, 21), 76.59M, 71.35M, 72.94M, 82.35M, 3644994 },
                    { -392, new DateTime(2023, 3, 22), 79.47M, 80.03M, 63.18M, 61.16M, 3795704 },
                    { -392, new DateTime(2023, 3, 23), 69.38M, 63.32M, 73.28M, 64.47M, 4353444 },
                    { -392, new DateTime(2023, 3, 24), 71.81M, 71.65M, 61.58M, 76.55M, 3564522 },
                    { -392, new DateTime(2023, 3, 27), 73.38M, 71.87M, 63.29M, 72.6M, 3112873 },
                    { -392, new DateTime(2023, 3, 28), 69.99M, 64.2M, 70.17M, 73.03M, 3280671 },
                    { -392, new DateTime(2023, 3, 29), 77.65M, 68.96M, 80.72M, 74.99M, 2943792 },
                    { -392, new DateTime(2023, 3, 30), 70.72M, 76.27M, 68.86M, 80.34M, 3020583 },
                    { -392, new DateTime(2023, 3, 31), 76.39M, 80.23M, 73.89M, 77.48M, 2622684 },
                    { -392, new DateTime(2023, 4, 3), 73.01M, 72.32M, 78.83M, 81.44M, 3374143 },
                    { -392, new DateTime(2023, 4, 4), 81.99M, 77.28M, 70.08M, 83.83M, 2352185 },
                    { -392, new DateTime(2023, 4, 5), 65.06M, 69.01M, 72.28M, 80.48M, 2745222 },
                    { -392, new DateTime(2023, 4, 6), 66.44M, 79.06M, 69.12M, 78.02M, 2555426 },
                    { -392, new DateTime(2023, 4, 10), 76.01M, 77.17M, 74.92M, 79.94M, 2771774 },
                    { -392, new DateTime(2023, 4, 11), 73.64M, 54.9M, 77.71M, 76.61M, 2565236 },
                    { -392, new DateTime(2023, 4, 12), 65.68M, 72.1M, 73.09M, 85.94M, 2475633 },
                    { -392, new DateTime(2023, 4, 13), 72.81M, 71.31M, 68.14M, 73.33M, 2970295 },
                    { -392, new DateTime(2023, 4, 14), 71.96M, 75.51M, 70.94M, 77.52M, 2588092 },
                    { -392, new DateTime(2023, 1, 24), 64.64M, 87.45M, 68.6M, 77.59M, 2575272 },
                    { -392, new DateTime(2023, 1, 23), 64.04M, 77.82M, 67.06M, 67.24M, 3390566 },
                    { -392, new DateTime(2023, 1, 20), 80.35M, 74.39M, 68.42M, 66.83M, 2832073 },
                    { -392, new DateTime(2023, 1, 19), 67.23M, 77.42M, 88.54M, 75.96M, 3310683 },
                    { -392, new DateTime(2023, 1, 18), 70.93M, 73.5M, 86.26M, 67.51M, 4209214 },
                    { -392, new DateTime(2023, 1, 17), 71.4M, 71.93M, 80.54M, 81.95M, 3533572 },
                    { -392, new DateTime(2023, 1, 13), 87.88M, 77.78M, 75.86M, 86.35M, 3572011 },
                    { -392, new DateTime(2023, 1, 12), 62.63M, 71.64M, 87.09M, 76.6M, 3071606 },
                    { -392, new DateTime(2023, 1, 11), 80.09M, 72.7M, 81.45M, 83.67M, 2741448 },
                    { -392, new DateTime(2023, 2, 22), 72.3M, 87.59M, 69.16M, 75.04M, 2906888 },
                    { -392, new DateTime(2023, 2, 21), 70.13M, 66.97M, 78.25M, 74.67M, 3947629 },
                    { -392, new DateTime(2023, 2, 17), 78.23M, 75.25M, 65.25M, 77.69M, 2175198 },
                    { -392, new DateTime(2023, 2, 16), 69.02M, 83.66M, 79.11M, 78.78M, 2661196 },
                    { -392, new DateTime(2023, 2, 15), 78.04M, 88.73M, 79.54M, 77M, 2699374 },
                    { -392, new DateTime(2023, 2, 14), 78M, 73.97M, 73.18M, 76.59M, 2878064 },
                    { -392, new DateTime(2023, 2, 13), 85.67M, 81.08M, 76.64M, 83.5M, 2814930 },
                    { -392, new DateTime(2023, 2, 10), 66.53M, 79.08M, 79.55M, 81.81M, 2522615 },
                    { -392, new DateTime(2023, 2, 23), 81.28M, 72.66M, 72.5M, 66.16M, 3441584 },
                    { -392, new DateTime(2023, 2, 24), 74.92M, 83.38M, 77.33M, 77.36M, 3649068 },
                    { -392, new DateTime(2023, 2, 27), 79.24M, 75.22M, 83.98M, 76.71M, 3158858 },
                    { -392, new DateTime(2023, 2, 28), 76.61M, 72.35M, 66.15M, 77.88M, 2604424 },
                    { -392, new DateTime(2023, 4, 17), 71.78M, 75.72M, 63.29M, 68.72M, 2465535 },
                    { -392, new DateTime(2023, 4, 18), 77.45M, 82.19M, 74.09M, 68.81M, 2694552 },
                    { -392, new DateTime(2023, 4, 19), 75.04M, 65.21M, 67.15M, 69.65M, 2430687 },
                    { -392, new DateTime(2023, 4, 20), 66.7M, 71.82M, 75.74M, 78.17M, 2428969 },
                    { -392, new DateTime(2023, 4, 21), 75.05M, 72.8M, 71.68M, 64.06M, 1988127 },
                    { -397, new DateTime(2023, 1, 3), 50.37M, 52.61M, 54.55M, 47.63M, 1970968 },
                    { -397, new DateTime(2023, 1, 4), 46.93M, 46.08M, 50.69M, 41.66M, 492618 },
                    { -397, new DateTime(2023, 1, 5), 56.55M, 53.57M, 54.31M, 46.66M, 1063815 },
                    { -397, new DateTime(2023, 1, 6), 49.81M, 45.08M, 43.74M, 48.05M, 846488 },
                    { -397, new DateTime(2023, 1, 9), 52.31M, 51.11M, 54.76M, 47.85M, 1167658 },
                    { -397, new DateTime(2023, 1, 10), 52.01M, 48.32M, 45.32M, 55.25M, 991326 },
                    { -397, new DateTime(2023, 1, 11), 52.8M, 55.75M, 58.13M, 50.63M, 778049 },
                    { -397, new DateTime(2023, 1, 12), 43.26M, 53.21M, 47.36M, 52.32M, 633662 },
                    { -397, new DateTime(2023, 1, 13), 49.59M, 53.27M, 46.65M, 52.81M, 538600 },
                    { -397, new DateTime(2023, 1, 17), 52.1M, 44.52M, 47.46M, 54.14M, 492556 },
                    { -397, new DateTime(2023, 1, 18), 53.94M, 51.31M, 48.04M, 51.61M, 972939 },
                    { -397, new DateTime(2023, 1, 19), 46.83M, 52.38M, 56.52M, 47.87M, 536749 },
                    { -397, new DateTime(2023, 1, 20), 48.56M, 50.64M, 51.68M, 53.87M, 638833 },
                    { -397, new DateTime(2023, 1, 23), 48.83M, 53.99M, 51.05M, 55.39M, 827648 },
                    { -397, new DateTime(2023, 1, 24), 48.9M, 51.9M, 51.67M, 51.85M, 549911 },
                    { -397, new DateTime(2023, 1, 25), 51.81M, 47.52M, 53.49M, 53.4M, 514572 },
                    { -397, new DateTime(2023, 1, 26), 58.22M, 50.67M, 54.22M, 50.85M, 728402 },
                    { -397, new DateTime(2023, 1, 27), 54.02M, 62.24M, 52.16M, 49.85M, 2495542 },
                    { -397, new DateTime(2023, 1, 30), 48.14M, 50.58M, 57.51M, 54.13M, 471107 },
                    { -397, new DateTime(2023, 1, 31), 53.03M, 48.82M, 52.68M, 49.62M, 440344 },
                    { -397, new DateTime(2023, 2, 1), 55.76M, 50.99M, 57.16M, 52.73M, 2013921 },
                    { -397, new DateTime(2023, 2, 2), 53.82M, 54.21M, 43.79M, 48.16M, 1544544 },
                    { -397, new DateTime(2023, 2, 3), 52.89M, 62.67M, 56.89M, 57.8M, 404158 },
                    { -397, new DateTime(2023, 2, 6), 46.48M, 51.29M, 55.22M, 52.22M, 585168 },
                    { -397, new DateTime(2023, 2, 7), 54.67M, 52.88M, 51.52M, 54.14M, 587205 },
                    { -397, new DateTime(2023, 2, 8), 50.63M, 51.58M, 53.42M, 49.92M, 312479 },
                    { -397, new DateTime(2023, 2, 9), 53.59M, 52.22M, 55.3M, 55.23M, 238889 },
                    { -397, new DateTime(2023, 2, 10), 51.36M, 50.08M, 46.3M, 47.6M, 383222 },
                    { -397, new DateTime(2023, 2, 13), 53.6M, 50.47M, 54.88M, 55.73M, 712111 },
                    { -397, new DateTime(2023, 2, 14), 53.37M, 56.22M, 59.39M, 56.6M, 623765 },
                    { -397, new DateTime(2023, 2, 15), 52.84M, 51.23M, 48M, 54.05M, 680100 },
                    { -397, new DateTime(2023, 2, 16), 52.18M, 49.67M, 54.55M, 51.82M, 383350 },
                    { -397, new DateTime(2023, 2, 17), 53.24M, 55.52M, 57.32M, 56.23M, 244091 },
                    { -397, new DateTime(2023, 2, 21), 51.06M, 57.22M, 56.36M, 54.41M, 971207 },
                    { -397, new DateTime(2023, 2, 22), 55.67M, 52.81M, 53.69M, 53.49M, 665983 },
                    { -397, new DateTime(2023, 2, 23), 49.95M, 52.01M, 51.53M, 47.02M, 480682 },
                    { -397, new DateTime(2023, 2, 24), 49.97M, 52.84M, 49.98M, 51.89M, 671293 },
                    { -397, new DateTime(2023, 2, 27), 53.62M, 51.5M, 54.39M, 47.68M, 952219 },
                    { -397, new DateTime(2023, 2, 28), 48.67M, 52.52M, 56.6M, 50.07M, 440703 },
                    { -397, new DateTime(2023, 3, 1), 54.77M, 46.39M, 44.37M, 54.63M, 752485 },
                    { -397, new DateTime(2023, 3, 2), 50.3M, 47.15M, 51.04M, 55.63M, 606217 },
                    { -397, new DateTime(2023, 3, 3), 47.59M, 50.43M, 53.49M, 51.77M, 713378 },
                    { -397, new DateTime(2023, 3, 6), 51.7M, 58.88M, 56.06M, 52.92M, 197074 },
                    { -397, new DateTime(2023, 3, 7), 52.69M, 49.85M, 53.96M, 50.14M, 1700588 },
                    { -397, new DateTime(2023, 3, 8), 59.09M, 50.5M, 48.33M, 42.33M, 2514589 },
                    { -397, new DateTime(2023, 3, 9), 50.43M, 49.04M, 47.82M, 54.25M, 933766 },
                    { -397, new DateTime(2023, 3, 10), 52.73M, 45.64M, 43.01M, 45.53M, 838372 },
                    { -397, new DateTime(2023, 3, 13), 52.05M, 51.4M, 50.66M, 51.78M, 1124635 },
                    { -397, new DateTime(2023, 3, 14), 54.55M, 54.63M, 47.3M, 49.33M, 819675 },
                    { -397, new DateTime(2023, 3, 15), 53.47M, 49.87M, 47.22M, 47.07M, 2251672 },
                    { -397, new DateTime(2023, 3, 16), 45.12M, 49.59M, 56.68M, 50.37M, 1144640 },
                    { -397, new DateTime(2023, 3, 17), 51.33M, 47.18M, 45.03M, 49.14M, 515441 },
                    { -397, new DateTime(2023, 3, 20), 49.8M, 44.05M, 46.94M, 52.92M, 771908 },
                    { -397, new DateTime(2023, 3, 21), 57.1M, 47.1M, 52.13M, 52.92M, 555720 },
                    { -397, new DateTime(2023, 3, 22), 46.44M, 45.38M, 47.13M, 51.05M, 648606 },
                    { -397, new DateTime(2023, 3, 23), 50.66M, 52.62M, 48.32M, 47.56M, 2939532 },
                    { -397, new DateTime(2023, 3, 24), 46.91M, 47.92M, 53.57M, 52.19M, 573754 },
                    { -397, new DateTime(2023, 3, 27), 49.57M, 48.76M, 53.83M, 52.17M, 529100 },
                    { -397, new DateTime(2023, 3, 28), 51.82M, 45.27M, 51.81M, 46.11M, 336896 },
                    { -397, new DateTime(2023, 3, 29), 53.41M, 47.05M, 48.27M, 55.24M, 545272 },
                    { -397, new DateTime(2023, 3, 30), 55.94M, 47.76M, 56.18M, 52.86M, 783480 },
                    { -397, new DateTime(2023, 3, 31), 48.4M, 55.44M, 54.79M, 51.89M, 311583 },
                    { -397, new DateTime(2023, 4, 3), 53.27M, 47.3M, 51.86M, 61.76M, 385154 },
                    { -397, new DateTime(2023, 4, 4), 55.24M, 52.17M, 53.44M, 50.53M, 903613 },
                    { -397, new DateTime(2023, 4, 5), 52.25M, 58.8M, 61.3M, 56.39M, 456643 },
                    { -397, new DateTime(2023, 4, 6), 54.04M, 47.47M, 55.17M, 54.99M, 333648 },
                    { -397, new DateTime(2023, 4, 10), 55.37M, 54.31M, 52.56M, 55.13M, 367382 },
                    { -397, new DateTime(2023, 4, 11), 48.4M, 55.51M, 47.69M, 51.48M, 563095 },
                    { -397, new DateTime(2023, 4, 12), 53.06M, 57.91M, 50.78M, 55.57M, 1018958 },
                    { -397, new DateTime(2023, 4, 13), 57.99M, 58.86M, 63.93M, 54.21M, 589105 },
                    { -397, new DateTime(2023, 4, 14), 52.46M, 56.72M, 51.91M, 51.37M, 373689 },
                    { -397, new DateTime(2023, 4, 17), 57.2M, 48.76M, 55.68M, 53.5M, 999802 },
                    { -397, new DateTime(2023, 4, 18), 48.34M, 52.9M, 54.49M, 51.95M, 375764 },
                    { -397, new DateTime(2023, 4, 19), 53.61M, 48.06M, 60.05M, 50.05M, 519282 },
                    { -397, new DateTime(2023, 4, 20), 46.71M, 55.6M, 49.27M, 47.98M, 288496 },
                    { -397, new DateTime(2023, 4, 21), 60.98M, 51.74M, 54.18M, 57.62M, 244964 },
                    { -400, new DateTime(2023, 1, 3), 65.69M, 63.11M, 68.7M, 66.34M, 444839 },
                    { -400, new DateTime(2023, 1, 4), 67.7M, 61.68M, 60.45M, 58.47M, 302042 },
                    { -400, new DateTime(2023, 1, 5), 60.76M, 63.87M, 60.7M, 71.92M, 333138 },
                    { -400, new DateTime(2023, 1, 6), 60.5M, 67.05M, 64.92M, 68.38M, 387347 },
                    { -400, new DateTime(2023, 1, 9), 77.63M, 71.6M, 61.24M, 74.05M, 590863 },
                    { -400, new DateTime(2023, 1, 10), 77.24M, 68.38M, 71.12M, 67.81M, 300334 },
                    { -400, new DateTime(2023, 1, 11), 75.07M, 68.27M, 71.88M, 69.11M, 600165 },
                    { -400, new DateTime(2023, 1, 12), 64.36M, 63.32M, 73.83M, 65.68M, 265984 },
                    { -400, new DateTime(2023, 1, 13), 70.95M, 61.84M, 73.36M, 73.38M, 253540 },
                    { -400, new DateTime(2023, 1, 17), 63.23M, 71.17M, 70.5M, 77.94M, 508098 },
                    { -400, new DateTime(2023, 1, 18), 68.83M, 70.01M, 58.64M, 67.36M, 417769 },
                    { -400, new DateTime(2023, 1, 19), 70.61M, 73.01M, 58.75M, 64.5M, 321026 },
                    { -400, new DateTime(2023, 1, 20), 67.41M, 79.57M, 68.02M, 66.3M, 297839 },
                    { -400, new DateTime(2023, 1, 23), 74.76M, 66.88M, 68.21M, 71.16M, 338595 },
                    { -400, new DateTime(2023, 1, 24), 69.71M, 70.25M, 68.02M, 73.55M, 649192 },
                    { -400, new DateTime(2023, 1, 25), 82.26M, 74.54M, 73.13M, 72.48M, 242630 },
                    { -400, new DateTime(2023, 1, 26), 66.27M, 73.57M, 67.71M, 71.48M, 377581 },
                    { -400, new DateTime(2023, 1, 27), 66.58M, 65.24M, 78.75M, 76.43M, 318216 },
                    { -400, new DateTime(2023, 1, 30), 68.58M, 76.94M, 73.2M, 73.01M, 251415 },
                    { -400, new DateTime(2023, 1, 31), 79.28M, 76.11M, 76.5M, 75.3M, 267413 },
                    { -400, new DateTime(2023, 2, 1), 71.24M, 76.48M, 80.35M, 75.38M, 603984 },
                    { -400, new DateTime(2023, 2, 2), 78.25M, 70.82M, 82.53M, 74.55M, 373995 },
                    { -400, new DateTime(2023, 2, 10), 77.13M, 57.81M, 79.04M, 69.33M, 280535 },
                    { -400, new DateTime(2023, 2, 13), 76.75M, 69.6M, 68.52M, 67.67M, 208863 },
                    { -400, new DateTime(2023, 2, 14), 78.94M, 66.52M, 69.89M, 63.09M, 407350 },
                    { -400, new DateTime(2023, 2, 15), 71.54M, 73.72M, 73.24M, 80.24M, 275602 },
                    { -400, new DateTime(2023, 2, 16), 76.62M, 68.68M, 73.93M, 78.49M, 232624 },
                    { -400, new DateTime(2023, 2, 17), 68.46M, 71.01M, 69.04M, 71.63M, 214792 },
                    { -400, new DateTime(2023, 2, 21), 70.26M, 63.47M, 70.22M, 72.13M, 348394 },
                    { -400, new DateTime(2023, 2, 22), 75.25M, 77.62M, 72.42M, 65.32M, 278627 },
                    { -400, new DateTime(2023, 2, 23), 71.5M, 71.91M, 69.06M, 75.36M, 256344 },
                    { -400, new DateTime(2023, 2, 24), 76.51M, 75.16M, 74.98M, 71.24M, 430756 },
                    { -400, new DateTime(2023, 2, 27), 81.42M, 77.18M, 66.69M, 65M, 146344 },
                    { -400, new DateTime(2023, 2, 28), 60.84M, 73.87M, 69.91M, 63.21M, 173242 },
                    { -400, new DateTime(2023, 3, 1), 78.08M, 62.55M, 73.97M, 76.13M, 539080 },
                    { -400, new DateTime(2023, 3, 2), 70.3M, 80.57M, 70.27M, 62.14M, 327074 },
                    { -400, new DateTime(2023, 3, 3), 69.11M, 71.65M, 63.61M, 69.34M, 472407 },
                    { -400, new DateTime(2023, 3, 6), 71.01M, 77.27M, 68.52M, 79.86M, 231454 },
                    { -400, new DateTime(2023, 3, 7), 68.25M, 76.41M, 75.19M, 68.77M, 300246 },
                    { -400, new DateTime(2023, 3, 8), 72.49M, 68.71M, 71.72M, 68.5M, 294012 },
                    { -400, new DateTime(2023, 3, 9), 71.57M, 81.96M, 67.35M, 71.41M, 299356 },
                    { -400, new DateTime(2023, 3, 10), 65.61M, 67.81M, 73.7M, 73.54M, 476760 },
                    { -400, new DateTime(2023, 3, 13), 67.62M, 64.3M, 61.49M, 66.44M, 519696 },
                    { -400, new DateTime(2023, 3, 14), 62.97M, 58.81M, 60.69M, 68.19M, 684740 },
                    { -400, new DateTime(2023, 3, 15), 69.94M, 76.01M, 62.94M, 55.48M, 855127 },
                    { -400, new DateTime(2023, 3, 16), 66.83M, 62.06M, 59.09M, 65.64M, 455758 },
                    { -400, new DateTime(2023, 3, 17), 71.99M, 68.27M, 67.05M, 53.53M, 384832 },
                    { -400, new DateTime(2023, 3, 20), 68.34M, 64.76M, 61.8M, 62.29M, 493042 },
                    { -400, new DateTime(2023, 3, 21), 63.16M, 73.57M, 67.48M, 67.56M, 414932 },
                    { -400, new DateTime(2023, 3, 22), 61.59M, 73.12M, 65.07M, 62.17M, 266503 },
                    { -400, new DateTime(2023, 3, 23), 66.68M, 65.08M, 70.33M, 67.66M, 467631 },
                    { -400, new DateTime(2023, 3, 24), 63.92M, 67.92M, 63.71M, 61.57M, 424598 },
                    { -400, new DateTime(2023, 3, 27), 68.5M, 65.27M, 71.23M, 56.53M, 623525 },
                    { -400, new DateTime(2023, 3, 28), 64.3M, 63.3M, 70.23M, 69.48M, 626623 },
                    { -400, new DateTime(2023, 2, 9), 68.17M, 75.7M, 69.13M, 66.33M, 332717 },
                    { -400, new DateTime(2023, 2, 8), 79.2M, 73.16M, 77.16M, 74.44M, 266418 },
                    { -400, new DateTime(2023, 2, 7), 63.58M, 69.78M, 76.23M, 68.55M, 318592 },
                    { -400, new DateTime(2023, 2, 6), 69.41M, 69.97M, 77.76M, 69.69M, 310923 },
                    { -400, new DateTime(2023, 2, 3), 73.12M, 72.66M, 64.9M, 74.98M, 276483 },
                    { -400, new DateTime(2023, 3, 29), 57.01M, 67.02M, 71.56M, 61.65M, 310783 },
                    { -400, new DateTime(2023, 3, 30), 58.54M, 74.01M, 69.08M, 71.67M, 254563 },
                    { -400, new DateTime(2023, 3, 31), 76.79M, 68.6M, 77.43M, 66.84M, 283836 },
                    { -400, new DateTime(2023, 4, 3), 58.53M, 64.6M, 72.36M, 65.39M, 491111 },
                    { -400, new DateTime(2023, 4, 4), 66.59M, 65.58M, 70.36M, 61.23M, 299996 },
                    { -400, new DateTime(2023, 4, 5), 62.75M, 69.57M, 56.75M, 69.22M, 620840 },
                    { -400, new DateTime(2023, 4, 6), 63.52M, 68.41M, 66.24M, 66.75M, 271134 },
                    { -400, new DateTime(2023, 4, 10), 63.3M, 65.26M, 69.01M, 67.33M, 277472 },
                    { -400, new DateTime(2023, 4, 11), 62.74M, 75.74M, 68.67M, 65.29M, 260182 },
                    { -400, new DateTime(2023, 4, 12), 64.41M, 77.45M, 68.44M, 67.37M, 473233 },
                    { -400, new DateTime(2023, 4, 13), 63.67M, 63.06M, 64.1M, 76.03M, 253159 },
                    { -400, new DateTime(2023, 4, 14), 66.8M, 76.26M, 61.3M, 62.01M, 268713 },
                    { -400, new DateTime(2023, 4, 17), 66.76M, 77.83M, 77.14M, 63.15M, 420580 },
                    { -400, new DateTime(2023, 4, 18), 72.08M, 59.03M, 58.15M, 64.46M, 364381 },
                    { -400, new DateTime(2023, 4, 19), 68.13M, 66.92M, 62.3M, 63.18M, 250499 },
                    { -400, new DateTime(2023, 4, 20), 70.85M, 74.2M, 65.79M, 71.7M, 272504 },
                    { -400, new DateTime(2023, 4, 21), 83.73M, 60.53M, 66.78M, 62.57M, 214736 },
                    { -403, new DateTime(2023, 1, 3), 48.71M, 48.88M, 53.94M, 55.02M, 3079316 },
                    { -403, new DateTime(2023, 1, 4), 54.93M, 46.25M, 47.75M, 51.49M, 2360010 },
                    { -403, new DateTime(2023, 1, 5), 46.04M, 52.53M, 49.59M, 49.48M, 2206677 },
                    { -403, new DateTime(2023, 1, 6), 56.62M, 52.69M, 47.87M, 47.85M, 2459330 },
                    { -403, new DateTime(2023, 1, 9), 56.8M, 46.37M, 55.52M, 44.48M, 2990931 },
                    { -403, new DateTime(2023, 1, 10), 49.99M, 51.92M, 52.35M, 52.44M, 1500889 },
                    { -403, new DateTime(2023, 1, 11), 48.56M, 52.59M, 50.53M, 54.41M, 2262982 },
                    { -403, new DateTime(2023, 1, 12), 49.61M, 54.47M, 48.85M, 51.54M, 2623950 },
                    { -403, new DateTime(2023, 1, 13), 56.91M, 56.8M, 53.49M, 43.35M, 1133034 },
                    { -403, new DateTime(2023, 1, 17), 56.04M, 51.13M, 54.34M, 53.68M, 1531409 },
                    { -403, new DateTime(2023, 1, 18), 47.36M, 48.48M, 52.37M, 49.86M, 2084404 },
                    { -403, new DateTime(2023, 1, 19), 51.2M, 52.96M, 56.92M, 51.05M, 1943802 },
                    { -403, new DateTime(2023, 1, 20), 51.8M, 55.99M, 45.4M, 48.6M, 2038925 },
                    { -403, new DateTime(2023, 1, 23), 54.49M, 45.31M, 53.57M, 53.08M, 3443782 },
                    { -403, new DateTime(2023, 1, 24), 50.81M, 50.49M, 51.6M, 50.17M, 1806277 },
                    { -403, new DateTime(2023, 1, 25), 58.73M, 49.35M, 44.4M, 51.73M, 1760154 },
                    { -403, new DateTime(2023, 1, 26), 51.58M, 58.16M, 48M, 50.24M, 2849674 },
                    { -403, new DateTime(2023, 1, 27), 52.99M, 51.87M, 52.99M, 42.96M, 1670851 },
                    { -403, new DateTime(2023, 1, 30), 50.51M, 51.39M, 58.31M, 55.82M, 1242309 },
                    { -403, new DateTime(2023, 1, 31), 49.62M, 51.32M, 52.61M, 47.95M, 1586870 },
                    { -403, new DateTime(2023, 2, 1), 47.26M, 50.67M, 50.09M, 50.31M, 2095275 },
                    { -403, new DateTime(2023, 2, 2), 53.7M, 58.95M, 55.17M, 54.65M, 2327448 },
                    { -403, new DateTime(2023, 2, 3), 56.97M, 52.46M, 56.94M, 52.57M, 4425527 },
                    { -403, new DateTime(2023, 2, 6), 52.11M, 54.38M, 60.11M, 50.55M, 1149980 },
                    { -403, new DateTime(2023, 2, 7), 50.91M, 53.04M, 54.44M, 49.14M, 2193642 },
                    { -403, new DateTime(2023, 2, 8), 55.95M, 52.86M, 43.42M, 63.14M, 1318807 },
                    { -403, new DateTime(2023, 2, 9), 60.32M, 53.61M, 53.99M, 61.22M, 1421653 },
                    { -403, new DateTime(2023, 2, 10), 57.44M, 53.9M, 53.79M, 48.03M, 2156678 },
                    { -403, new DateTime(2023, 2, 13), 57.57M, 56.13M, 45.03M, 55.79M, 1162197 },
                    { -403, new DateTime(2023, 2, 14), 59.49M, 49.32M, 56.71M, 50.65M, 1410364 },
                    { -403, new DateTime(2023, 2, 15), 50.79M, 60.32M, 62.87M, 58.15M, 1043229 },
                    { -403, new DateTime(2023, 2, 16), 46.92M, 60.3M, 52.3M, 47.02M, 1374528 },
                    { -403, new DateTime(2023, 2, 17), 56.26M, 51.74M, 51.58M, 55.63M, 1045830 },
                    { -403, new DateTime(2023, 2, 21), 50.78M, 56.05M, 54.81M, 55.69M, 1920459 },
                    { -403, new DateTime(2023, 2, 22), 55.22M, 53.84M, 48.57M, 56.45M, 1516242 },
                    { -403, new DateTime(2023, 2, 23), 45.61M, 53.33M, 54.23M, 58.29M, 1527235 },
                    { -403, new DateTime(2023, 2, 24), 49.9M, 58.1M, 54.95M, 51.73M, 1228742 },
                    { -403, new DateTime(2023, 2, 27), 53.82M, 55.87M, 50.73M, 52.66M, 8400399 },
                    { -403, new DateTime(2023, 2, 28), 54.32M, 64.86M, 57.78M, 52.35M, 1629443 },
                    { -403, new DateTime(2023, 3, 1), 52.01M, 63.73M, 54.65M, 58.93M, 1536263 },
                    { -403, new DateTime(2023, 3, 2), 51.78M, 49.73M, 49.65M, 51.44M, 1381161 },
                    { -403, new DateTime(2023, 3, 3), 50.25M, 53.74M, 50.27M, 58.23M, 1589345 },
                    { -403, new DateTime(2023, 3, 6), 58.67M, 47.45M, 48.86M, 52.93M, 1099443 },
                    { -403, new DateTime(2023, 3, 7), 51.34M, 62.58M, 61.9M, 54.22M, 1224089 },
                    { -403, new DateTime(2023, 3, 8), 55.79M, 51.31M, 44.74M, 54.28M, 1156684 },
                    { -403, new DateTime(2023, 3, 9), 56.36M, 58.21M, 52.87M, 52.05M, 2123267 },
                    { -403, new DateTime(2023, 3, 10), 47M, 60.2M, 55.78M, 48.18M, 2667149 },
                    { -403, new DateTime(2023, 3, 13), 48.59M, 52.66M, 49.23M, 55.84M, 4113047 },
                    { -403, new DateTime(2023, 3, 14), 49.99M, 57.98M, 54.18M, 54.4M, 3836377 },
                    { -403, new DateTime(2023, 3, 15), 44.31M, 55.19M, 47.78M, 49.53M, 3106778 },
                    { -403, new DateTime(2023, 3, 16), 42.8M, 53.85M, 55.28M, 56.61M, 4092261 },
                    { -403, new DateTime(2023, 3, 17), 57.89M, 57.65M, 52.81M, 49.74M, 2297873 },
                    { -403, new DateTime(2023, 3, 20), 53.38M, 52.83M, 50.43M, 53.98M, 1387317 },
                    { -403, new DateTime(2023, 3, 21), 45.97M, 57.15M, 52.93M, 53.62M, 1156300 },
                    { -403, new DateTime(2023, 3, 22), 53.59M, 67.14M, 57.08M, 53.82M, 2641018 },
                    { -403, new DateTime(2023, 3, 23), 60.56M, 55.06M, 59.57M, 52.28M, 2255103 },
                    { -403, new DateTime(2023, 3, 24), 52.85M, 52.5M, 49.96M, 53.39M, 1318584 },
                    { -403, new DateTime(2023, 3, 27), 46.6M, 61.22M, 59.96M, 57.72M, 1330405 },
                    { -403, new DateTime(2023, 3, 28), 51.72M, 47.72M, 59.55M, 50.6M, 1404092 },
                    { -403, new DateTime(2023, 3, 29), 46.35M, 60.05M, 50.78M, 52.2M, 1890573 },
                    { -403, new DateTime(2023, 3, 30), 51.88M, 49.03M, 57.85M, 55.62M, 1165806 },
                    { -403, new DateTime(2023, 3, 31), 57.24M, 58.1M, 60.18M, 57.4M, 1711098 },
                    { -403, new DateTime(2023, 4, 3), 55.12M, 55.71M, 60.11M, 47.73M, 2119612 },
                    { -403, new DateTime(2023, 4, 4), 54.48M, 54.4M, 56.57M, 55.52M, 1996697 },
                    { -403, new DateTime(2023, 4, 5), 57.88M, 54.03M, 62.06M, 54.93M, 1444266 },
                    { -403, new DateTime(2023, 4, 6), 47.72M, 50.74M, 53.87M, 55.96M, 888228 },
                    { -403, new DateTime(2023, 4, 10), 47.92M, 52.97M, 60M, 60.68M, 2259549 },
                    { -403, new DateTime(2023, 4, 11), 51.91M, 47.42M, 55.41M, 53.76M, 1566668 },
                    { -403, new DateTime(2023, 4, 12), 60.36M, 54.59M, 65.54M, 50.49M, 2102611 },
                    { -403, new DateTime(2023, 4, 13), 56.18M, 54.57M, 61.88M, 48.32M, 1455603 },
                    { -403, new DateTime(2023, 4, 14), 62.93M, 56.95M, 57.84M, 50.13M, 1009060 },
                    { -403, new DateTime(2023, 4, 17), 62.44M, 50.8M, 50.66M, 64.83M, 1082510 },
                    { -403, new DateTime(2023, 4, 18), 60.81M, 56.47M, 51.03M, 57.42M, 992320 },
                    { -403, new DateTime(2023, 4, 19), 55.03M, 51.6M, 62.9M, 61.19M, 1421059 },
                    { -403, new DateTime(2023, 4, 20), 60.47M, 47.91M, 55.2M, 51.79M, 1490079 },
                    { -403, new DateTime(2023, 4, 21), 52.19M, 59.54M, 56.84M, 60.21M, 1233798 },
                    { -406, new DateTime(2023, 1, 3), 57.23M, 56.09M, 59.19M, 59.88M, 14173 },
                    { -406, new DateTime(2023, 1, 4), 58.1M, 58.99M, 62.02M, 64.21M, 14346 },
                    { -406, new DateTime(2023, 1, 5), 61.13M, 57.25M, 59.72M, 65.07M, 33085 },
                    { -406, new DateTime(2023, 1, 6), 58.96M, 60.31M, 55.08M, 58.08M, 48200 },
                    { -406, new DateTime(2023, 1, 9), 62.81M, 60.53M, 73.45M, 57.02M, 22985 },
                    { -406, new DateTime(2023, 1, 10), 69.59M, 56.1M, 54.62M, 62.42M, 13888 },
                    { -406, new DateTime(2023, 1, 11), 62.77M, 49.66M, 70.85M, 68.27M, 21794 },
                    { -406, new DateTime(2023, 1, 12), 67.59M, 65.7M, 62.76M, 63.89M, 151962 },
                    { -406, new DateTime(2023, 1, 13), 71.26M, 65.22M, 57.23M, 61.6M, 19945 },
                    { -406, new DateTime(2023, 1, 17), 57.25M, 59.83M, 60.51M, 56.21M, 6453 },
                    { -406, new DateTime(2023, 1, 18), 58.54M, 66.66M, 63.86M, 59.95M, 14086 },
                    { -406, new DateTime(2023, 1, 19), 67.29M, 63.13M, 61.02M, 49.63M, 7034 },
                    { -406, new DateTime(2023, 1, 20), 62.6M, 53.31M, 59.14M, 66.49M, 16888 },
                    { -406, new DateTime(2023, 1, 23), 71.58M, 63.93M, 61.68M, 60.38M, 15659 },
                    { -406, new DateTime(2023, 1, 24), 60.19M, 57.46M, 60.11M, 61.4M, 18528 },
                    { -406, new DateTime(2023, 1, 25), 52.48M, 65.52M, 63.4M, 61.26M, 17794 },
                    { -406, new DateTime(2023, 1, 26), 61.24M, 69.02M, 58.29M, 77.38M, 70447 },
                    { -406, new DateTime(2023, 1, 27), 60.63M, 53.26M, 70.72M, 45.93M, 23739 },
                    { -406, new DateTime(2023, 1, 30), 60.1M, 57.54M, 57.48M, 59.67M, 32008 },
                    { -406, new DateTime(2023, 1, 31), 68.04M, 57.26M, 61.64M, 70.47M, 24693 },
                    { -406, new DateTime(2023, 2, 1), 66.25M, 63.34M, 64.99M, 58.25M, 16802 },
                    { -406, new DateTime(2023, 2, 2), 64.34M, 53.14M, 56.48M, 65.61M, 20141 },
                    { -406, new DateTime(2023, 2, 3), 64.19M, 57.27M, 64M, 67.16M, 14641 },
                    { -406, new DateTime(2023, 2, 6), 56.49M, 72.54M, 64.08M, 61.06M, 20353 },
                    { -406, new DateTime(2023, 2, 7), 62.87M, 62.39M, 61.36M, 61.97M, 29514 },
                    { -406, new DateTime(2023, 2, 8), 62.4M, 69M, 57.05M, 60.62M, 12259 },
                    { -406, new DateTime(2023, 2, 9), 62.24M, 60.23M, 69.59M, 50.77M, 26821 },
                    { -406, new DateTime(2023, 2, 10), 61.23M, 57.45M, 60.32M, 60.84M, 14695 },
                    { -406, new DateTime(2023, 2, 13), 65.66M, 56.09M, 55.59M, 58.76M, 9305 },
                    { -406, new DateTime(2023, 2, 14), 62.09M, 62.82M, 62.67M, 67.23M, 14352 },
                    { -406, new DateTime(2023, 2, 15), 63.57M, 64.75M, 62.49M, 54.71M, 16866 },
                    { -406, new DateTime(2023, 2, 16), 64.87M, 64.97M, 68.12M, 52.42M, 11351 },
                    { -406, new DateTime(2023, 2, 17), 56.58M, 53.2M, 59.49M, 57.16M, 25489 },
                    { -406, new DateTime(2023, 2, 21), 52.54M, 62.66M, 66.6M, 57.99M, 27268 },
                    { -406, new DateTime(2023, 2, 22), 55.92M, 65.61M, 67.72M, 60.37M, 11027 },
                    { -406, new DateTime(2023, 2, 23), 61.51M, 56.93M, 59.9M, 60.92M, 15291 },
                    { -406, new DateTime(2023, 2, 24), 61.88M, 59.59M, 57.13M, 63.41M, 25699 },
                    { -406, new DateTime(2023, 2, 27), 53.59M, 57.64M, 73.22M, 70.58M, 11498 },
                    { -406, new DateTime(2023, 2, 28), 56.47M, 61.04M, 61.58M, 52.09M, 14145 },
                    { -406, new DateTime(2023, 3, 1), 59.84M, 62.04M, 63.45M, 57.87M, 12656 },
                    { -406, new DateTime(2023, 3, 2), 55.88M, 54.92M, 68.13M, 64.1M, 18061 },
                    { -406, new DateTime(2023, 3, 3), 60.07M, 62.67M, 51.22M, 60.21M, 16412 },
                    { -406, new DateTime(2023, 3, 6), 56.72M, 50.69M, 63.46M, 60.94M, 10295 },
                    { -406, new DateTime(2023, 3, 7), 61.18M, 57.27M, 63.38M, 62.18M, 22497 },
                    { -406, new DateTime(2023, 3, 8), 63.67M, 55.73M, 61.03M, 56.7M, 10430 },
                    { -406, new DateTime(2023, 3, 9), 67.66M, 64.17M, 50.89M, 53.03M, 14066 },
                    { -406, new DateTime(2023, 3, 10), 49.99M, 58.57M, 59.08M, 59.83M, 30753 },
                    { -406, new DateTime(2023, 3, 13), 59.24M, 55.1M, 60.02M, 59.69M, 15324 },
                    { -406, new DateTime(2023, 3, 14), 64.96M, 62.58M, 61.92M, 58.05M, 24209 },
                    { -406, new DateTime(2023, 3, 15), 60.77M, 57.19M, 62.69M, 47.13M, 120054 },
                    { -406, new DateTime(2023, 3, 16), 58.55M, 56.21M, 54.15M, 58.65M, 16965 },
                    { -406, new DateTime(2023, 3, 17), 55.3M, 54.27M, 49.08M, 56.12M, 13231 },
                    { -406, new DateTime(2023, 3, 20), 58.12M, 53.06M, 56.44M, 57.17M, 15279 },
                    { -406, new DateTime(2023, 3, 21), 54.95M, 54.52M, 58.55M, 52.32M, 7461 },
                    { -406, new DateTime(2023, 3, 22), 51.64M, 60.62M, 60.91M, 52M, 14809 },
                    { -406, new DateTime(2023, 3, 23), 54.28M, 56.1M, 64.23M, 58.92M, 40997 },
                    { -406, new DateTime(2023, 3, 24), 54.18M, 61.21M, 58.24M, 53.77M, 12133 },
                    { -406, new DateTime(2023, 3, 27), 57.33M, 62.5M, 64.67M, 50.36M, 12063 },
                    { -406, new DateTime(2023, 3, 28), 59.95M, 60.91M, 53.76M, 57.12M, 48596 },
                    { -406, new DateTime(2023, 3, 29), 58.33M, 60.13M, 53.96M, 54.57M, 8329 },
                    { -406, new DateTime(2023, 3, 30), 55.93M, 55.85M, 55.11M, 58.37M, 13416 },
                    { -406, new DateTime(2023, 3, 31), 69.68M, 65.65M, 53.89M, 55.81M, 23753 },
                    { -406, new DateTime(2023, 4, 3), 61.87M, 55.57M, 56.08M, 60.34M, 15843 },
                    { -406, new DateTime(2023, 4, 4), 59.7M, 61.32M, 63.97M, 57.28M, 8734 },
                    { -406, new DateTime(2023, 4, 5), 58.61M, 60.54M, 66.2M, 58.98M, 49855 },
                    { -406, new DateTime(2023, 4, 6), 63.87M, 56.34M, 55.23M, 59.89M, 24575 },
                    { -406, new DateTime(2023, 4, 10), 61.69M, 63.37M, 61.86M, 56M, 20756 },
                    { -406, new DateTime(2023, 4, 11), 61.25M, 63.44M, 47.75M, 59.37M, 36346 },
                    { -406, new DateTime(2023, 4, 12), 61.48M, 65.01M, 62.46M, 59.48M, 21750 },
                    { -406, new DateTime(2023, 4, 13), 59.05M, 56.64M, 55.65M, 58.94M, 8932 },
                    { -406, new DateTime(2023, 4, 14), 65.08M, 60.58M, 55.75M, 60.01M, 12458 },
                    { -406, new DateTime(2023, 4, 17), 57.33M, 57.48M, 60.66M, 55.83M, 24007 },
                    { -406, new DateTime(2023, 4, 18), 60.73M, 56.79M, 61.6M, 47.29M, 8852 },
                    { -406, new DateTime(2023, 4, 19), 63.78M, 61.05M, 59.29M, 63.63M, 6018 },
                    { -406, new DateTime(2023, 4, 20), 55.52M, 66.54M, 58.72M, 61.84M, 11175 },
                    { -406, new DateTime(2023, 4, 21), 60.1M, 64.55M, 58.23M, 60.56M, 4668 },
                    { -411, new DateTime(2023, 1, 3), 122.8M, 139.34M, 152.92M, 140.84M, 531914 },
                    { -411, new DateTime(2023, 1, 4), 130.47M, 153.34M, 140.36M, 141.25M, 481202 },
                    { -411, new DateTime(2023, 1, 5), 150.16M, 148.46M, 142.11M, 140.58M, 469490 },
                    { -411, new DateTime(2023, 1, 6), 149.84M, 136.06M, 164.5M, 125.83M, 497162 },
                    { -411, new DateTime(2023, 1, 9), 136.94M, 150.91M, 140.79M, 140.46M, 335130 },
                    { -411, new DateTime(2023, 1, 10), 146.38M, 165.66M, 134.75M, 143.92M, 408243 },
                    { -411, new DateTime(2023, 1, 11), 138.88M, 150.76M, 141.77M, 131.05M, 1576670 },
                    { -411, new DateTime(2023, 1, 12), 141.15M, 133.43M, 115.25M, 164.57M, 623786 },
                    { -411, new DateTime(2023, 1, 13), 130.53M, 131.73M, 145.99M, 139.21M, 430600 },
                    { -411, new DateTime(2023, 1, 17), 161.69M, 149.8M, 135.37M, 146.76M, 1228098 },
                    { -411, new DateTime(2023, 1, 18), 136.65M, 136.12M, 163.14M, 133.41M, 1064160 },
                    { -411, new DateTime(2023, 1, 19), 147.16M, 124.47M, 134.82M, 161.07M, 470462 },
                    { -411, new DateTime(2023, 1, 20), 132.25M, 130.85M, 136.19M, 149.29M, 370670 },
                    { -411, new DateTime(2023, 1, 23), 150.4M, 127.92M, 129.96M, 161.89M, 428973 },
                    { -411, new DateTime(2023, 1, 24), 147.4M, 144.83M, 119.48M, 134.61M, 547419 },
                    { -411, new DateTime(2023, 1, 25), 137.7M, 135.9M, 161.2M, 142.17M, 347282 },
                    { -411, new DateTime(2023, 1, 26), 150.39M, 131.47M, 151.57M, 154.23M, 476760 },
                    { -411, new DateTime(2023, 1, 27), 157.66M, 142.51M, 143.8M, 153.98M, 354563 },
                    { -411, new DateTime(2023, 1, 30), 133.97M, 156.36M, 121.04M, 137.1M, 409746 },
                    { -411, new DateTime(2023, 1, 31), 152.89M, 134.75M, 131.21M, 141.87M, 569469 },
                    { -411, new DateTime(2023, 2, 1), 158.6M, 149.13M, 151.14M, 152.48M, 819989 },
                    { -411, new DateTime(2023, 2, 2), 145.69M, 149.19M, 138.09M, 146.95M, 730591 },
                    { -411, new DateTime(2023, 2, 3), 145.87M, 128.04M, 144.1M, 121.02M, 1280015 },
                    { -411, new DateTime(2023, 2, 6), 131.36M, 129.53M, 143.13M, 120.47M, 617312 },
                    { -411, new DateTime(2023, 2, 7), 146M, 153.98M, 140.95M, 132.7M, 1018343 },
                    { -411, new DateTime(2023, 2, 8), 155.4M, 150.25M, 150.44M, 132.78M, 850148 },
                    { -411, new DateTime(2023, 2, 9), 145.56M, 155.23M, 141.78M, 136.47M, 627360 },
                    { -411, new DateTime(2023, 2, 10), 154.98M, 153.55M, 153.59M, 141.22M, 370833 },
                    { -411, new DateTime(2023, 2, 13), 156.46M, 153.32M, 131.71M, 130.67M, 488147 },
                    { -411, new DateTime(2023, 2, 14), 151.07M, 141.75M, 151.12M, 135.78M, 357754 },
                    { -411, new DateTime(2023, 2, 15), 148.22M, 161.55M, 141.07M, 146.19M, 477273 },
                    { -411, new DateTime(2023, 2, 16), 147.68M, 125.41M, 145.41M, 130.14M, 450692 },
                    { -411, new DateTime(2023, 2, 17), 152.82M, 140.22M, 135.73M, 136.24M, 378271 },
                    { -411, new DateTime(2023, 2, 21), 137.13M, 143.21M, 117.98M, 149.76M, 528152 },
                    { -411, new DateTime(2023, 2, 22), 144.05M, 147.81M, 146.28M, 138.43M, 411503 },
                    { -411, new DateTime(2023, 2, 23), 141.73M, 145.62M, 159.29M, 129.94M, 368806 },
                    { -411, new DateTime(2023, 2, 24), 134.82M, 139.6M, 155.99M, 151.26M, 353553 },
                    { -411, new DateTime(2023, 2, 27), 146.85M, 154.44M, 151.22M, 145.19M, 497619 },
                    { -411, new DateTime(2023, 2, 28), 148.04M, 150.47M, 153.13M, 140.06M, 506045 },
                    { -411, new DateTime(2023, 3, 1), 129.94M, 140.89M, 158.1M, 136.48M, 782948 },
                    { -411, new DateTime(2023, 3, 2), 130.84M, 148.31M, 144.59M, 139.29M, 419118 },
                    { -411, new DateTime(2023, 3, 3), 143.06M, 147.85M, 122.54M, 134.43M, 278198 },
                    { -411, new DateTime(2023, 3, 6), 146.66M, 140.84M, 139.63M, 149.22M, 504319 },
                    { -411, new DateTime(2023, 3, 7), 135M, 127.13M, 149.63M, 126.32M, 696542 },
                    { -411, new DateTime(2023, 3, 8), 130.96M, 153.65M, 130.2M, 133.7M, 402566 },
                    { -411, new DateTime(2023, 3, 9), 133.84M, 145.88M, 125.86M, 147.14M, 362150 },
                    { -411, new DateTime(2023, 3, 10), 139.96M, 131.94M, 133.7M, 127.69M, 588625 },
                    { -411, new DateTime(2023, 3, 13), 133.37M, 137.25M, 134.39M, 126.79M, 552094 },
                    { -411, new DateTime(2023, 3, 14), 141.68M, 125.77M, 156.61M, 150.89M, 578149 },
                    { -411, new DateTime(2023, 3, 15), 124.25M, 144.49M, 135.52M, 128.57M, 735529 },
                    { -411, new DateTime(2023, 3, 16), 151.45M, 119.99M, 118.16M, 140.32M, 586977 },
                    { -411, new DateTime(2023, 3, 17), 125.3M, 142.01M, 144.87M, 132.39M, 8440787 },
                    { -411, new DateTime(2023, 3, 20), 153.14M, 129.27M, 125.62M, 144.95M, 2596287 },
                    { -411, new DateTime(2023, 3, 21), 153.55M, 128.04M, 136.67M, 134.08M, 684517 },
                    { -411, new DateTime(2023, 3, 22), 147.11M, 141.12M, 146.98M, 150.49M, 559600 },
                    { -411, new DateTime(2023, 3, 23), 127.82M, 114.6M, 122.29M, 150.92M, 530749 },
                    { -411, new DateTime(2023, 3, 24), 134.71M, 136.99M, 125.49M, 126.84M, 455293 },
                    { -411, new DateTime(2023, 3, 27), 135.78M, 123.64M, 144.31M, 139.11M, 316960 },
                    { -411, new DateTime(2023, 3, 28), 131.56M, 142.2M, 146.91M, 147.93M, 400143 },
                    { -411, new DateTime(2023, 3, 29), 146.51M, 128.88M, 137.46M, 117.75M, 398709 },
                    { -411, new DateTime(2023, 3, 30), 145.39M, 129.14M, 137.86M, 123.92M, 409617 },
                    { -411, new DateTime(2023, 3, 31), 159.06M, 127.01M, 152.89M, 155.39M, 439208 },
                    { -411, new DateTime(2023, 4, 3), 141.96M, 154.34M, 119.68M, 137.81M, 628543 },
                    { -411, new DateTime(2023, 4, 4), 146.72M, 138.69M, 163.84M, 145.19M, 767192 },
                    { -411, new DateTime(2023, 4, 5), 136.67M, 148.53M, 133.81M, 151.88M, 448793 },
                    { -411, new DateTime(2023, 4, 6), 140.09M, 146.28M, 133.47M, 149.29M, 355575 },
                    { -411, new DateTime(2023, 4, 10), 138.61M, 147.84M, 143.65M, 155.85M, 585533 },
                    { -411, new DateTime(2023, 4, 11), 138.33M, 127.33M, 158.14M, 156.45M, 377476 },
                    { -411, new DateTime(2023, 4, 12), 150.9M, 147.23M, 142.48M, 130.14M, 316050 },
                    { -411, new DateTime(2023, 4, 13), 154.5M, 151.72M, 134.65M, 138.86M, 653417 },
                    { -411, new DateTime(2023, 4, 14), 137.59M, 160.58M, 137.42M, 154.97M, 284998 },
                    { -411, new DateTime(2023, 4, 17), 150.14M, 139.45M, 144.43M, 153.67M, 407084 },
                    { -411, new DateTime(2023, 4, 18), 131.44M, 137.85M, 172.55M, 152.74M, 456636 },
                    { -411, new DateTime(2023, 4, 19), 143.15M, 155.36M, 141.11M, 139.94M, 422281 },
                    { -411, new DateTime(2023, 4, 20), 145.11M, 122.09M, 149.73M, 145.52M, 1231136 },
                    { -411, new DateTime(2023, 4, 21), 140.81M, 123.68M, 153.84M, 136.01M, 429808 },
                    { -442, new DateTime(2023, 3, 31), 34.34M, 31.14M, 32.94M, 32.17M, null },
                    { -442, new DateTime(2023, 3, 30), 35.99M, 36.6M, 35.66M, 30.01M, null },
                    { -442, new DateTime(2023, 3, 29), 34.95M, 35.52M, 32.78M, 34.01M, null },
                    { -442, new DateTime(2023, 3, 28), 30.9M, 34.4M, 32.26M, 34.52M, null },
                    { -442, new DateTime(2023, 3, 27), 34.99M, 36.41M, 29.58M, 33.62M, null },
                    { -442, new DateTime(2023, 3, 24), 38.38M, 34.43M, 33.97M, 31.47M, null },
                    { -442, new DateTime(2023, 3, 23), 31.6M, 33.08M, 34.92M, 33.44M, null },
                    { -442, new DateTime(2023, 3, 22), 33.28M, 32.21M, 32.45M, 30.96M, null },
                    { -442, new DateTime(2023, 3, 21), 35.16M, 35.54M, 34.39M, 30.73M, null },
                    { -442, new DateTime(2023, 3, 20), 34.44M, 34.55M, 30.35M, 34.2M, null },
                    { -442, new DateTime(2023, 3, 17), 31.61M, 33.12M, 31.08M, 33.98M, null },
                    { -442, new DateTime(2023, 3, 16), 34.42M, 32.5M, 31.9M, 29.25M, null },
                    { -442, new DateTime(2023, 3, 15), 36.85M, 32.74M, 32.78M, 29.71M, null },
                    { -442, new DateTime(2023, 3, 14), 32.15M, 33.89M, 31.58M, 32.36M, null },
                    { -442, new DateTime(2023, 3, 13), 33.06M, 33.49M, 33.73M, 32.54M, null },
                    { -442, new DateTime(2023, 3, 10), 32.59M, 33.12M, 36.13M, 29.09M, null },
                    { -442, new DateTime(2023, 3, 9), 27.64M, 34.1M, 36.34M, 32.45M, null },
                    { -442, new DateTime(2023, 3, 8), 33.87M, 31.03M, 34.25M, 36.13M, null },
                    { -442, new DateTime(2023, 3, 7), 36.11M, 34.15M, 32.41M, 35.64M, null },
                    { -442, new DateTime(2023, 3, 6), 31.55M, 32.59M, 32.13M, 30.43M, null },
                    { -442, new DateTime(2023, 3, 3), 33.8M, 35.04M, 31.42M, 36.01M, null },
                    { -442, new DateTime(2023, 3, 2), 30.03M, 33.54M, 33.2M, 34.9M, null },
                    { -442, new DateTime(2023, 3, 1), 35.98M, 33.53M, 29.05M, 33.02M, null },
                    { -442, new DateTime(2023, 2, 28), 32.17M, 30.3M, 29.79M, 26.91M, null },
                    { -442, new DateTime(2023, 2, 27), 32.43M, 31.41M, 30.39M, 34.72M, null },
                    { -442, new DateTime(2023, 2, 24), 31.91M, 31.69M, 30.82M, 29.82M, null },
                    { -442, new DateTime(2023, 2, 23), 32.5M, 27.96M, 33.87M, 36.07M, null },
                    { -442, new DateTime(2023, 2, 22), 38.45M, 36.66M, 33.27M, 35.89M, null },
                    { -442, new DateTime(2023, 2, 21), 32.78M, 32.43M, 28.9M, 33.16M, null },
                    { -442, new DateTime(2023, 2, 17), 40.53M, 31.9M, 36.66M, 33.5M, null },
                    { -442, new DateTime(2023, 2, 16), 35.08M, 33.53M, 31.85M, 33.09M, null },
                    { -442, new DateTime(2023, 2, 15), 30.7M, 34.08M, 33.81M, 34.29M, null },
                    { -442, new DateTime(2023, 2, 14), 35.1M, 30.41M, 33.5M, 33.95M, null },
                    { -442, new DateTime(2023, 2, 13), 33.7M, 34.78M, 36.34M, 35.17M, null },
                    { -442, new DateTime(2023, 2, 10), 29.57M, 34.91M, 31.26M, 34.81M, null },
                    { -442, new DateTime(2023, 2, 9), 37.04M, 34.06M, 35.03M, 38.46M, null },
                    { -442, new DateTime(2023, 2, 8), 34.03M, 30.12M, 35.3M, 37.08M, null },
                    { -442, new DateTime(2023, 2, 7), 27.32M, 35.96M, 38.78M, 33.7M, null },
                    { -442, new DateTime(2023, 2, 6), 33.16M, 38.32M, 30.01M, 34.35M, null },
                    { -442, new DateTime(2023, 2, 3), 35.54M, 36.51M, 32.26M, 33.9M, null },
                    { -442, new DateTime(2023, 2, 2), 38.15M, 37.66M, 37.77M, 34.32M, null },
                    { -442, new DateTime(2023, 2, 1), 38.09M, 32.11M, 35.06M, 38.46M, null },
                    { -442, new DateTime(2023, 1, 31), 36.22M, 40.58M, 33.39M, 32.02M, null },
                    { -442, new DateTime(2023, 1, 30), 35.08M, 33.77M, 35.74M, 38.58M, null },
                    { -442, new DateTime(2023, 1, 27), 38.73M, 39.4M, 37.25M, 35.17M, null },
                    { -442, new DateTime(2023, 1, 26), 34.22M, 38.85M, 36.31M, 38.73M, null },
                    { -442, new DateTime(2023, 1, 25), 38.13M, 35.64M, 33.33M, 37.8M, null },
                    { -442, new DateTime(2023, 1, 24), 34.53M, 36.38M, 33.67M, 33M, null },
                    { -442, new DateTime(2023, 1, 23), 40.09M, 35.79M, 33.89M, 38.35M, null },
                    { -442, new DateTime(2023, 1, 20), 33.98M, 36.94M, 40.52M, 35.9M, null },
                    { -442, new DateTime(2023, 1, 19), 35.54M, 36.48M, 38.77M, 34.7M, null },
                    { -442, new DateTime(2023, 1, 18), 33.68M, 33.17M, 37.43M, 32.59M, null },
                    { -442, new DateTime(2023, 1, 17), 36.11M, 36.82M, 36.31M, 33.76M, null },
                    { -442, new DateTime(2023, 1, 13), 28.41M, 36.75M, 33.13M, 35.29M, null },
                    { -442, new DateTime(2023, 1, 12), 31.67M, 35.1M, 35.13M, 32.36M, null },
                    { -442, new DateTime(2023, 1, 11), 33.67M, 31.03M, 27.68M, 36.02M, null },
                    { -442, new DateTime(2023, 1, 10), 32.41M, 35.82M, 37.13M, 36.28M, null },
                    { -442, new DateTime(2023, 1, 9), 34.09M, 36.24M, 32.28M, 31.44M, null },
                    { -442, new DateTime(2023, 1, 6), 35.66M, 30.87M, 30.54M, 32.53M, null },
                    { -442, new DateTime(2023, 1, 5), 32.58M, 34.44M, 28.5M, 36.32M, null },
                    { -442, new DateTime(2023, 1, 4), 27.89M, 35.87M, 28.55M, 29.88M, null },
                    { -442, new DateTime(2023, 1, 3), 38.58M, 33.5M, 32.16M, 30.78M, null },
                    { -482, new DateTime(2023, 1, 3), 100.94M, 93.98M, 103.42M, 88.72M, 6627173 },
                    { -482, new DateTime(2023, 1, 4), 103.86M, 98.26M, 107.14M, 87.33M, 6558661 },
                    { -482, new DateTime(2023, 1, 5), 83.89M, 94.1M, 108.7M, 102.11M, 4780119 },
                    { -482, new DateTime(2023, 1, 6), 86.77M, 100.08M, 107.95M, 89.1M, 6264732 },
                    { -482, new DateTime(2023, 1, 9), 109.29M, 98.64M, 107.04M, 95.91M, 5528938 },
                    { -482, new DateTime(2023, 1, 10), 110.31M, 104.72M, 104.67M, 108.96M, 3841543 },
                    { -482, new DateTime(2023, 1, 11), 112.12M, 104.27M, 115.05M, 90.07M, 5867272 },
                    { -482, new DateTime(2023, 1, 12), 125.06M, 121.57M, 97.73M, 95.62M, 5032979 },
                    { -482, new DateTime(2023, 1, 13), 103.64M, 112.69M, 113.14M, 103.94M, 5799985 },
                    { -482, new DateTime(2023, 1, 17), 115.46M, 101.69M, 119.6M, 114.28M, 5548608 },
                    { -482, new DateTime(2023, 1, 18), 108.47M, 97.37M, 112.69M, 123.08M, 4961605 },
                    { -482, new DateTime(2023, 1, 19), 95.76M, 100.91M, 118M, 108.34M, 5034270 },
                    { -482, new DateTime(2023, 1, 20), 118.22M, 104.4M, 106.25M, 119.89M, 5767746 },
                    { -482, new DateTime(2023, 1, 23), 123.4M, 102.25M, 110.96M, 111.15M, 7493268 },
                    { -482, new DateTime(2023, 1, 24), 106.98M, 118.54M, 113.01M, 125.25M, 3338604 },
                    { -482, new DateTime(2023, 1, 25), 104.05M, 118.87M, 122.59M, 108.95M, 6784863 },
                    { -482, new DateTime(2023, 1, 26), 127.28M, 109.86M, 130.8M, 106.4M, 5564221 },
                    { -482, new DateTime(2023, 1, 27), 98.46M, 112.87M, 105.16M, 127.95M, 9737174 },
                    { -482, new DateTime(2023, 1, 30), 105.02M, 116.94M, 90.06M, 106.8M, 7672318 },
                    { -482, new DateTime(2023, 1, 31), 112.53M, 104.55M, 108.97M, 96.76M, 7645678 },
                    { -482, new DateTime(2023, 2, 1), 117.55M, 114.73M, 125.87M, 99.56M, 10347128 },
                    { -482, new DateTime(2023, 2, 2), 121.16M, 119.57M, 113.86M, 127.5M, 10629960 },
                    { -482, new DateTime(2023, 2, 3), 121.38M, 141.95M, 119.11M, 129.25M, 5480397 },
                    { -482, new DateTime(2023, 2, 6), 130.4M, 112.14M, 113.69M, 127.1M, 5334494 },
                    { -482, new DateTime(2023, 2, 7), 121.49M, 116.4M, 117.83M, 119.29M, 4881062 },
                    { -482, new DateTime(2023, 2, 8), 112.2M, 119.83M, 109.11M, 127.76M, 6335865 },
                    { -482, new DateTime(2023, 2, 9), 105.35M, 134.26M, 102.41M, 134.13M, 6062799 },
                    { -482, new DateTime(2023, 2, 10), 123.89M, 114.23M, 107.78M, 118.09M, 4574969 },
                    { -482, new DateTime(2023, 2, 13), 125.7M, 118.17M, 120.35M, 109.89M, 3933372 },
                    { -482, new DateTime(2023, 2, 14), 126.31M, 117.32M, 119.88M, 117.93M, 5046706 },
                    { -482, new DateTime(2023, 2, 15), 120.02M, 125.19M, 120.07M, 115.28M, 5271995 },
                    { -482, new DateTime(2023, 2, 16), 122.41M, 135.78M, 112.41M, 127.85M, 8636368 },
                    { -482, new DateTime(2023, 2, 17), 115.25M, 129.37M, 126.67M, 111.4M, 8497703 },
                    { -482, new DateTime(2023, 2, 21), 107.96M, 114.83M, 119.92M, 105.89M, 7567109 },
                    { -482, new DateTime(2023, 2, 22), 119.71M, 107.73M, 116.97M, 116.32M, 5236191 },
                    { -482, new DateTime(2023, 2, 23), 106.22M, 112.18M, 105.38M, 107.36M, 6358950 },
                    { -482, new DateTime(2023, 2, 24), 113.47M, 117.17M, 130.26M, 99.88M, 5553799 },
                    { -482, new DateTime(2023, 2, 27), 107.74M, 121.02M, 107.2M, 119.3M, 6042260 },
                    { -482, new DateTime(2023, 2, 28), 120.7M, 128.02M, 122.43M, 114.71M, 12975943 },
                    { -482, new DateTime(2023, 3, 1), 121.69M, 122.59M, 119.61M, 138.09M, 6802880 },
                    { -482, new DateTime(2023, 3, 2), 115.38M, 119.75M, 113.5M, 116.05M, 6216869 },
                    { -482, new DateTime(2023, 3, 3), 129.24M, 98.91M, 121.78M, 98.55M, 7648497 },
                    { -482, new DateTime(2023, 3, 6), 103.14M, 114.18M, 123.14M, 134.72M, 5523713 },
                    { -482, new DateTime(2023, 3, 7), 101.52M, 94.97M, 113.14M, 120.36M, 5374532 },
                    { -482, new DateTime(2023, 3, 8), 118.5M, 111.63M, 129.46M, 103.21M, 4334588 },
                    { -482, new DateTime(2023, 3, 9), 122.67M, 118.37M, 104.52M, 128.07M, 6020181 },
                    { -482, new DateTime(2023, 3, 10), 128.91M, 106.82M, 145.15M, 115.85M, 5807295 },
                    { -482, new DateTime(2023, 3, 13), 105.38M, 108.66M, 124.38M, 115.11M, 8854219 },
                    { -482, new DateTime(2023, 3, 14), 125.79M, 117.98M, 114.76M, 111.21M, 7167500 },
                    { -482, new DateTime(2023, 3, 15), 123.23M, 109.53M, 121.3M, 122.3M, 8585393 },
                    { -482, new DateTime(2023, 3, 16), 126.12M, 114.49M, 119.06M, 120.87M, 7308555 },
                    { -482, new DateTime(2023, 3, 17), 135.84M, 126.05M, 130.83M, 115.98M, 13853707 },
                    { -482, new DateTime(2023, 3, 20), 119.96M, 114.4M, 120.68M, 113.03M, 5156459 },
                    { -482, new DateTime(2023, 3, 21), 119.69M, 120.93M, 125.88M, 126.8M, 9510767 },
                    { -482, new DateTime(2023, 3, 22), 113.9M, 113.76M, 130.76M, 125.4M, 7219690 },
                    { -482, new DateTime(2023, 3, 23), 127.86M, 116.89M, 112.84M, 128.65M, 6632285 },
                    { -482, new DateTime(2023, 3, 24), 113.78M, 120.56M, 121.01M, 132.34M, 5992034 },
                    { -482, new DateTime(2023, 3, 27), 137.97M, 113.91M, 126.83M, 116.88M, 4759934 },
                    { -482, new DateTime(2023, 3, 28), 139.72M, 128.6M, 125.4M, 95.74M, 5374560 },
                    { -482, new DateTime(2023, 3, 29), 122.47M, 124.98M, 130.23M, 101.38M, 7447598 },
                    { -482, new DateTime(2023, 3, 30), 117.69M, 123.16M, 119.37M, 126.77M, 6652810 },
                    { -482, new DateTime(2023, 3, 31), 122.15M, 131.78M, 126.5M, 119M, 4505562 },
                    { -482, new DateTime(2023, 4, 3), 129.77M, 127.35M, 119.6M, 120.71M, 5520628 },
                    { -482, new DateTime(2023, 4, 4), 123.35M, 128.65M, 135.02M, 113.85M, 4632918 },
                    { -482, new DateTime(2023, 4, 5), 116.06M, 116.31M, 121.81M, 121.33M, 6407835 },
                    { -482, new DateTime(2023, 4, 6), 131.53M, 110.22M, 127.24M, 108.25M, 5570613 },
                    { -482, new DateTime(2023, 4, 10), 101.84M, 118.6M, 127.12M, 106.35M, 3870515 },
                    { -482, new DateTime(2023, 4, 11), 110.82M, 104.47M, 106.85M, 118.64M, 3712198 },
                    { -482, new DateTime(2023, 4, 12), 119.16M, 122.56M, 107.76M, 129.18M, 5574130 },
                    { -482, new DateTime(2023, 4, 13), 107.83M, 102.74M, 111.73M, 127.8M, 5064314 },
                    { -482, new DateTime(2023, 4, 14), 125.08M, 97.04M, 110.55M, 116.32M, 5195289 },
                    { -482, new DateTime(2023, 4, 17), 122.2M, 103.18M, 112.65M, 104.56M, 6597637 },
                    { -482, new DateTime(2023, 4, 18), 110.6M, 116.9M, 112.06M, 111.25M, 5296560 },
                    { -482, new DateTime(2023, 4, 19), 105.06M, 102.26M, 98.91M, 118.74M, 6896277 },
                    { -482, new DateTime(2023, 4, 20), 130.39M, 98.51M, 117.57M, 102.99M, 8634194 },
                    { -482, new DateTime(2023, 4, 21), 113.2M, 112.89M, 113.8M, 110.6M, 4109357 },
                    { -493, new DateTime(2023, 1, 3), 25.96M, 25.39M, 23.71M, 25.65M, 254674 },
                    { -493, new DateTime(2023, 1, 4), 25.66M, 29.33M, 26.4M, 26.42M, 191565 },
                    { -493, new DateTime(2023, 1, 5), 25.75M, 23.58M, 26.76M, 26.74M, 164482 },
                    { -493, new DateTime(2023, 1, 6), 29.89M, 20.54M, 25.62M, 25.73M, 167833 },
                    { -493, new DateTime(2023, 1, 9), 25.35M, 23.99M, 29.32M, 26.51M, 312689 },
                    { -493, new DateTime(2023, 1, 10), 26.82M, 28.61M, 26.58M, 24.43M, 463861 },
                    { -493, new DateTime(2023, 1, 11), 22.25M, 25.75M, 27.55M, 26.62M, 410326 },
                    { -493, new DateTime(2023, 1, 12), 28.09M, 23.55M, 29.31M, 28.36M, 378846 },
                    { -493, new DateTime(2023, 1, 13), 30.81M, 30.19M, 25.9M, 27.29M, 249509 },
                    { -493, new DateTime(2023, 1, 17), 30.51M, 32.61M, 32.52M, 27.18M, 250963 },
                    { -493, new DateTime(2023, 1, 18), 30.05M, 26.14M, 29.19M, 25.71M, 192711 },
                    { -493, new DateTime(2023, 1, 19), 25.67M, 27.29M, 29.11M, 27.75M, 141848 },
                    { -493, new DateTime(2023, 1, 20), 29.27M, 31.56M, 27.13M, 32.11M, 344527 },
                    { -493, new DateTime(2023, 1, 23), 28.01M, 29.89M, 27.51M, 27.32M, 314561 },
                    { -493, new DateTime(2023, 1, 24), 34.05M, 34.38M, 27.12M, 33.27M, 312586 },
                    { -493, new DateTime(2023, 1, 25), 34.02M, 34.64M, 34.32M, 32.96M, 172092 },
                    { -493, new DateTime(2023, 1, 26), 29.92M, 28.04M, 32.58M, 26.71M, 130873 },
                    { -493, new DateTime(2023, 1, 27), 26.66M, 30.45M, 30.55M, 27.72M, 290214 },
                    { -493, new DateTime(2023, 1, 30), 26.48M, 28.61M, 30.3M, 28.61M, 219872 },
                    { -493, new DateTime(2023, 1, 31), 28.27M, 29.29M, 29.24M, 28.83M, 285089 },
                    { -493, new DateTime(2023, 2, 1), 25.71M, 26.8M, 28.28M, 28.79M, 293473 },
                    { -493, new DateTime(2023, 2, 2), 27.59M, 25.53M, 27.68M, 28.37M, 367313 },
                    { -493, new DateTime(2023, 2, 3), 26.31M, 29.64M, 31.2M, 28.2M, 246824 },
                    { -493, new DateTime(2023, 2, 6), 24.74M, 29.7M, 24.79M, 24.54M, 358041 },
                    { -493, new DateTime(2023, 2, 7), 25.74M, 26.68M, 27.42M, 28.67M, 309064 },
                    { -493, new DateTime(2023, 2, 8), 30.99M, 26.13M, 30.9M, 28.18M, 340382 },
                    { -493, new DateTime(2023, 2, 9), 29.11M, 27.61M, 23.39M, 29.19M, 422792 },
                    { -493, new DateTime(2023, 2, 10), 24.91M, 28.08M, 26.52M, 23.88M, 342208 },
                    { -493, new DateTime(2023, 2, 13), 26.27M, 30.05M, 27.2M, 26.83M, 253627 },
                    { -493, new DateTime(2023, 2, 14), 28.44M, 23.87M, 28.95M, 29.09M, 212518 },
                    { -493, new DateTime(2023, 2, 15), 25.15M, 28.51M, 27.65M, 27.83M, 335144 },
                    { -493, new DateTime(2023, 2, 16), 29.93M, 24.89M, 28.01M, 29.36M, 402265 },
                    { -493, new DateTime(2023, 2, 17), 26.37M, 27.21M, 29.08M, 24.2M, 411062 },
                    { -493, new DateTime(2023, 2, 21), 27.89M, 27.93M, 23.77M, 26.66M, 294894 },
                    { -493, new DateTime(2023, 2, 22), 25.91M, 29.09M, 27.05M, 25.57M, 194240 },
                    { -493, new DateTime(2023, 2, 23), 28.87M, 28.94M, 27.52M, 29.48M, 294164 },
                    { -493, new DateTime(2023, 2, 24), 23.38M, 22.1M, 25.98M, 27.2M, 381512 },
                    { -493, new DateTime(2023, 2, 27), 27.69M, 26.35M, 24.72M, 23.71M, 327986 },
                    { -493, new DateTime(2023, 2, 28), 21.39M, 28.11M, 28.27M, 23.88M, 388042 },
                    { -493, new DateTime(2023, 3, 1), 25.91M, 23.99M, 25.73M, 23.85M, 365772 },
                    { -493, new DateTime(2023, 3, 2), 27.37M, 25.53M, 28.94M, 25.23M, 530427 },
                    { -493, new DateTime(2023, 3, 3), 27.6M, 25.25M, 23.87M, 26.5M, 423104 },
                    { -493, new DateTime(2023, 3, 6), 24.64M, 27.83M, 28.56M, 28.62M, 389829 },
                    { -493, new DateTime(2023, 3, 7), 28.43M, 27.56M, 27.85M, 29.17M, 465268 },
                    { -493, new DateTime(2023, 3, 8), 28.76M, 27.27M, 26.96M, 26.94M, 273952 },
                    { -493, new DateTime(2023, 3, 9), 28.49M, 25.62M, 28.6M, 27.89M, 384393 },
                    { -493, new DateTime(2023, 3, 10), 27.83M, 27.63M, 31.29M, 28.59M, 691024 },
                    { -493, new DateTime(2023, 3, 13), 30.32M, 27.76M, 23.22M, 28.91M, 483413 },
                    { -493, new DateTime(2023, 3, 14), 29.01M, 29.87M, 29.7M, 26.6M, 393585 },
                    { -493, new DateTime(2023, 3, 15), 31.8M, 32.47M, 29.02M, 27.64M, 447268 },
                    { -493, new DateTime(2023, 3, 16), 29.8M, 23.88M, 27.53M, 27.31M, 428595 },
                    { -493, new DateTime(2023, 3, 17), 31.1M, 27.98M, 30.73M, 28.41M, 795694 },
                    { -493, new DateTime(2023, 3, 20), 25.61M, 28.09M, 31.46M, 23.15M, 438361 },
                    { -493, new DateTime(2023, 3, 21), 26.77M, 29.85M, 31.07M, 29.02M, 294195 },
                    { -493, new DateTime(2023, 3, 22), 26.43M, 29.33M, 27.62M, 26.66M, 217674 },
                    { -493, new DateTime(2023, 3, 23), 28.41M, 28.14M, 27.22M, 27.46M, 289380 },
                    { -493, new DateTime(2023, 3, 24), 27.35M, 25.37M, 27.91M, 26.33M, 167169 },
                    { -493, new DateTime(2023, 3, 27), 27.57M, 31.39M, 31.56M, 27.78M, 147284 },
                    { -493, new DateTime(2023, 3, 28), 25.97M, 32.28M, 27.03M, 29.51M, 253797 },
                    { -493, new DateTime(2023, 3, 29), 31.92M, 32.22M, 29.71M, 28.78M, 335391 },
                    { -493, new DateTime(2023, 3, 30), 30.82M, 32.66M, 32.55M, 29.46M, 357752 },
                    { -493, new DateTime(2023, 3, 31), 28.3M, 30.1M, 32.56M, 32.88M, 330030 },
                    { -493, new DateTime(2023, 4, 3), 30.05M, 31.35M, 30.43M, 29.69M, 475388 },
                    { -493, new DateTime(2023, 4, 4), 30.41M, 26.64M, 30.27M, 32.46M, 162336 },
                    { -493, new DateTime(2023, 4, 5), 29.55M, 29.31M, 31.25M, 30.74M, 136243 },
                    { -493, new DateTime(2023, 4, 6), 32.9M, 29.51M, 33.95M, 31.76M, 206169 },
                    { -493, new DateTime(2023, 4, 10), 27.46M, 29.22M, 30.58M, 30.02M, 316222 },
                    { -493, new DateTime(2023, 4, 11), 28.21M, 31.43M, 29.45M, 26.51M, 193632 },
                    { -493, new DateTime(2023, 4, 12), 29.83M, 33.79M, 31.37M, 27.25M, 197115 },
                    { -493, new DateTime(2023, 4, 13), 32.64M, 33.31M, 31.74M, 31.68M, 137748 },
                    { -493, new DateTime(2023, 4, 14), 34.45M, 31.59M, 31.65M, 31.04M, 151830 },
                    { -493, new DateTime(2023, 4, 17), 31.79M, 31.25M, 29.64M, 35.14M, 210266 },
                    { -493, new DateTime(2023, 4, 18), 29.89M, 30.19M, 31.16M, 33.54M, 93741 },
                    { -493, new DateTime(2023, 4, 19), 30.08M, 31.48M, 28.03M, 31.15M, 101779 },
                    { -493, new DateTime(2023, 4, 20), 31.33M, 33.71M, 28.47M, 31.91M, 263865 },
                    { -493, new DateTime(2023, 4, 21), 30.53M, 31.3M, 32.77M, 33.34M, 176658 },
                    { -514, new DateTime(2023, 1, 3), 251.07M, 214.71M, 236.49M, 258.11M, 1285304 },
                    { -514, new DateTime(2023, 1, 4), 236.46M, 249.69M, 265.8M, 264.18M, 1426724 },
                    { -514, new DateTime(2023, 1, 5), 259.43M, 247.75M, 225.48M, 204.43M, 838992 },
                    { -514, new DateTime(2023, 1, 6), 225.3M, 239.9M, 267.36M, 254.26M, 1263241 },
                    { -514, new DateTime(2023, 1, 9), 237.82M, 256.16M, 241.03M, 278.25M, 1275630 },
                    { -514, new DateTime(2023, 1, 10), 241.05M, 253.26M, 237.91M, 254.86M, 726864 },
                    { -514, new DateTime(2023, 1, 11), 267.8M, 264.47M, 247.03M, 235.88M, 724757 },
                    { -514, new DateTime(2023, 1, 12), 251.56M, 235.86M, 226.09M, 257.32M, 1198279 },
                    { -514, new DateTime(2023, 1, 13), 232.91M, 291.68M, 260.12M, 248.62M, 623689 },
                    { -514, new DateTime(2023, 1, 17), 238.09M, 242.02M, 238.39M, 254.84M, 917533 },
                    { -514, new DateTime(2023, 1, 18), 213.07M, 263.37M, 278.05M, 255.74M, 1126287 },
                    { -514, new DateTime(2023, 1, 19), 243.6M, 262.06M, 276.62M, 245.35M, 574323 },
                    { -514, new DateTime(2023, 1, 20), 261.33M, 250.19M, 279.72M, 273.82M, 805894 },
                    { -514, new DateTime(2023, 1, 23), 337.96M, 254.1M, 234.64M, 254.36M, 1062599 },
                    { -514, new DateTime(2023, 1, 24), 239.95M, 279.78M, 251.44M, 255.22M, 682365 },
                    { -514, new DateTime(2023, 1, 25), 257.58M, 262.05M, 261.62M, 282.53M, 816406 },
                    { -514, new DateTime(2023, 1, 26), 260.52M, 269.33M, 260.34M, 251.22M, 978423 },
                    { -514, new DateTime(2023, 1, 27), 245.42M, 286.17M, 282.17M, 250.14M, 863244 },
                    { -514, new DateTime(2023, 1, 30), 250.59M, 268.25M, 228.01M, 271.5M, 834936 },
                    { -514, new DateTime(2023, 1, 31), 288.77M, 241.05M, 275.07M, 249.44M, 1506495 },
                    { -514, new DateTime(2023, 2, 1), 271.57M, 249.15M, 267.01M, 270.2M, 1353030 },
                    { -514, new DateTime(2023, 2, 2), 279.25M, 310.98M, 272.04M, 298.98M, 1139081 },
                    { -514, new DateTime(2023, 2, 3), 237.95M, 256.09M, 248.38M, 299.79M, 1213399 },
                    { -514, new DateTime(2023, 2, 6), 274.13M, 284.58M, 253.28M, 251.73M, 1010995 },
                    { -514, new DateTime(2023, 2, 7), 273.84M, 273.92M, 288.07M, 279.13M, 1375797 },
                    { -514, new DateTime(2023, 2, 8), 328.28M, 252.63M, 317.26M, 247.27M, 996122 },
                    { -514, new DateTime(2023, 2, 9), 267.46M, 264.17M, 241.95M, 276.95M, 839495 },
                    { -514, new DateTime(2023, 2, 10), 249.71M, 278.83M, 274.19M, 277.07M, 593809 },
                    { -514, new DateTime(2023, 2, 13), 274.7M, 314.31M, 267.65M, 266.61M, 454634 },
                    { -514, new DateTime(2023, 2, 14), 290.11M, 271.4M, 275.64M, 256.65M, 697008 },
                    { -514, new DateTime(2023, 2, 15), 310.07M, 272.63M, 261.78M, 258.79M, 732559 },
                    { -514, new DateTime(2023, 2, 16), 200.88M, 266.06M, 258.98M, 249.25M, 1811441 },
                    { -514, new DateTime(2023, 2, 17), 254.95M, 272.91M, 248.45M, 269.73M, 822681 },
                    { -514, new DateTime(2023, 2, 21), 274.63M, 241.79M, 268.96M, 269.04M, 711843 },
                    { -514, new DateTime(2023, 2, 22), 264.03M, 273.55M, 269.03M, 238.44M, 672068 },
                    { -514, new DateTime(2023, 2, 23), 237.98M, 296.68M, 286.23M, 258.01M, 651154 },
                    { -514, new DateTime(2023, 2, 24), 274.81M, 197.33M, 279.42M, 244.6M, 997822 },
                    { -514, new DateTime(2023, 2, 27), 255.21M, 255.94M, 254.96M, 259.74M, 1347994 },
                    { -514, new DateTime(2023, 2, 28), 254.65M, 247.92M, 271.58M, 248.7M, 1125455 },
                    { -514, new DateTime(2023, 3, 1), 293.24M, 280.02M, 296.04M, 282.82M, 2007924 },
                    { -514, new DateTime(2023, 3, 2), 241.4M, 258.02M, 254.8M, 235.91M, 2258030 },
                    { -514, new DateTime(2023, 3, 3), 271.09M, 245.9M, 312.39M, 263.77M, 1194440 },
                    { -514, new DateTime(2023, 3, 6), 283.05M, 271.69M, 266.69M, 250.28M, 1403430 },
                    { -514, new DateTime(2023, 3, 7), 275.32M, 288.11M, 268.97M, 249.91M, 799214 },
                    { -514, new DateTime(2023, 3, 8), 227.85M, 298.3M, 253.76M, 237.02M, 1589208 },
                    { -514, new DateTime(2023, 3, 9), 207.75M, 236.81M, 259.39M, 273.3M, 2226366 },
                    { -514, new DateTime(2023, 3, 10), 250.64M, 236.54M, 300.68M, 254.09M, 1997654 },
                    { -514, new DateTime(2023, 3, 13), 238.65M, 229.81M, 247.46M, 233.18M, 1835690 },
                    { -514, new DateTime(2023, 3, 14), 233.69M, 277.35M, 261.08M, 198.99M, 1074233 },
                    { -514, new DateTime(2023, 3, 15), 255.65M, 227.96M, 235.94M, 234.09M, 1318575 },
                    { -514, new DateTime(2023, 3, 16), 272.41M, 245.65M, 265.54M, 241.59M, 1518609 },
                    { -514, new DateTime(2023, 3, 17), 197.91M, 254.88M, 242.09M, 290.83M, 1790769 },
                    { -514, new DateTime(2023, 3, 20), 258.96M, 271.17M, 228.36M, 245.04M, 1445810 },
                    { -514, new DateTime(2023, 3, 21), 259.18M, 197.76M, 237.06M, 249.58M, 999203 },
                    { -514, new DateTime(2023, 3, 22), 233.99M, 256.93M, 242.83M, 220.58M, 2096704 },
                    { -514, new DateTime(2023, 3, 23), 241.28M, 220.47M, 239.36M, 236.28M, 1152448 },
                    { -514, new DateTime(2023, 3, 24), 233.86M, 221.79M, 241.04M, 215.82M, 936239 },
                    { -514, new DateTime(2023, 3, 27), 225.96M, 222.21M, 254.7M, 226.2M, 1321465 },
                    { -514, new DateTime(2023, 3, 28), 263.33M, 259.19M, 239.11M, 248.3M, 866566 },
                    { -514, new DateTime(2023, 3, 29), 262.34M, 250.23M, 225.62M, 253.12M, 1332171 },
                    { -514, new DateTime(2023, 3, 30), 234.42M, 256.05M, 254.23M, 269.43M, 1094066 },
                    { -514, new DateTime(2023, 3, 31), 244.51M, 262.94M, 231.26M, 263.86M, 1545449 },
                    { -514, new DateTime(2023, 4, 3), 226.39M, 256.7M, 268.23M, 245.74M, 1246508 },
                    { -514, new DateTime(2023, 4, 4), 238.27M, 221.85M, 281.9M, 277.91M, 1333612 },
                    { -514, new DateTime(2023, 4, 5), 256.2M, 226.83M, 216.15M, 240.92M, 909460 },
                    { -514, new DateTime(2023, 4, 6), 270.21M, 269.13M, 257.15M, 236.02M, 681446 },
                    { -514, new DateTime(2023, 4, 10), 254.78M, 228.97M, 248.16M, 226.34M, 745036 },
                    { -514, new DateTime(2023, 4, 11), 251.81M, 245M, 297.08M, 261.26M, 908016 },
                    { -514, new DateTime(2023, 4, 12), 303.14M, 275.01M, 229.63M, 292.5M, 798545 },
                    { -514, new DateTime(2023, 4, 13), 273.82M, 288.17M, 267.01M, 259.38M, 812114 },
                    { -514, new DateTime(2023, 4, 14), 242.93M, 288.99M, 253.24M, 232.59M, 751879 },
                    { -514, new DateTime(2023, 4, 17), 256.39M, 238.63M, 234.23M, 214.58M, 700994 },
                    { -514, new DateTime(2023, 4, 18), 278.68M, 246.89M, 231.43M, 263.94M, 723083 },
                    { -514, new DateTime(2023, 4, 19), 230.83M, 225.82M, 237.39M, 238.69M, 629494 },
                    { -514, new DateTime(2023, 4, 20), 266.88M, 257.82M, 254.42M, 232.84M, 810282 },
                    { -514, new DateTime(2023, 4, 21), 267.45M, 248.21M, 253.17M, 265.35M, 1103955 },
                    { -523, new DateTime(2023, 1, 3), 84.72M, 75.89M, 93.2M, 82.98M, 4904580 },
                    { -523, new DateTime(2023, 1, 4), 84.38M, 83.41M, 79.12M, 85.06M, 5342732 },
                    { -523, new DateTime(2023, 1, 5), 77.75M, 76.64M, 79.82M, 89M, 4825258 },
                    { -523, new DateTime(2023, 1, 6), 93.49M, 99.88M, 82.41M, 67.91M, 5303007 },
                    { -523, new DateTime(2023, 1, 9), 81.15M, 87.13M, 79.42M, 81.14M, 4285892 },
                    { -523, new DateTime(2023, 1, 10), 93.59M, 75.36M, 84.79M, 77.8M, 4586762 },
                    { -523, new DateTime(2023, 1, 11), 73.15M, 76.44M, 84.54M, 94.61M, 6967709 },
                    { -523, new DateTime(2023, 1, 12), 85.16M, 92.34M, 97.53M, 83.54M, 4963323 },
                    { -523, new DateTime(2023, 1, 13), 93.69M, 84.88M, 83.43M, 79.63M, 4923282 },
                    { -523, new DateTime(2023, 1, 17), 89.18M, 83.64M, 84.88M, 73.28M, 7933034 },
                    { -523, new DateTime(2023, 1, 18), 74.11M, 94.18M, 90.05M, 90.84M, 6911142 },
                    { -523, new DateTime(2023, 1, 19), 85.24M, 80.94M, 91.21M, 78.38M, 7383543 },
                    { -523, new DateTime(2023, 1, 20), 92.13M, 76.19M, 94.44M, 79.33M, 9724437 },
                    { -523, new DateTime(2023, 1, 23), 87.78M, 83.91M, 90.78M, 88.31M, 6681158 },
                    { -523, new DateTime(2023, 1, 24), 86.61M, 89.02M, 90.21M, 79.16M, 6878575 },
                    { -523, new DateTime(2023, 1, 25), 81.66M, 78.63M, 80.88M, 86.52M, 23024825 },
                    { -523, new DateTime(2023, 1, 26), 79.69M, 75.77M, 81.01M, 75.31M, 17868851 },
                    { -523, new DateTime(2023, 1, 27), 81.3M, 85.87M, 75.6M, 78.42M, 13702234 },
                    { -523, new DateTime(2023, 1, 30), 66.98M, 75.7M, 85.62M, 80.13M, 10443364 },
                    { -523, new DateTime(2023, 1, 31), 80.75M, 66.83M, 79.33M, 69.84M, 18144190 },
                    { -523, new DateTime(2023, 2, 1), 67.9M, 72.41M, 69.71M, 69.11M, 15221229 },
                    { -523, new DateTime(2023, 2, 2), 77.1M, 79.2M, 77.69M, 75.29M, 20996481 },
                    { -523, new DateTime(2023, 2, 3), 70.65M, 69.7M, 69.64M, 74.43M, 11137207 },
                    { -523, new DateTime(2023, 2, 6), 68.32M, 73.08M, 69.27M, 76.45M, 9104248 },
                    { -523, new DateTime(2023, 2, 7), 79.94M, 75.45M, 70.65M, 91.4M, 11127982 },
                    { -523, new DateTime(2023, 2, 8), 83.02M, 81.3M, 84.19M, 73.52M, 9143793 },
                    { -523, new DateTime(2023, 2, 9), 71.05M, 77.18M, 80.55M, 70.96M, 11963435 },
                    { -523, new DateTime(2023, 2, 10), 71.81M, 60.05M, 77.71M, 79.82M, 10996533 },
                    { -523, new DateTime(2023, 2, 13), 67.95M, 69.4M, 75.96M, 83.46M, 8918748 },
                    { -523, new DateTime(2023, 2, 14), 64.55M, 72.36M, 75.7M, 73.32M, 6613802 },
                    { -523, new DateTime(2023, 2, 15), 67.77M, 73.42M, 74.13M, 67.63M, 9268419 },
                    { -523, new DateTime(2023, 2, 16), 71.47M, 83.68M, 76.24M, 65.95M, 7797109 },
                    { -523, new DateTime(2023, 2, 17), 65.06M, 74.61M, 67.47M, 76.37M, 9231582 },
                    { -523, new DateTime(2023, 2, 21), 79.93M, 72.44M, 77.65M, 74.63M, 12399084 },
                    { -523, new DateTime(2023, 2, 22), 73.86M, 75.57M, 70.92M, 73.09M, 8571770 },
                    { -523, new DateTime(2023, 2, 23), 66.73M, 74.56M, 73.01M, 65.59M, 10038850 },
                    { -523, new DateTime(2023, 2, 24), 90.12M, 72.57M, 75.97M, 67.18M, 10213396 },
                    { -523, new DateTime(2023, 2, 27), 67.37M, 75.91M, 76.46M, 74.26M, 6535345 },
                    { -523, new DateTime(2023, 2, 28), 78.19M, 75.56M, 69.3M, 65.3M, 9945399 },
                    { -523, new DateTime(2023, 3, 1), 71.73M, 64.97M, 69.19M, 71.3M, 12071130 },
                    { -523, new DateTime(2023, 3, 2), 76.3M, 70.18M, 63.93M, 70.13M, 18018100 },
                    { -523, new DateTime(2023, 3, 3), 69.98M, 70.43M, 71.33M, 68.74M, 11072086 },
                    { -523, new DateTime(2023, 3, 6), 89.15M, 77.26M, 68.94M, 67.71M, 6396300 },
                    { -523, new DateTime(2023, 3, 7), 75.63M, 69.38M, 68.07M, 82.54M, 7647143 },
                    { -523, new DateTime(2023, 3, 8), 79.27M, 76.19M, 74.28M, 61.63M, 5821935 },
                    { -523, new DateTime(2023, 3, 9), 70.64M, 72.07M, 81.05M, 69.59M, 6640952 },
                    { -523, new DateTime(2023, 3, 10), 71.78M, 65.59M, 76.98M, 68.58M, 10515022 },
                    { -523, new DateTime(2023, 3, 13), 75.48M, 74.42M, 77.37M, 74.58M, 9631335 },
                    { -523, new DateTime(2023, 3, 14), 81.69M, 68.77M, 85.55M, 72.34M, 7329652 },
                    { -523, new DateTime(2023, 3, 15), 80.78M, 73.38M, 65.35M, 80.26M, 12697640 },
                    { -523, new DateTime(2023, 3, 16), 76.25M, 76.41M, 67.42M, 80.05M, 9491719 },
                    { -523, new DateTime(2023, 3, 17), 72.79M, 77.35M, 71.99M, 69.41M, 14643628 },
                    { -523, new DateTime(2023, 3, 20), 63.59M, 63.43M, 85.9M, 78.27M, 7727551 },
                    { -523, new DateTime(2023, 3, 21), 76.08M, 95.78M, 77.78M, 77.9M, 5971369 },
                    { -523, new DateTime(2023, 3, 22), 75.44M, 79.14M, 86.64M, 75.74M, 7342330 },
                    { -523, new DateTime(2023, 3, 23), 70.77M, 65.42M, 63.35M, 74.46M, 7058280 },
                    { -523, new DateTime(2023, 3, 24), 70.23M, 71.05M, 74.6M, 63.52M, 5399955 },
                    { -523, new DateTime(2023, 3, 27), 70.86M, 67.96M, 84.84M, 70.4M, 4979594 },
                    { -523, new DateTime(2023, 3, 28), 77.04M, 71.99M, 66.93M, 80.73M, 6494347 },
                    { -523, new DateTime(2023, 3, 29), 73.92M, 81.57M, 69.82M, 78.33M, 5490812 },
                    { -523, new DateTime(2023, 3, 30), 81.21M, 74.72M, 77.55M, 71.52M, 5670545 },
                    { -523, new DateTime(2023, 3, 31), 75.2M, 70.68M, 74.72M, 86.85M, 10181218 },
                    { -523, new DateTime(2023, 4, 3), 74.37M, 81.68M, 76.8M, 77.57M, 5740987 },
                    { -523, new DateTime(2023, 4, 4), 84.18M, 79.57M, 69.22M, 76.32M, 6441168 },
                    { -523, new DateTime(2023, 4, 5), 76.96M, 80.86M, 74.77M, 91.65M, 8677133 },
                    { -523, new DateTime(2023, 4, 6), 78.8M, 71.02M, 74.43M, 80.22M, 5151002 },
                    { -523, new DateTime(2023, 4, 10), 73.28M, 73.11M, 86.57M, 78.99M, 5701676 },
                    { -523, new DateTime(2023, 4, 11), 76.31M, 73.96M, 74.88M, 75.36M, 5977002 },
                    { -523, new DateTime(2023, 4, 12), 83.24M, 78.65M, 76.72M, 84.04M, 6110293 },
                    { -523, new DateTime(2023, 4, 13), 75.01M, 82M, 64.67M, 77.71M, 4649829 },
                    { -523, new DateTime(2023, 4, 14), 75.56M, 83.97M, 76.27M, 82.96M, 5101754 },
                    { -523, new DateTime(2023, 4, 17), 75.14M, 82M, 82M, 70.95M, 4395516 },
                    { -523, new DateTime(2023, 4, 18), 80.4M, 61.02M, 87.61M, 85.51M, 7936042 },
                    { -523, new DateTime(2023, 4, 19), 82.86M, 80.22M, 84.69M, 96.68M, 3799985 },
                    { -523, new DateTime(2023, 4, 20), 72.39M, 79.47M, 79.53M, 79.65M, 4264794 },
                    { -523, new DateTime(2023, 4, 21), 76.28M, 75.85M, 75.29M, 73.66M, 5519795 },
                    { -574, new DateTime(2023, 3, 31), 115.41M, 102.85M, 107.77M, 118.98M, null },
                    { -574, new DateTime(2023, 3, 30), 119.5M, 112.14M, 102.74M, 134.59M, null },
                    { -574, new DateTime(2023, 3, 29), 125.59M, 115.67M, 132.84M, 111.81M, null },
                    { -574, new DateTime(2023, 3, 28), 123.13M, 103.59M, 121.19M, 121.16M, null },
                    { -574, new DateTime(2023, 3, 27), 113.24M, 112.63M, 113.25M, 110.78M, null },
                    { -574, new DateTime(2023, 3, 24), 134.35M, 114.51M, 117.55M, 120.58M, null },
                    { -574, new DateTime(2023, 3, 23), 100.32M, 118.48M, 120.93M, 130.89M, null },
                    { -574, new DateTime(2023, 3, 22), 104.14M, 105.18M, 124.01M, 113.39M, null },
                    { -574, new DateTime(2023, 3, 21), 111.75M, 111.06M, 124.38M, 119.92M, null },
                    { -574, new DateTime(2023, 3, 20), 103.66M, 122.87M, 111.89M, 101.6M, null },
                    { -574, new DateTime(2023, 3, 17), 136.01M, 115.69M, 110.8M, 105.58M, null },
                    { -574, new DateTime(2023, 3, 16), 106.32M, 127.33M, 101.18M, 107.59M, null },
                    { -574, new DateTime(2023, 3, 15), 112.45M, 124.43M, 102.17M, 118.01M, null },
                    { -574, new DateTime(2023, 3, 14), 110.67M, 101.59M, 110.52M, 120.81M, null },
                    { -574, new DateTime(2023, 3, 13), 115.48M, 119.27M, 100.36M, 105.49M, null },
                    { -574, new DateTime(2023, 3, 10), 119.02M, 102.73M, 111.49M, 115.18M, null },
                    { -574, new DateTime(2023, 3, 9), 112.11M, 102.95M, 109.45M, 108.12M, null },
                    { -574, new DateTime(2023, 3, 8), 104.94M, 110.99M, 111.19M, 123.9M, null },
                    { -574, new DateTime(2023, 3, 7), 107.52M, 100.51M, 118.96M, 92.67M, null },
                    { -574, new DateTime(2023, 3, 6), 103.14M, 107.78M, 117.36M, 120.36M, null },
                    { -574, new DateTime(2023, 3, 3), 118.76M, 120.85M, 110.98M, 106.91M, null },
                    { -574, new DateTime(2023, 3, 2), 105.11M, 118.61M, 101.88M, 119.35M, null },
                    { -574, new DateTime(2023, 3, 1), 112.87M, 121.12M, 103.63M, 111.18M, null },
                    { -574, new DateTime(2023, 2, 28), 102.43M, 113.85M, 111.8M, 102.39M, null },
                    { -574, new DateTime(2023, 2, 27), 110.63M, 101.07M, 123.54M, 128.1M, null },
                    { -574, new DateTime(2023, 2, 24), 110.84M, 94.56M, 102.05M, 113.1M, null },
                    { -574, new DateTime(2023, 2, 23), 117.09M, 118.04M, 119.04M, 103.53M, null },
                    { -574, new DateTime(2023, 2, 22), 109.14M, 115.67M, 111.69M, 116.51M, null },
                    { -574, new DateTime(2023, 2, 21), 116.13M, 113.52M, 102.63M, 109.72M, null },
                    { -574, new DateTime(2023, 2, 17), 102.53M, 114.05M, 108.77M, 118.19M, null },
                    { -574, new DateTime(2023, 2, 16), 120.92M, 112.54M, 102.48M, 108.47M, null },
                    { -574, new DateTime(2023, 2, 15), 131.01M, 116.45M, 112.17M, 118.86M, null },
                    { -574, new DateTime(2023, 2, 14), 105.73M, 115.4M, 131.13M, 103.3M, null },
                    { -574, new DateTime(2023, 2, 13), 129.32M, 113.23M, 103.18M, 123.58M, null },
                    { -574, new DateTime(2023, 2, 10), 120.2M, 114.54M, 122.79M, 122.02M, null },
                    { -574, new DateTime(2023, 2, 9), 101.9M, 117.85M, 109.18M, 119.35M, null },
                    { -574, new DateTime(2023, 2, 8), 123.54M, 124.2M, 119.83M, 111.51M, null },
                    { -574, new DateTime(2023, 2, 7), 111.33M, 110.87M, 127.9M, 113.38M, null },
                    { -574, new DateTime(2023, 2, 6), 101.99M, 118.36M, 107.04M, 106.8M, null },
                    { -574, new DateTime(2023, 2, 3), 116.77M, 126.19M, 114.89M, 117.01M, null },
                    { -574, new DateTime(2023, 2, 2), 115.26M, 125.84M, 125.41M, 113.68M, null },
                    { -574, new DateTime(2023, 2, 1), 120.69M, 109.91M, 122.9M, 113.96M, null },
                    { -574, new DateTime(2023, 1, 31), 127.71M, 110.74M, 113.79M, 101.7M, null },
                    { -574, new DateTime(2023, 1, 30), 114.72M, 112.86M, 104.89M, 122.99M, null },
                    { -574, new DateTime(2023, 1, 27), 114.06M, 107.98M, 115.71M, 110.6M, null },
                    { -574, new DateTime(2023, 1, 26), 113.47M, 102.23M, 122.47M, 114.82M, null },
                    { -574, new DateTime(2023, 1, 25), 98.93M, 115.32M, 121.6M, 116.68M, null },
                    { -574, new DateTime(2023, 1, 24), 102.76M, 117.53M, 120.74M, 101.16M, null },
                    { -574, new DateTime(2023, 1, 23), 100.31M, 112.79M, 113.99M, 103.58M, null },
                    { -574, new DateTime(2023, 1, 20), 105.73M, 112.36M, 104.83M, 105.19M, null },
                    { -574, new DateTime(2023, 1, 19), 105.05M, 110.85M, 108.52M, 97.58M, null },
                    { -574, new DateTime(2023, 1, 18), 105.49M, 114.43M, 99.02M, 104.15M, null },
                    { -574, new DateTime(2023, 1, 17), 96.42M, 111.54M, 123.25M, 110.43M, null },
                    { -574, new DateTime(2023, 1, 13), 112.7M, 113.08M, 106.72M, 103.98M, null },
                    { -574, new DateTime(2023, 1, 12), 100.54M, 110.85M, 112.65M, 109.6M, null },
                    { -574, new DateTime(2023, 1, 11), 120.09M, 118.75M, 104.92M, 111.61M, null },
                    { -574, new DateTime(2023, 1, 10), 108.28M, 100.93M, 105.11M, 102.76M, null },
                    { -574, new DateTime(2023, 1, 9), 103.73M, 108.6M, 99.73M, 102.8M, null },
                    { -574, new DateTime(2023, 1, 6), 90.58M, 103.12M, 98.21M, 102.34M, null },
                    { -574, new DateTime(2023, 1, 5), 101.29M, 92.54M, 100.82M, 94.69M, null },
                    { -574, new DateTime(2023, 1, 4), 107.19M, 112.88M, 90.39M, 99.03M, null },
                    { -574, new DateTime(2023, 1, 3), 95.02M, 103.93M, 95.92M, 91.32M, null },
                    { -575, new DateTime(2023, 3, 31), 406.52M, 374.68M, 381.3M, 375.82M, null },
                    { -575, new DateTime(2023, 3, 30), 408M, 370.21M, 383.33M, 413.33M, null },
                    { -575, new DateTime(2023, 3, 29), 413.48M, 402.52M, 375.39M, 377.69M, null },
                    { -575, new DateTime(2023, 3, 28), 342.45M, 373.47M, 405.76M, 394.29M, null },
                    { -575, new DateTime(2023, 3, 27), 370.42M, 373.24M, 367.84M, 376.78M, null },
                    { -575, new DateTime(2023, 3, 24), 394.25M, 375.13M, 377.6M, 373.67M, null },
                    { -575, new DateTime(2023, 3, 23), 352.33M, 347.88M, 353.82M, 375.51M, null },
                    { -575, new DateTime(2023, 3, 22), 359.83M, 387.16M, 391.83M, 362.92M, null },
                    { -575, new DateTime(2023, 3, 21), 358.84M, 384.13M, 395.94M, 370.04M, null },
                    { -575, new DateTime(2023, 3, 20), 317.38M, 366.3M, 416.86M, 382.83M, null },
                    { -575, new DateTime(2023, 3, 17), 383.93M, 417.56M, 377.13M, 365.74M, null },
                    { -575, new DateTime(2023, 3, 16), 357.57M, 403.07M, 324.35M, 412.97M, null },
                    { -575, new DateTime(2023, 3, 15), 410.15M, 334.1M, 392.34M, 422.64M, null },
                    { -575, new DateTime(2023, 3, 14), 380.6M, 337.26M, 382.04M, 342.34M, null },
                    { -575, new DateTime(2023, 3, 13), 331.92M, 356.95M, 339.96M, 390.5M, null },
                    { -575, new DateTime(2023, 3, 10), 328.23M, 418.69M, 383.85M, 282.7M, null },
                    { -575, new DateTime(2023, 3, 9), 343.87M, 302.4M, 318.73M, 343.24M, null },
                    { -575, new DateTime(2023, 3, 8), 334.18M, 358.05M, 437.3M, 373.83M, null },
                    { -575, new DateTime(2023, 3, 7), 358.48M, 356.97M, 385M, 350.87M, null },
                    { -575, new DateTime(2023, 3, 6), 377.91M, 348.87M, 417.63M, 389.49M, null },
                    { -575, new DateTime(2023, 3, 3), 336.37M, 379.84M, 376.02M, 405.51M, null },
                    { -575, new DateTime(2023, 3, 2), 307.86M, 370.78M, 382.42M, 367.35M, null },
                    { -575, new DateTime(2023, 3, 1), 383.98M, 361.18M, 343.25M, 370.4M, null },
                    { -575, new DateTime(2023, 2, 28), 371.83M, 334.43M, 363.13M, 339.81M, null },
                    { -575, new DateTime(2023, 2, 27), 351.08M, 366.01M, 402.69M, 299.45M, null },
                    { -575, new DateTime(2023, 2, 24), 345.11M, 383.71M, 404.3M, 365.51M, null },
                    { -575, new DateTime(2023, 2, 23), 349.34M, 367.84M, 347.65M, 371.17M, null },
                    { -575, new DateTime(2023, 2, 22), 395.97M, 391.39M, 369.89M, 380.12M, null },
                    { -575, new DateTime(2023, 2, 21), 360.87M, 377.01M, 332.21M, 360.96M, null },
                    { -575, new DateTime(2023, 2, 17), 433.18M, 394.91M, 359M, 357.8M, null },
                    { -575, new DateTime(2023, 2, 16), 370.7M, 341.4M, 378.29M, 369.43M, null },
                    { -575, new DateTime(2023, 2, 15), 392.86M, 375.88M, 358.01M, 404.59M, null },
                    { -575, new DateTime(2023, 2, 14), 382.27M, 344.73M, 385.67M, 432.26M, null },
                    { -575, new DateTime(2023, 2, 13), 390.64M, 398.81M, 371.08M, 367.2M, null },
                    { -575, new DateTime(2023, 2, 10), 380.7M, 330.24M, 388.42M, 373.05M, null },
                    { -575, new DateTime(2023, 2, 9), 388.57M, 369.61M, 367.73M, 341.91M, null },
                    { -575, new DateTime(2023, 2, 8), 359.03M, 339.14M, 370.21M, 390.61M, null },
                    { -575, new DateTime(2023, 2, 7), 388.04M, 371.04M, 354.48M, 390.9M, null },
                    { -575, new DateTime(2023, 2, 6), 412.02M, 420.28M, 357.14M, 354.77M, null },
                    { -575, new DateTime(2023, 2, 3), 395.74M, 352.38M, 364.6M, 361.32M, null },
                    { -575, new DateTime(2023, 2, 2), 411.79M, 370.69M, 359.72M, 280.26M, null },
                    { -575, new DateTime(2023, 2, 1), 415.14M, 437.74M, 394.15M, 408.17M, null },
                    { -575, new DateTime(2023, 1, 31), 404.49M, 380.11M, 381.42M, 360.09M, null },
                    { -575, new DateTime(2023, 1, 30), 313.1M, 335.59M, 334.98M, 305.69M, null },
                    { -575, new DateTime(2023, 1, 27), 340.8M, 389.51M, 429.73M, 405.07M, null },
                    { -575, new DateTime(2023, 1, 26), 375.16M, 343M, 319.46M, 390.79M, null },
                    { -575, new DateTime(2023, 1, 25), 447.27M, 376.79M, 378.53M, 327.59M, null },
                    { -575, new DateTime(2023, 1, 24), 384.38M, 378.9M, 365.84M, 389.75M, null },
                    { -575, new DateTime(2023, 1, 23), 332.13M, 362.88M, 371.55M, 343.72M, null },
                    { -575, new DateTime(2023, 1, 20), 366.77M, 350.13M, 396.59M, 317.61M, null },
                    { -575, new DateTime(2023, 1, 19), 362.03M, 363.47M, 331.83M, 307.38M, null },
                    { -575, new DateTime(2023, 1, 18), 378.45M, 339.54M, 358.34M, 325.88M, null },
                    { -575, new DateTime(2023, 1, 17), 381.25M, 375.49M, 374.9M, 362.52M, null },
                    { -575, new DateTime(2023, 1, 13), 363.8M, 385.02M, 342.06M, 411.76M, null },
                    { -575, new DateTime(2023, 1, 12), 354.95M, 355.55M, 375.93M, 358.94M, null },
                    { -575, new DateTime(2023, 1, 11), 369.62M, 368.03M, 391.35M, 336.36M, null },
                    { -575, new DateTime(2023, 1, 10), 369.64M, 349.64M, 360.03M, 375.36M, null },
                    { -575, new DateTime(2023, 1, 9), 355.65M, 343.44M, 314.06M, 406.94M, null },
                    { -575, new DateTime(2023, 1, 6), 400.05M, 333.08M, 315.32M, 333.34M, null },
                    { -575, new DateTime(2023, 1, 5), 348.64M, 359.03M, 378.6M, 299.41M, null },
                    { -575, new DateTime(2023, 1, 4), 341.88M, 390.63M, 322.91M, 386.46M, null },
                    { -575, new DateTime(2023, 1, 3), 367.25M, 357.6M, 357.65M, 331.02M, null },
                    { -576, new DateTime(2023, 3, 31), 68.84M, 79.78M, 84.43M, 71.67M, null },
                    { -576, new DateTime(2023, 3, 30), 82.61M, 80.09M, 73.85M, 77.81M, null },
                    { -576, new DateTime(2023, 3, 29), 66.95M, 75.62M, 63.25M, 80.02M, null },
                    { -576, new DateTime(2023, 3, 28), 61.65M, 76.32M, 77.49M, 78.71M, null },
                    { -576, new DateTime(2023, 3, 27), 74.42M, 70.41M, 74.52M, 85.3M, null },
                    { -576, new DateTime(2023, 3, 24), 71.15M, 70.7M, 67.1M, 80.5M, null },
                    { -576, new DateTime(2023, 3, 23), 75.55M, 75.01M, 67.68M, 81.77M, null },
                    { -576, new DateTime(2023, 3, 22), 72.49M, 71.92M, 79.68M, 74.89M, null },
                    { -576, new DateTime(2023, 3, 21), 72.9M, 77.76M, 69.51M, 80.11M, null },
                    { -576, new DateTime(2023, 3, 20), 78.4M, 73.12M, 68.77M, 74.94M, null },
                    { -576, new DateTime(2023, 3, 17), 88.97M, 73.35M, 78.37M, 76.66M, null },
                    { -576, new DateTime(2023, 3, 16), 73.95M, 79.38M, 71.43M, 68.74M, null },
                    { -576, new DateTime(2023, 3, 15), 78.55M, 74.9M, 68.64M, 72.52M, null },
                    { -576, new DateTime(2023, 3, 14), 67.68M, 73.19M, 69.88M, 76.52M, null },
                    { -576, new DateTime(2023, 3, 13), 76.67M, 70.38M, 71.08M, 75.52M, null },
                    { -576, new DateTime(2023, 3, 10), 78.75M, 72.46M, 72.79M, 78.15M, null },
                    { -576, new DateTime(2023, 3, 9), 77.57M, 82.59M, 79.98M, 81.53M, null },
                    { -576, new DateTime(2023, 3, 8), 78.79M, 82.62M, 69.26M, 73.1M, null },
                    { -576, new DateTime(2023, 3, 7), 83.94M, 75.38M, 73.46M, 78.07M, null },
                    { -576, new DateTime(2023, 3, 6), 71.01M, 74.45M, 79.69M, 75.67M, null },
                    { -576, new DateTime(2023, 3, 3), 78.81M, 82.89M, 76.16M, 87.4M, null },
                    { -576, new DateTime(2023, 3, 2), 79.49M, 74.52M, 77.76M, 77.2M, null },
                    { -576, new DateTime(2023, 3, 1), 68.56M, 73.88M, 78.27M, 77.83M, null },
                    { -576, new DateTime(2023, 2, 28), 77.71M, 80.39M, 83.85M, 75.43M, null },
                    { -576, new DateTime(2023, 2, 27), 83.98M, 67.53M, 78.29M, 71.07M, null },
                    { -576, new DateTime(2023, 2, 24), 76.36M, 82.83M, 79.08M, 82.4M, null },
                    { -576, new DateTime(2023, 2, 23), 78.49M, 84.08M, 78.37M, 68.71M, null },
                    { -576, new DateTime(2023, 2, 22), 88.37M, 73.83M, 80.56M, 81M, null },
                    { -576, new DateTime(2023, 2, 21), 73.11M, 72.58M, 80.07M, 72.71M, null },
                    { -576, new DateTime(2023, 2, 17), 70.52M, 81.21M, 71.11M, 74.59M, null },
                    { -576, new DateTime(2023, 2, 16), 72.95M, 82.58M, 78.96M, 73.63M, null },
                    { -576, new DateTime(2023, 2, 15), 83.79M, 74.24M, 85.03M, 77.92M, null },
                    { -576, new DateTime(2023, 2, 14), 81.79M, 86.67M, 81.72M, 81.76M, null },
                    { -576, new DateTime(2023, 2, 13), 80.03M, 86.84M, 77.27M, 74.41M, null },
                    { -576, new DateTime(2023, 2, 10), 70.16M, 69.15M, 93.82M, 77.35M, null },
                    { -576, new DateTime(2023, 2, 9), 78.7M, 90.04M, 84.02M, 82.17M, null },
                    { -576, new DateTime(2023, 2, 8), 76.46M, 82.66M, 88.6M, 79.05M, null },
                    { -576, new DateTime(2023, 2, 7), 88.54M, 75.58M, 75.86M, 77.65M, null },
                    { -576, new DateTime(2023, 2, 6), 79.57M, 90.73M, 74.39M, 78.74M, null },
                    { -576, new DateTime(2023, 2, 3), 79.55M, 73.14M, 82.42M, 78.7M, null },
                    { -576, new DateTime(2023, 2, 2), 82.02M, 78.44M, 87.57M, 85.29M, null },
                    { -576, new DateTime(2023, 2, 1), 86.24M, 80.07M, 73.43M, 72.1M, null },
                    { -576, new DateTime(2023, 1, 31), 79.09M, 72.13M, 78.69M, 70.47M, null },
                    { -576, new DateTime(2023, 1, 30), 81.78M, 77.38M, 70.9M, 83.04M, null },
                    { -576, new DateTime(2023, 1, 27), 75.95M, 77.68M, 75.59M, 80.29M, null },
                    { -576, new DateTime(2023, 1, 26), 75.86M, 77.04M, 82.69M, 82.51M, null },
                    { -576, new DateTime(2023, 1, 25), 60.96M, 81.12M, 75.24M, 70.86M, null },
                    { -576, new DateTime(2023, 1, 24), 72.9M, 84.29M, 79.15M, 73.86M, null },
                    { -576, new DateTime(2023, 1, 23), 77.5M, 77.06M, 73.39M, 67.34M, null },
                    { -576, new DateTime(2023, 1, 20), 74.9M, 66.38M, 89.4M, 66.77M, null },
                    { -576, new DateTime(2023, 1, 19), 76.93M, 72.36M, 77.59M, 71.36M, null },
                    { -576, new DateTime(2023, 1, 18), 78.97M, 82.82M, 82.5M, 80.58M, null },
                    { -576, new DateTime(2023, 1, 17), 70.3M, 76.93M, 71.94M, 71.49M, null },
                    { -576, new DateTime(2023, 1, 13), 69.47M, 71.64M, 85.18M, 72.61M, null },
                    { -576, new DateTime(2023, 1, 12), 77.53M, 80.35M, 80.85M, 74.66M, null },
                    { -576, new DateTime(2023, 1, 11), 85.02M, 75.63M, 78.61M, 70.69M, null },
                    { -576, new DateTime(2023, 1, 10), 80.4M, 69.34M, 67.83M, 70.33M, null },
                    { -576, new DateTime(2023, 1, 9), 81.03M, 76.74M, 80.36M, 79.52M, null },
                    { -576, new DateTime(2023, 1, 6), 71.47M, 70.41M, 74.08M, 78.26M, null },
                    { -576, new DateTime(2023, 1, 5), 80.73M, 74.34M, 72.81M, 69.48M, null },
                    { -576, new DateTime(2023, 1, 4), 75.03M, 61.95M, 74.72M, 79.48M, null },
                    { -576, new DateTime(2023, 1, 3), 73.48M, 67.25M, 76.34M, 61.3M, null },
                    { -577, new DateTime(2023, 3, 31), 42.93M, 38.72M, 41.54M, 41.17M, null },
                    { -577, new DateTime(2023, 3, 30), 39.2M, 44.88M, 45.22M, 40.09M, null },
                    { -577, new DateTime(2023, 3, 29), 32.3M, 37.95M, 35.35M, 38.33M, null },
                    { -577, new DateTime(2023, 3, 28), 33.32M, 36.87M, 38.82M, 38.36M, null },
                    { -577, new DateTime(2023, 3, 27), 41.53M, 37.94M, 38.72M, 38.34M, null },
                    { -577, new DateTime(2023, 3, 24), 37.85M, 36.76M, 36.18M, 36.9M, null },
                    { -577, new DateTime(2023, 3, 23), 36.21M, 37.76M, 37.95M, 34.53M, null },
                    { -577, new DateTime(2023, 3, 22), 40.45M, 40.8M, 38.28M, 34.74M, null },
                    { -577, new DateTime(2023, 3, 21), 36.73M, 41.92M, 39.05M, 43.53M, null },
                    { -577, new DateTime(2023, 3, 20), 36.84M, 39.76M, 37.23M, 34.81M, null },
                    { -577, new DateTime(2023, 3, 17), 36.9M, 36.8M, 38.73M, 41.54M, null },
                    { -577, new DateTime(2023, 3, 16), 36.91M, 33.62M, 40.71M, 38.68M, null },
                    { -577, new DateTime(2023, 3, 15), 42.38M, 40.62M, 39.26M, 34.27M, null },
                    { -577, new DateTime(2023, 3, 14), 41.22M, 35.45M, 37.99M, 38.75M, null },
                    { -577, new DateTime(2023, 3, 13), 41.95M, 37.6M, 36.39M, 35.44M, null },
                    { -577, new DateTime(2023, 3, 10), 43.94M, 39.71M, 41.27M, 36.51M, null },
                    { -577, new DateTime(2023, 3, 9), 40.14M, 38.49M, 38.03M, 39.25M, null },
                    { -577, new DateTime(2023, 3, 8), 37.23M, 39.66M, 41.19M, 42.63M, null },
                    { -577, new DateTime(2023, 3, 7), 39.22M, 41.88M, 35.54M, 41.75M, null },
                    { -577, new DateTime(2023, 3, 6), 36.82M, 41.45M, 38.68M, 37.18M, null },
                    { -577, new DateTime(2023, 3, 3), 39.85M, 42.47M, 47.75M, 42.13M, null },
                    { -577, new DateTime(2023, 3, 2), 41.94M, 43.01M, 46.85M, 37.58M, null },
                    { -577, new DateTime(2023, 3, 1), 40.07M, 44.07M, 44.04M, 35.55M, null },
                    { -577, new DateTime(2023, 2, 28), 39.49M, 40.86M, 39M, 42.4M, null },
                    { -577, new DateTime(2023, 2, 27), 44.71M, 36.7M, 40.53M, 43.91M, null },
                    { -577, new DateTime(2023, 2, 24), 32.8M, 44.16M, 36.24M, 42.12M, null },
                    { -577, new DateTime(2023, 2, 23), 38.56M, 37.44M, 41.62M, 38.85M, null },
                    { -577, new DateTime(2023, 2, 22), 37.02M, 36.83M, 43.81M, 41.75M, null },
                    { -577, new DateTime(2023, 2, 21), 39.65M, 40.36M, 40.9M, 42.13M, null },
                    { -577, new DateTime(2023, 2, 17), 33.58M, 41.1M, 39.92M, 35.57M, null },
                    { -577, new DateTime(2023, 2, 16), 36.75M, 40.76M, 43.65M, 39.87M, null },
                    { -577, new DateTime(2023, 2, 15), 39.43M, 42.72M, 41.11M, 44.4M, null },
                    { -577, new DateTime(2023, 2, 14), 39.48M, 40.62M, 38.57M, 41.91M, null },
                    { -577, new DateTime(2023, 2, 13), 43.04M, 43.02M, 42.32M, 39.82M, null },
                    { -577, new DateTime(2023, 2, 10), 41.39M, 36.99M, 47.83M, 36.93M, null },
                    { -577, new DateTime(2023, 2, 9), 37.24M, 39.24M, 38.3M, 43.25M, null },
                    { -577, new DateTime(2023, 2, 8), 45.2M, 40.73M, 40.02M, 41.73M, null },
                    { -577, new DateTime(2023, 2, 7), 38.46M, 45.27M, 42.43M, 40.41M, null },
                    { -577, new DateTime(2023, 2, 6), 43.28M, 44.82M, 45.97M, 39.67M, null },
                    { -577, new DateTime(2023, 2, 3), 42.73M, 44.4M, 40.78M, 44.29M, null },
                    { -577, new DateTime(2023, 2, 2), 45.39M, 44.96M, 42.4M, 47.45M, null },
                    { -577, new DateTime(2023, 2, 1), 41.27M, 39.91M, 43.84M, 40.8M, null },
                    { -577, new DateTime(2023, 1, 31), 40.82M, 38.97M, 39.9M, 44.76M, null },
                    { -577, new DateTime(2023, 1, 30), 35.04M, 34.82M, 38.74M, 41.86M, null },
                    { -577, new DateTime(2023, 1, 27), 47.33M, 42.56M, 43.89M, 43.55M, null },
                    { -577, new DateTime(2023, 1, 26), 40.68M, 38.32M, 44.2M, 38.95M, null },
                    { -577, new DateTime(2023, 1, 25), 43.7M, 44.51M, 37.78M, 39.9M, null },
                    { -577, new DateTime(2023, 1, 24), 44.04M, 47.09M, 38.41M, 42.12M, null },
                    { -577, new DateTime(2023, 1, 23), 39.96M, 39.37M, 39.55M, 43.32M, null },
                    { -577, new DateTime(2023, 1, 20), 38.91M, 43.14M, 38.03M, 43.47M, null },
                    { -577, new DateTime(2023, 1, 19), 42.32M, 35.04M, 42.12M, 39.8M, null },
                    { -577, new DateTime(2023, 1, 18), 40.65M, 41.24M, 39.83M, 41.53M, null },
                    { -577, new DateTime(2023, 1, 17), 38.78M, 40.68M, 39.83M, 40.52M, null },
                    { -577, new DateTime(2023, 1, 13), 39.78M, 39.8M, 38.43M, 31.82M, null },
                    { -577, new DateTime(2023, 1, 12), 38.46M, 36.83M, 37.93M, 42.44M, null },
                    { -577, new DateTime(2023, 1, 11), 42.12M, 39.58M, 38.61M, 39.93M, null },
                    { -577, new DateTime(2023, 1, 10), 36.66M, 35.5M, 42.09M, 41.14M, null },
                    { -577, new DateTime(2023, 1, 9), 38.11M, 37.53M, 37.69M, 39.25M, null },
                    { -577, new DateTime(2023, 1, 6), 37.83M, 36.43M, 39.26M, 37.93M, null },
                    { -577, new DateTime(2023, 1, 5), 33.29M, 40.55M, 33.2M, 39.9M, null },
                    { -577, new DateTime(2023, 1, 4), 37.28M, 39.35M, 41.73M, 42.58M, null },
                    { -577, new DateTime(2023, 1, 3), 39.29M, 37.07M, 34.68M, 39.75M, null },
                    { -578, new DateTime(2023, 3, 31), 57.35M, 53.72M, 54.72M, 48.33M, null },
                    { -578, new DateTime(2023, 3, 30), 51.98M, 48.68M, 57.37M, 59.04M, null },
                    { -578, new DateTime(2023, 3, 29), 58.84M, 66.82M, 51.08M, 48.56M, null },
                    { -578, new DateTime(2023, 3, 28), 55.37M, 47M, 61.71M, 55.54M, null },
                    { -578, new DateTime(2023, 3, 27), 57.3M, 57.71M, 55.24M, 51.75M, null },
                    { -578, new DateTime(2023, 3, 24), 48.89M, 57.68M, 49.72M, 53.76M, null },
                    { -578, new DateTime(2023, 3, 23), 48.53M, 56.36M, 53.3M, 49.21M, null },
                    { -578, new DateTime(2023, 3, 22), 51.46M, 57.09M, 54.96M, 48.56M, null },
                    { -578, new DateTime(2023, 3, 21), 53.11M, 54.52M, 55.92M, 52.52M, null },
                    { -578, new DateTime(2023, 3, 20), 64.17M, 50.02M, 58.84M, 47.42M, null },
                    { -578, new DateTime(2023, 3, 17), 54.96M, 53.21M, 48.53M, 45.08M, null },
                    { -578, new DateTime(2023, 3, 16), 49.22M, 51.67M, 48.8M, 47.42M, null },
                    { -578, new DateTime(2023, 3, 15), 44.3M, 56.12M, 49.46M, 47.03M, null },
                    { -578, new DateTime(2023, 3, 14), 48.8M, 50M, 57.67M, 57.94M, null },
                    { -578, new DateTime(2023, 3, 13), 51.96M, 45.86M, 52.14M, 47.56M, null },
                    { -578, new DateTime(2023, 3, 10), 59.04M, 54.71M, 55.88M, 58.4M, null },
                    { -578, new DateTime(2023, 3, 9), 49.37M, 52.04M, 56.02M, 47.4M, null },
                    { -578, new DateTime(2023, 3, 8), 51.74M, 58.09M, 52.64M, 53.51M, null },
                    { -578, new DateTime(2023, 3, 7), 54.77M, 49.19M, 50.82M, 58.01M, null },
                    { -578, new DateTime(2023, 3, 6), 50.58M, 58.68M, 56.81M, 55.79M, null },
                    { -578, new DateTime(2023, 3, 3), 59.99M, 47.82M, 50.51M, 61.26M, null },
                    { -578, new DateTime(2023, 3, 2), 52.87M, 61.21M, 53.01M, 64.78M, null },
                    { -578, new DateTime(2023, 3, 1), 48.69M, 58.19M, 54.4M, 56.05M, null },
                    { -578, new DateTime(2023, 2, 28), 51.98M, 51.4M, 56.24M, 46.08M, null },
                    { -578, new DateTime(2023, 2, 27), 63.95M, 50.47M, 49.19M, 53.51M, null },
                    { -578, new DateTime(2023, 2, 24), 56.04M, 50.84M, 58M, 52.78M, null },
                    { -578, new DateTime(2023, 2, 23), 51.81M, 56.75M, 56.86M, 57.89M, null },
                    { -578, new DateTime(2023, 2, 22), 49.53M, 54.36M, 49.48M, 52.04M, null },
                    { -578, new DateTime(2023, 2, 21), 50.32M, 45.45M, 57.89M, 53.28M, null },
                    { -578, new DateTime(2023, 2, 17), 53.85M, 50.57M, 51.13M, 53.59M, null },
                    { -578, new DateTime(2023, 2, 16), 57.15M, 55.01M, 50.89M, 56.68M, null },
                    { -578, new DateTime(2023, 2, 15), 49.53M, 58.86M, 60.14M, 59.83M, null },
                    { -578, new DateTime(2023, 2, 14), 49.06M, 53.24M, 63.23M, 58.64M, null },
                    { -578, new DateTime(2023, 2, 13), 50.08M, 52.94M, 52.29M, 57.04M, null },
                    { -578, new DateTime(2023, 2, 10), 48.44M, 51.41M, 54.91M, 49.6M, null },
                    { -578, new DateTime(2023, 2, 9), 52.23M, 55.31M, 59.47M, 51.12M, null },
                    { -578, new DateTime(2023, 2, 8), 61.14M, 56.22M, 50.55M, 56.96M, null },
                    { -578, new DateTime(2023, 2, 7), 55.25M, 53.2M, 57.26M, 50.37M, null },
                    { -578, new DateTime(2023, 2, 6), 60.75M, 59.02M, 56.48M, 53.99M, null },
                    { -578, new DateTime(2023, 2, 3), 62.76M, 57.73M, 58.64M, 61.98M, null },
                    { -578, new DateTime(2023, 2, 2), 54.23M, 56.36M, 52.47M, 59.89M, null },
                    { -578, new DateTime(2023, 2, 1), 55.81M, 59.64M, 54.86M, 56.79M, null },
                    { -578, new DateTime(2023, 1, 31), 52.93M, 53.61M, 48.61M, 45.98M, null },
                    { -578, new DateTime(2023, 1, 30), 55.39M, 55.63M, 57.88M, 61.37M, null },
                    { -578, new DateTime(2023, 1, 27), 56.75M, 54.03M, 54.89M, 58.34M, null },
                    { -578, new DateTime(2023, 1, 26), 47.51M, 48.84M, 59.51M, 65.15M, null },
                    { -578, new DateTime(2023, 1, 25), 52.79M, 52.43M, 54.16M, 53.6M, null },
                    { -578, new DateTime(2023, 1, 24), 50.01M, 53.76M, 58.26M, 55.14M, null },
                    { -578, new DateTime(2023, 1, 23), 54.72M, 53.05M, 61.94M, 52.07M, null },
                    { -578, new DateTime(2023, 1, 20), 55.63M, 56.39M, 60.11M, 53.25M, null },
                    { -578, new DateTime(2023, 1, 19), 47.21M, 53.77M, 51.34M, 60.25M, null },
                    { -578, new DateTime(2023, 1, 18), 59.23M, 56.14M, 58.28M, 58.96M, null },
                    { -578, new DateTime(2023, 1, 17), 55.38M, 53.78M, 61.74M, 55.18M, null },
                    { -578, new DateTime(2023, 1, 13), 53.23M, 46M, 63.11M, 55.4M, null },
                    { -578, new DateTime(2023, 1, 12), 56.78M, 48.04M, 52.71M, 47.91M, null },
                    { -578, new DateTime(2023, 1, 11), 49.81M, 45.98M, 52.53M, 48.42M, null },
                    { -578, new DateTime(2023, 1, 10), 56.08M, 61.82M, 51.17M, 51.66M, null },
                    { -578, new DateTime(2023, 1, 9), 53.14M, 51.59M, 57.11M, 49.6M, null },
                    { -578, new DateTime(2023, 1, 6), 51.75M, 51.57M, 54.69M, 50.8M, null },
                    { -578, new DateTime(2023, 1, 5), 50.22M, 48.72M, 50.31M, 46.47M, null },
                    { -578, new DateTime(2023, 1, 4), 48.49M, 52.39M, 56.06M, 51.09M, null },
                    { -578, new DateTime(2023, 1, 3), 54.71M, 50.45M, 50.13M, 43.97M, null },
                    { -727, new DateTime(2023, 1, 3), 4.2M, 3.17M, 3.65M, 4.02M, 3771913 },
                    { -727, new DateTime(2023, 1, 4), 4.04M, 4.13M, 3.71M, 3.75M, 2047026 },
                    { -727, new DateTime(2023, 1, 5), 4.35M, 4.17M, 4.36M, 4.09M, 3114750 },
                    { -727, new DateTime(2023, 1, 6), 3.67M, 4M, 4.35M, 3.88M, 3591931 },
                    { -727, new DateTime(2023, 1, 9), 4.32M, 4.45M, 4.51M, 3.9M, 2735571 },
                    { -727, new DateTime(2023, 1, 10), 4.69M, 4.26M, 4.45M, 4.22M, 1888095 },
                    { -727, new DateTime(2023, 1, 11), 3.86M, 4.47M, 3.84M, 4.42M, 2118553 },
                    { -727, new DateTime(2023, 1, 12), 5.06M, 4.75M, 4.85M, 4.64M, 3076656 },
                    { -727, new DateTime(2023, 1, 13), 5.7M, 4.61M, 5.49M, 4.96M, 5970710 },
                    { -727, new DateTime(2023, 1, 17), 5.91M, 4.92M, 5.36M, 5.39M, 5553474 },
                    { -727, new DateTime(2023, 1, 18), 5.22M, 5.82M, 6.31M, 5.7M, 6267361 },
                    { -727, new DateTime(2023, 1, 19), 4.89M, 4.39M, 4.78M, 4.44M, 4931679 },
                    { -727, new DateTime(2023, 1, 20), 4.72M, 5.38M, 4.84M, 4.91M, 4755037 },
                    { -727, new DateTime(2023, 1, 23), 4.67M, 5.1M, 4.59M, 4.46M, 4378864 },
                    { -727, new DateTime(2023, 1, 24), 4.8M, 5.11M, 4.84M, 4.5M, 3357707 },
                    { -727, new DateTime(2023, 1, 25), 4.76M, 5.32M, 4.68M, 4.3M, 4597992 },
                    { -727, new DateTime(2023, 1, 26), 4.66M, 5.05M, 5.82M, 4.29M, 3313817 },
                    { -727, new DateTime(2023, 1, 27), 5.1M, 4.88M, 5.37M, 5.28M, 4197284 },
                    { -727, new DateTime(2023, 1, 30), 4.8M, 5.15M, 5.44M, 4.32M, 2392806 },
                    { -727, new DateTime(2023, 1, 31), 4.45M, 5.01M, 5.4M, 4.59M, 1952487 },
                    { -727, new DateTime(2023, 2, 1), 5.42M, 4.7M, 4.86M, 4.87M, 6494650 },
                    { -727, new DateTime(2023, 2, 2), 5.2M, 5.18M, 5.39M, 4.86M, 7639285 },
                    { -727, new DateTime(2023, 2, 3), 5.08M, 4.69M, 6.13M, 4.83M, 7091115 },
                    { -727, new DateTime(2023, 2, 6), 5.53M, 5.82M, 5.83M, 4.92M, 4117579 },
                    { -727, new DateTime(2023, 2, 7), 5.34M, 5.1M, 4.86M, 4.62M, 5367476 },
                    { -727, new DateTime(2023, 2, 8), 5.32M, 4.26M, 4.48M, 4.73M, 2242840 },
                    { -727, new DateTime(2023, 2, 9), 4.47M, 4.28M, 4.69M, 4.75M, 3887828 },
                    { -727, new DateTime(2023, 2, 10), 5.4M, 4.23M, 5.04M, 4.08M, 4153679 },
                    { -727, new DateTime(2023, 2, 13), 5.09M, 5.12M, 4.9M, 4.99M, 1872073 },
                    { -727, new DateTime(2023, 2, 14), 4.86M, 4.02M, 5.01M, 4.24M, 3765158 },
                    { -727, new DateTime(2023, 2, 15), 5.63M, 5.2M, 5.2M, 4.73M, 3712967 },
                    { -727, new DateTime(2023, 2, 16), 5.1M, 5.34M, 4.65M, 4.69M, 2748938 },
                    { -727, new DateTime(2023, 2, 17), 5.59M, 5.48M, 5.38M, 4.39M, 3651358 },
                    { -727, new DateTime(2023, 2, 21), 5.03M, 4.9M, 4.68M, 4.84M, 2909997 },
                    { -727, new DateTime(2023, 2, 22), 4.8M, 4.83M, 4.79M, 4.68M, 3854484 },
                    { -727, new DateTime(2023, 2, 23), 3.98M, 4.95M, 4.15M, 4.39M, 3682608 },
                    { -727, new DateTime(2023, 2, 24), 4.67M, 4.29M, 4.21M, 4.26M, 2552545 },
                    { -727, new DateTime(2023, 2, 27), 4.89M, 4.76M, 4.55M, 3.51M, 3456556 },
                    { -727, new DateTime(2023, 2, 28), 4.21M, 4.83M, 4.37M, 5.25M, 4331921 },
                    { -727, new DateTime(2023, 3, 1), 4.27M, 3.97M, 4.98M, 4.15M, 6132733 },
                    { -727, new DateTime(2023, 3, 2), 4.38M, 4.62M, 3.96M, 3.43M, 3647875 },
                    { -727, new DateTime(2023, 3, 3), 4.69M, 3.82M, 4.97M, 3.95M, 4773583 },
                    { -727, new DateTime(2023, 3, 6), 4.16M, 4.38M, 4.71M, 4.64M, 3686310 },
                    { -727, new DateTime(2023, 3, 7), 4.4M, 4.32M, 4.85M, 4.21M, 1926961 },
                    { -727, new DateTime(2023, 3, 8), 4.52M, 3.83M, 4.06M, 4.37M, 2023935 },
                    { -727, new DateTime(2023, 3, 9), 4.35M, 4.04M, 4.18M, 3.83M, 3301549 },
                    { -727, new DateTime(2023, 3, 10), 3.99M, 4.02M, 4.34M, 4.01M, 6695358 },
                    { -727, new DateTime(2023, 3, 13), 4.29M, 3.64M, 4.43M, 3.34M, 4346692 },
                    { -727, new DateTime(2023, 3, 14), 3.93M, 4.47M, 3.8M, 3.86M, 3684341 },
                    { -727, new DateTime(2023, 3, 15), 3.68M, 3.94M, 3.45M, 3.72M, 3825164 },
                    { -727, new DateTime(2023, 3, 16), 4.11M, 3.8M, 4M, 3.53M, 2397459 },
                    { -727, new DateTime(2023, 3, 17), 3.7M, 3.7M, 4.34M, 4.09M, 3226284 },
                    { -727, new DateTime(2023, 3, 20), 3.83M, 4.15M, 4.02M, 4.02M, 3195811 },
                    { -727, new DateTime(2023, 3, 21), 4.76M, 4.17M, 4.21M, 4.12M, 2770949 },
                    { -727, new DateTime(2023, 3, 22), 3.9M, 4.01M, 3.96M, 4.15M, 2965530 },
                    { -727, new DateTime(2023, 3, 23), 3.44M, 3.8M, 3.85M, 3.59M, 2460634 },
                    { -727, new DateTime(2023, 3, 24), 4.06M, 3.9M, 4.21M, 3.62M, 4146098 },
                    { -727, new DateTime(2023, 3, 27), 3.3M, 3.83M, 4.46M, 3.81M, 3063641 },
                    { -727, new DateTime(2023, 3, 28), 4.28M, 3.96M, 3.78M, 3.63M, 1672501 },
                    { -727, new DateTime(2023, 3, 29), 3.98M, 3.98M, 4.35M, 3.68M, 2677378 },
                    { -727, new DateTime(2023, 3, 30), 3.7M, 3.95M, 4.02M, 3.82M, 2810869 },
                    { -727, new DateTime(2023, 3, 31), 3.12M, 4.2M, 4.22M, 4.26M, 3656720 },
                    { -727, new DateTime(2023, 4, 3), 3.97M, 3.93M, 4.1M, 3.93M, 1752795 },
                    { -727, new DateTime(2023, 4, 4), 3.61M, 4.07M, 4.41M, 3.78M, 2928655 },
                    { -727, new DateTime(2023, 4, 5), 3.72M, 4.02M, 3.97M, 3.64M, 4694215 },
                    { -727, new DateTime(2023, 4, 6), 3.68M, 3.53M, 4M, 3.52M, 3250569 },
                    { -727, new DateTime(2023, 4, 10), 4.05M, 3.61M, 3.9M, 3.33M, 3776441 },
                    { -727, new DateTime(2023, 4, 11), 4.21M, 4.17M, 4.51M, 3.98M, 2526769 },
                    { -727, new DateTime(2023, 4, 12), 3.79M, 4.09M, 3.6M, 3.78M, 2432017 },
                    { -727, new DateTime(2023, 4, 13), 3.69M, 3.87M, 3.76M, 3.45M, 1894373 },
                    { -727, new DateTime(2023, 4, 14), 4M, 4.48M, 4.16M, 3.56M, 2053771 },
                    { -727, new DateTime(2023, 4, 17), 4.38M, 3.74M, 4.84M, 4.33M, 2673428 },
                    { -727, new DateTime(2023, 4, 18), 4.19M, 3.94M, 3.95M, 3.65M, 2223916 },
                    { -727, new DateTime(2023, 4, 19), 4.14M, 3.9M, 4.15M, 4.21M, 2185887 },
                    { -727, new DateTime(2023, 4, 20), 3.91M, 4M, 4.11M, 3.66M, 3711374 },
                    { -727, new DateTime(2023, 4, 21), 3.72M, 4.29M, 4.15M, 3.94M, 2195512 },
                    { -728, new DateTime(2023, 1, 3), 4.58M, 5.32M, 4.93M, 4.43M, 2024974 },
                    { -728, new DateTime(2023, 1, 4), 4.04M, 4.5M, 4.68M, 4.04M, 1227765 },
                    { -728, new DateTime(2023, 1, 5), 4.59M, 4.95M, 4.55M, 4.11M, 900132 },
                    { -728, new DateTime(2023, 1, 6), 4.77M, 4.63M, 4.14M, 4.22M, 1051791 },
                    { -728, new DateTime(2023, 1, 9), 5.3M, 4.62M, 5.22M, 4.52M, 1258518 },
                    { -728, new DateTime(2023, 1, 10), 4.7M, 5.11M, 4.8M, 4.74M, 1152944 },
                    { -728, new DateTime(2023, 1, 11), 4.7M, 5.36M, 4.67M, 4.86M, 1762241 },
                    { -728, new DateTime(2023, 1, 12), 5.18M, 5.45M, 5.19M, 5.08M, 2405429 },
                    { -728, new DateTime(2023, 1, 13), 5.79M, 5.16M, 5.72M, 4.68M, 1036840 },
                    { -728, new DateTime(2023, 1, 17), 5.5M, 5.77M, 6.07M, 4.81M, 1584716 },
                    { -728, new DateTime(2023, 1, 18), 4.61M, 5.5M, 6.75M, 4.59M, 1523934 },
                    { -728, new DateTime(2023, 1, 19), 4.66M, 4.8M, 5.12M, 4.44M, 928776 },
                    { -728, new DateTime(2023, 1, 20), 5.32M, 4.72M, 5.65M, 4.04M, 956542 },
                    { -728, new DateTime(2023, 1, 23), 4.55M, 5.63M, 5.48M, 5.45M, 958234 },
                    { -728, new DateTime(2023, 1, 24), 5.05M, 5.07M, 4.99M, 5.1M, 723239 },
                    { -728, new DateTime(2023, 1, 25), 5.43M, 4.91M, 5.03M, 4.6M, 750517 },
                    { -728, new DateTime(2023, 1, 26), 4.95M, 5.38M, 5M, 5.36M, 666499 },
                    { -728, new DateTime(2023, 1, 27), 5.24M, 5.22M, 5.9M, 5.27M, 1264843 },
                    { -728, new DateTime(2023, 1, 30), 5.36M, 5.43M, 5.59M, 5.05M, 764352 },
                    { -728, new DateTime(2023, 1, 31), 5.48M, 5.06M, 5.2M, 5.55M, 1160156 },
                    { -728, new DateTime(2023, 2, 1), 5.98M, 5.68M, 5.01M, 5.08M, 1821213 },
                    { -728, new DateTime(2023, 2, 2), 6.26M, 5.44M, 6.34M, 5.99M, 2551510 },
                    { -728, new DateTime(2023, 2, 3), 5.71M, 6.12M, 6.97M, 5.32M, 2754880 },
                    { -728, new DateTime(2023, 2, 6), 5.95M, 6.88M, 6.76M, 5.33M, 1705430 },
                    { -728, new DateTime(2023, 2, 7), 5.65M, 6.52M, 6.19M, 6.49M, 1283950 },
                    { -728, new DateTime(2023, 2, 8), 6.06M, 6.21M, 6.11M, 5.41M, 957094 },
                    { -728, new DateTime(2023, 2, 9), 5.27M, 5.45M, 6.94M, 5.59M, 1313960 },
                    { -728, new DateTime(2023, 2, 10), 6.39M, 6.37M, 5.66M, 5.18M, 3028628 },
                    { -728, new DateTime(2023, 2, 13), 5.78M, 6.15M, 5.78M, 6.18M, 1461403 },
                    { -728, new DateTime(2023, 2, 14), 6.11M, 6.26M, 6.3M, 5.77M, 1865974 },
                    { -728, new DateTime(2023, 2, 15), 7.21M, 5.44M, 5.33M, 6.07M, 1902927 },
                    { -728, new DateTime(2023, 2, 16), 6.24M, 6.49M, 6.12M, 6.82M, 1406898 },
                    { -728, new DateTime(2023, 2, 17), 6.83M, 6.73M, 6.45M, 5.68M, 1136486 },
                    { -728, new DateTime(2023, 2, 21), 5.33M, 6.11M, 6.4M, 6.58M, 1254098 },
                    { -728, new DateTime(2023, 2, 22), 6.49M, 5.99M, 5.96M, 5.8M, 985734 },
                    { -728, new DateTime(2023, 2, 23), 6.07M, 5.43M, 5.72M, 5.49M, 1433163 },
                    { -728, new DateTime(2023, 2, 24), 5.9M, 5.59M, 6.99M, 5.73M, 1447834 },
                    { -728, new DateTime(2023, 2, 27), 6.55M, 5.83M, 6.55M, 6.07M, 1637968 },
                    { -728, new DateTime(2023, 2, 28), 6.07M, 6.03M, 7.83M, 7.03M, 1646302 },
                    { -728, new DateTime(2023, 3, 1), 5.82M, 6.57M, 5.95M, 6.45M, 2395922 },
                    { -728, new DateTime(2023, 3, 2), 6.08M, 6.83M, 6.42M, 5.58M, 1818580 },
                    { -728, new DateTime(2023, 3, 3), 5.76M, 5.6M, 6.56M, 6.03M, 1623946 },
                    { -728, new DateTime(2023, 3, 6), 7.49M, 6.74M, 7.06M, 6.49M, 3216475 },
                    { -728, new DateTime(2023, 3, 7), 6.24M, 6.48M, 6.36M, 6.74M, 1934112 },
                    { -728, new DateTime(2023, 3, 8), 6.65M, 7.09M, 6.51M, 6.45M, 1025209 },
                    { -728, new DateTime(2023, 3, 9), 6.46M, 7.86M, 7.72M, 6.33M, 1597540 },
                    { -728, new DateTime(2023, 3, 10), 6.72M, 6.54M, 6.77M, 5.86M, 3213192 },
                    { -728, new DateTime(2023, 3, 13), 5.57M, 5.38M, 6.23M, 5.07M, 1574742 },
                    { -728, new DateTime(2023, 3, 14), 6.38M, 5.56M, 6.91M, 5.16M, 1571719 },
                    { -728, new DateTime(2023, 3, 15), 6.42M, 6.11M, 6.46M, 5.59M, 1347767 },
                    { -728, new DateTime(2023, 3, 16), 6.89M, 6.2M, 7.21M, 6.42M, 1114969 },
                    { -728, new DateTime(2023, 3, 17), 6.55M, 6.5M, 6.27M, 6.06M, 2427892 },
                    { -728, new DateTime(2023, 3, 20), 6.25M, 5.77M, 6.27M, 5.27M, 838385 },
                    { -728, new DateTime(2023, 3, 21), 5.52M, 6.32M, 5.25M, 6.62M, 1071729 },
                    { -728, new DateTime(2023, 3, 22), 5.79M, 6.38M, 6.55M, 5.55M, 2281639 },
                    { -728, new DateTime(2023, 3, 23), 6.3M, 5.48M, 5.34M, 6.41M, 966326 },
                    { -728, new DateTime(2023, 3, 24), 6.25M, 5.76M, 5.48M, 6.1M, 1370100 },
                    { -728, new DateTime(2023, 3, 27), 5.73M, 5.55M, 5.62M, 6.21M, 566188 },
                    { -728, new DateTime(2023, 3, 28), 5.81M, 5.97M, 5.76M, 5.15M, 2226882 },
                    { -728, new DateTime(2023, 3, 29), 6.9M, 5.34M, 6.45M, 6.17M, 1681826 },
                    { -728, new DateTime(2023, 3, 30), 6.84M, 6.9M, 5.4M, 5.86M, 2025509 },
                    { -728, new DateTime(2023, 3, 31), 4.98M, 4.97M, 5.63M, 5.49M, 8057827 },
                    { -728, new DateTime(2023, 4, 3), 4.54M, 5M, 5.38M, 4.66M, 3514225 },
                    { -728, new DateTime(2023, 4, 4), 4.48M, 4.6M, 4.48M, 3.83M, 3782483 },
                    { -728, new DateTime(2023, 4, 5), 4.58M, 5.37M, 4.51M, 4.49M, 1699541 },
                    { -728, new DateTime(2023, 4, 6), 4.17M, 4.27M, 3.76M, 3.79M, 1462516 },
                    { -728, new DateTime(2023, 4, 10), 4.46M, 3.9M, 4.13M, 4.57M, 1014095 },
                    { -728, new DateTime(2023, 4, 11), 4.51M, 4.74M, 4.39M, 4.83M, 1391523 },
                    { -728, new DateTime(2023, 4, 12), 5M, 4.22M, 4.3M, 4.01M, 1606705 },
                    { -728, new DateTime(2023, 4, 13), 3.95M, 4.39M, 4.66M, 4.55M, 2668541 },
                    { -728, new DateTime(2023, 4, 14), 4.28M, 4M, 4.12M, 3.48M, 3084270 },
                    { -728, new DateTime(2023, 4, 17), 4.14M, 3.79M, 4.14M, 4.2M, 2426673 },
                    { -728, new DateTime(2023, 4, 18), 4.51M, 4.67M, 4.41M, 4.13M, 1284257 },
                    { -728, new DateTime(2023, 4, 19), 4.52M, 4.54M, 4.5M, 4.01M, 1483922 },
                    { -728, new DateTime(2023, 4, 20), 4.94M, 4.33M, 4.61M, 4.51M, 737445 },
                    { -728, new DateTime(2023, 4, 21), 4.27M, 4.71M, 4.51M, 4.27M, 941926 },
                    { -745, new DateTime(2023, 1, 3), 137.07M, 162.76M, 135.97M, 139.46M, 7793884 },
                    { -745, new DateTime(2023, 1, 4), 139.13M, 150.95M, 133.82M, 117.13M, 8532317 },
                    { -745, new DateTime(2023, 1, 5), 112.25M, 134.05M, 130.66M, 132.87M, 7524957 },
                    { -745, new DateTime(2023, 1, 6), 147.16M, 139.71M, 160.04M, 143.77M, 6804201 },
                    { -745, new DateTime(2023, 1, 9), 121.26M, 129.54M, 130.87M, 134.27M, 8216895 },
                    { -745, new DateTime(2023, 1, 10), 135.63M, 139.12M, 137.07M, 136.79M, 7870962 },
                    { -745, new DateTime(2023, 1, 11), 153.69M, 146.54M, 134.24M, 114.72M, 6555951 },
                    { -745, new DateTime(2023, 1, 12), 141.91M, 141.68M, 129.84M, 120.92M, 7407850 },
                    { -745, new DateTime(2023, 1, 13), 138.22M, 142.59M, 117.09M, 135.23M, 6357780 },
                    { -745, new DateTime(2023, 1, 17), 134.33M, 134.17M, 148.34M, 137.27M, 6729426 },
                    { -745, new DateTime(2023, 1, 18), 123.18M, 139.24M, 155.14M, 126.63M, 11512961 },
                    { -745, new DateTime(2023, 1, 19), 146.14M, 150.76M, 122.83M, 127.38M, 10294415 },
                    { -745, new DateTime(2023, 1, 20), 146.13M, 141.37M, 147.46M, 127.74M, 5392154 },
                    { -745, new DateTime(2023, 1, 23), 153.54M, 139.75M, 125.63M, 135.14M, 7428415 },
                    { -745, new DateTime(2023, 1, 24), 136.52M, 135.09M, 138.77M, 140.61M, 5806188 },
                    { -745, new DateTime(2023, 1, 25), 141.12M, 134.6M, 147.23M, 122.36M, 5699568 },
                    { -745, new DateTime(2023, 1, 26), 141.46M, 130.51M, 137.06M, 121.01M, 6539147 },
                    { -745, new DateTime(2023, 1, 27), 113.14M, 139.69M, 128.6M, 137.35M, 5774980 },
                    { -745, new DateTime(2023, 1, 30), 140.29M, 130.24M, 141.36M, 124.13M, 7219404 },
                    { -745, new DateTime(2023, 1, 31), 124.26M, 123.17M, 140.11M, 140.03M, 5810365 },
                    { -745, new DateTime(2023, 2, 1), 147.21M, 124.13M, 139.12M, 135.04M, 12050686 },
                    { -745, new DateTime(2023, 2, 2), 142.07M, 131.16M, 134.38M, 127.54M, 10744591 },
                    { -745, new DateTime(2023, 2, 3), 128.85M, 139.63M, 131.26M, 121.23M, 8415806 },
                    { -745, new DateTime(2023, 2, 6), 141.41M, 129.7M, 146.13M, 128M, 6233728 },
                    { -745, new DateTime(2023, 2, 7), 139.27M, 116.54M, 146.02M, 118.63M, 6326636 },
                    { -745, new DateTime(2023, 2, 8), 129.91M, 129.98M, 125.66M, 134.68M, 5065740 },
                    { -745, new DateTime(2023, 2, 9), 124.31M, 121.65M, 125.84M, 128.94M, 7563119 },
                    { -745, new DateTime(2023, 2, 10), 133.6M, 131.21M, 130.54M, 131.97M, 6139458 },
                    { -745, new DateTime(2023, 2, 13), 144.79M, 116.8M, 124.67M, 139.78M, 6207546 },
                    { -745, new DateTime(2023, 2, 14), 121.91M, 104.09M, 140.25M, 151.59M, 6894875 },
                    { -745, new DateTime(2023, 2, 15), 132.56M, 143.61M, 136.92M, 109.76M, 6924567 },
                    { -745, new DateTime(2023, 2, 16), 126.15M, 136.79M, 124.37M, 121.86M, 7552599 },
                    { -745, new DateTime(2023, 2, 17), 143.95M, 124.44M, 118.88M, 134.66M, 11380639 },
                    { -745, new DateTime(2023, 2, 21), 127.03M, 134.43M, 124.55M, 120.53M, 9150937 },
                    { -745, new DateTime(2023, 2, 22), 119.69M, 130.65M, 124.3M, 135.62M, 7716196 },
                    { -745, new DateTime(2023, 2, 23), 120.23M, 132.25M, 123.59M, 132.92M, 9046839 },
                    { -745, new DateTime(2023, 2, 24), 123.24M, 114.27M, 130.18M, 123.24M, 10608870 },
                    { -745, new DateTime(2023, 2, 27), 132.53M, 129.64M, 130.81M, 141.19M, 7358319 },
                    { -745, new DateTime(2023, 2, 28), 130.56M, 123.68M, 117.33M, 128.01M, 11182868 },
                    { -745, new DateTime(2023, 3, 1), 131.68M, 112.55M, 125.6M, 123.65M, 11575293 },
                    { -745, new DateTime(2023, 3, 2), 122.52M, 146.32M, 145.45M, 141.02M, 10310290 },
                    { -745, new DateTime(2023, 3, 3), 111.84M, 138.28M, 122.85M, 117.83M, 9283956 },
                    { -745, new DateTime(2023, 3, 6), 118.2M, 136.05M, 134.64M, 131.57M, 7647699 },
                    { -745, new DateTime(2023, 3, 7), 130.67M, 137.72M, 145.48M, 123.84M, 9583687 },
                    { -745, new DateTime(2023, 3, 8), 127.29M, 136.36M, 136.13M, 117.18M, 9917993 },
                    { -745, new DateTime(2023, 3, 9), 112.97M, 127.83M, 109.59M, 112.01M, 12603857 },
                    { -745, new DateTime(2023, 3, 10), 132.35M, 123.74M, 134.1M, 127.09M, 16773275 },
                    { -745, new DateTime(2023, 3, 13), 128.39M, 121.01M, 135.36M, 135.57M, 22768870 },
                    { -745, new DateTime(2023, 3, 14), 141.16M, 123.24M, 109.92M, 138.62M, 15048834 },
                    { -745, new DateTime(2023, 3, 15), 131.56M, 114.69M, 119.56M, 116.32M, 17108251 },
                    { -745, new DateTime(2023, 3, 16), 133.98M, 142.72M, 118.63M, 124.5M, 15206197 },
                    { -745, new DateTime(2023, 3, 17), 117.88M, 137.82M, 131.85M, 118.72M, 13028683 },
                    { -745, new DateTime(2023, 3, 20), 117.23M, 127.55M, 131.35M, 128.16M, 11178675 },
                    { -745, new DateTime(2023, 3, 21), 109M, 130.42M, 125.96M, 120.35M, 9352739 },
                    { -745, new DateTime(2023, 3, 22), 139.66M, 127.02M, 125.99M, 123.29M, 11904381 },
                    { -745, new DateTime(2023, 3, 23), 109.05M, 129.9M, 133.74M, 131.99M, 10717412 },
                    { -745, new DateTime(2023, 3, 24), 131.27M, 133.03M, 126.28M, 113.85M, 7761388 },
                    { -745, new DateTime(2023, 3, 27), 132.71M, 120.66M, 132.44M, 115.32M, 10451146 },
                    { -745, new DateTime(2023, 3, 28), 115.92M, 106.96M, 127.65M, 140.52M, 7978760 },
                    { -745, new DateTime(2023, 3, 29), 124.67M, 125.94M, 134.13M, 125.02M, 8463818 },
                    { -745, new DateTime(2023, 3, 30), 142.17M, 120.65M, 125.81M, 130.53M, 6160100 },
                    { -745, new DateTime(2023, 3, 31), 133.67M, 131.86M, 137.83M, 149.37M, 9230219 },
                    { -745, new DateTime(2023, 4, 3), 121.21M, 131.1M, 134.4M, 113.81M, 9161288 },
                    { -745, new DateTime(2023, 4, 4), 135.16M, 134.73M, 124.75M, 148.81M, 9622154 },
                    { -745, new DateTime(2023, 4, 5), 131.63M, 122.89M, 126.19M, 117.12M, 11997716 },
                    { -745, new DateTime(2023, 4, 6), 126.8M, 128.88M, 145.67M, 146.89M, 8591787 },
                    { -745, new DateTime(2023, 4, 10), 130.89M, 143.95M, 146.56M, 125.44M, 8664717 },
                    { -745, new DateTime(2023, 4, 11), 118.62M, 131.23M, 135.67M, 120.23M, 8332756 },
                    { -745, new DateTime(2023, 4, 12), 126.64M, 132.42M, 131.46M, 123.32M, 8628787 },
                    { -745, new DateTime(2023, 4, 13), 153.54M, 114.56M, 148.97M, 138.24M, 9271499 },
                    { -745, new DateTime(2023, 4, 14), 126.85M, 147.04M, 147.53M, 138.55M, 6184970 },
                    { -745, new DateTime(2023, 4, 17), 123.38M, 148.02M, 134.06M, 134.18M, 5906900 },
                    { -745, new DateTime(2023, 4, 18), 144.18M, 131.21M, 124.62M, 124.87M, 7034195 },
                    { -745, new DateTime(2023, 4, 19), 119.77M, 128.04M, 139.96M, 123.35M, 7754691 },
                    { -745, new DateTime(2023, 4, 20), 118.14M, 134.31M, 132.37M, 127.82M, 6988935 },
                    { -745, new DateTime(2023, 4, 21), 143.57M, 128.41M, 129.35M, 128.48M, 6817518 },
                    { -747, new DateTime(2023, 1, 3), 40.45M, 30.58M, 33.54M, 33.19M, 40167627 },
                    { -747, new DateTime(2023, 1, 4), 33.44M, 35.51M, 35.35M, 31.88M, 40475405 },
                    { -747, new DateTime(2023, 1, 5), 32.87M, 34.58M, 31.88M, 37.73M, 48564168 },
                    { -747, new DateTime(2023, 1, 6), 38.52M, 35.68M, 34.27M, 38.83M, 45115336 },
                    { -747, new DateTime(2023, 1, 9), 37.04M, 37.6M, 35.36M, 37.77M, 44950693 },
                    { -747, new DateTime(2023, 1, 10), 33.67M, 37.44M, 34.95M, 36.8M, 34384515 },
                    { -747, new DateTime(2023, 1, 11), 39.28M, 36.84M, 39.5M, 32.73M, 33716355 },
                    { -747, new DateTime(2023, 1, 12), 39.28M, 37.08M, 42.24M, 35.37M, 59878860 },
                    { -747, new DateTime(2023, 1, 13), 39.03M, 38.3M, 37.77M, 36.71M, 61608813 },
                    { -747, new DateTime(2023, 1, 17), 36.73M, 33.13M, 38.72M, 34.97M, 69201935 },
                    { -747, new DateTime(2023, 1, 18), 32.7M, 36.99M, 33.85M, 30.68M, 51816395 },
                    { -747, new DateTime(2023, 1, 19), 30.89M, 32.96M, 35.34M, 39.47M, 58218055 },
                    { -747, new DateTime(2023, 1, 20), 37.7M, 36.91M, 35.55M, 36.77M, 38917711 },
                    { -747, new DateTime(2023, 1, 23), 36.73M, 34.31M, 33.07M, 35.24M, 46125244 },
                    { -747, new DateTime(2023, 1, 24), 32.58M, 37.62M, 32.21M, 39.35M, 32436578 },
                    { -747, new DateTime(2023, 1, 25), 37.93M, 36.04M, 43.1M, 40.25M, 39957929 },
                    { -747, new DateTime(2023, 1, 26), 38.14M, 34.92M, 35.44M, 37.4M, 30977232 },
                    { -747, new DateTime(2023, 1, 27), 30.75M, 37.42M, 34.67M, 37.41M, 27449927 },
                    { -747, new DateTime(2023, 1, 30), 35.76M, 36.83M, 38.17M, 35.82M, 34869611 },
                    { -747, new DateTime(2023, 1, 31), 34.99M, 33.36M, 41.69M, 35.17M, 33009377 },
                    { -747, new DateTime(2023, 2, 1), 36.73M, 36.35M, 35.98M, 36.11M, 51770774 },
                    { -747, new DateTime(2023, 2, 2), 39.63M, 38.3M, 33.49M, 34.02M, 41885963 },
                    { -747, new DateTime(2023, 2, 3), 37.72M, 37.28M, 35.16M, 36.61M, 46973434 },
                    { -747, new DateTime(2023, 2, 6), 35.96M, 34.52M, 36.82M, 39.99M, 30190489 },
                    { -747, new DateTime(2023, 2, 7), 40.03M, 36.96M, 34.03M, 33.65M, 29353132 },
                    { -747, new DateTime(2023, 2, 8), 36.92M, 39.47M, 36.9M, 39.46M, 35358590 },
                    { -747, new DateTime(2023, 2, 9), 31.03M, 37.38M, 37.38M, 36.17M, 44584351 },
                    { -747, new DateTime(2023, 2, 10), 41.97M, 38.72M, 35M, 35.06M, 29704360 },
                    { -747, new DateTime(2023, 2, 13), 33.88M, 37.1M, 31.36M, 37M, 32952318 },
                    { -747, new DateTime(2023, 2, 14), 36.06M, 35.48M, 35.79M, 35.28M, 32577840 },
                    { -747, new DateTime(2023, 2, 15), 36.51M, 38.74M, 38.89M, 37.19M, 28826888 },
                    { -747, new DateTime(2023, 2, 16), 40.75M, 34.43M, 36.68M, 34.97M, 36328003 },
                    { -747, new DateTime(2023, 2, 17), 35M, 41.09M, 32.81M, 35.95M, 30681624 },
                    { -747, new DateTime(2023, 2, 21), 30.27M, 40.27M, 35.54M, 34.71M, 36312899 },
                    { -747, new DateTime(2023, 2, 22), 34.07M, 38.3M, 35.37M, 36.89M, 29386408 },
                    { -747, new DateTime(2023, 2, 23), 35.88M, 38.49M, 36.31M, 33.44M, 43135056 },
                    { -747, new DateTime(2023, 2, 24), 36.33M, 36.33M, 31.55M, 29.98M, 46973184 },
                    { -747, new DateTime(2023, 2, 27), 41.52M, 33.68M, 36.38M, 35.29M, 30847717 },
                    { -747, new DateTime(2023, 2, 28), 38.98M, 35.83M, 32.13M, 34.63M, 31581829 },
                    { -747, new DateTime(2023, 3, 1), 40.78M, 37.9M, 33.34M, 34.79M, 26350099 },
                    { -747, new DateTime(2023, 3, 2), 33.83M, 38.59M, 35.81M, 33.48M, 37076180 },
                    { -747, new DateTime(2023, 3, 3), 38.25M, 35.82M, 33.66M, 30.73M, 33309084 },
                    { -747, new DateTime(2023, 3, 6), 34.37M, 34.65M, 38.64M, 37.88M, 30097705 },
                    { -747, new DateTime(2023, 3, 7), 32.18M, 34.97M, 34.84M, 37.53M, 51719097 },
                    { -747, new DateTime(2023, 3, 8), 32.57M, 36.3M, 38.89M, 30.97M, 52177626 },
                    { -747, new DateTime(2023, 3, 9), 38.78M, 36.49M, 34.04M, 32.17M, 102974021 },
                    { -747, new DateTime(2023, 3, 10), 29.82M, 32.36M, 33.94M, 31.51M, 157985168 },
                    { -747, new DateTime(2023, 3, 13), 33.69M, 29.05M, 32.72M, 33.42M, 153069712 },
                    { -747, new DateTime(2023, 3, 14), 29.07M, 29.45M, 30.11M, 35.57M, 125024672 },
                    { -747, new DateTime(2023, 3, 15), 31.89M, 31.95M, 29.12M, 30.45M, 139894655 },
                    { -747, new DateTime(2023, 3, 16), 31.99M, 29.73M, 31.21M, 30.81M, 123341995 },
                    { -747, new DateTime(2023, 3, 17), 30.68M, 32.41M, 34.13M, 29.18M, 134362007 },
                    { -747, new DateTime(2023, 3, 20), 29.02M, 30.33M, 32.2M, 30.71M, 77815155 },
                    { -747, new DateTime(2023, 3, 21), 34.46M, 32.85M, 32.6M, 32.57M, 115046247 },
                    { -747, new DateTime(2023, 3, 22), 29.75M, 33.52M, 30.97M, 32.32M, 67180265 },
                    { -747, new DateTime(2023, 3, 23), 30.37M, 27.57M, 32.77M, 27.23M, 86788454 },
                    { -747, new DateTime(2023, 3, 24), 27.13M, 30.24M, 32.1M, 29.84M, 70181695 },
                    { -747, new DateTime(2023, 3, 27), 30.48M, 35.28M, 29.08M, 32.34M, 69364763 },
                    { -747, new DateTime(2023, 3, 28), 30.5M, 28.97M, 31.54M, 26.44M, 44344807 },
                    { -747, new DateTime(2023, 3, 29), 29.53M, 27.14M, 29.4M, 33.21M, 48795748 },
                    { -747, new DateTime(2023, 3, 30), 30.65M, 27.22M, 34.83M, 30.05M, 44650321 },
                    { -747, new DateTime(2023, 3, 31), 32.35M, 29.08M, 31.06M, 34.95M, 51584633 },
                    { -747, new DateTime(2023, 4, 3), 31.78M, 33.34M, 28.48M, 30.71M, 46803459 },
                    { -747, new DateTime(2023, 4, 4), 32.76M, 29.21M, 33.17M, 34.65M, 48463471 },
                    { -747, new DateTime(2023, 4, 5), 32.24M, 39.29M, 29.57M, 28.74M, 65409955 },
                    { -747, new DateTime(2023, 4, 6), 29.68M, 31.1M, 30.49M, 30.23M, 38171728 },
                    { -747, new DateTime(2023, 4, 10), 33.78M, 35.17M, 33.84M, 34.45M, 27171474 },
                    { -747, new DateTime(2023, 4, 11), 36.53M, 34.24M, 29.59M, 33.89M, 57770528 },
                    { -747, new DateTime(2023, 4, 12), 29.4M, 31.94M, 34.14M, 35.44M, 68559274 },
                    { -747, new DateTime(2023, 4, 13), 31.28M, 30.04M, 29.64M, 31.56M, 59527649 },
                    { -747, new DateTime(2023, 4, 14), 30.54M, 30.37M, 36.04M, 33.29M, 65775577 },
                    { -747, new DateTime(2023, 4, 17), 32.68M, 28.01M, 33.25M, 32.52M, 74916362 },
                    { -747, new DateTime(2023, 4, 18), 33.31M, 36.91M, 32.78M, 30.16M, 51575634 },
                    { -747, new DateTime(2023, 4, 19), 32.29M, 35.84M, 38.44M, 29.38M, 39303423 },
                    { -747, new DateTime(2023, 4, 20), 36.55M, 30.9M, 34.06M, 30.89M, 42402422 },
                    { -747, new DateTime(2023, 4, 21), 37.73M, 33.48M, 35.65M, 30.34M, 34438755 },
                    { -748, new DateTime(2023, 1, 4), 0.41M, 0.23M, 0.31M, 0.21M, 3 },
                    { -748, new DateTime(2023, 1, 6), 0.33M, 0.29M, 0.3M, 0.31M, 2 },
                    { -748, new DateTime(2023, 1, 9), 0.29M, 0.14M, 0.29M, 0.13M, 12 },
                    { -748, new DateTime(2023, 1, 10), 0.26M, 0.27M, 0.28M, 0.24M, 12 },
                    { -748, new DateTime(2023, 1, 11), 0.32M, 0.29M, 0.26M, 0.29M, 5 },
                    { -748, new DateTime(2023, 1, 12), 0.26M, 0.22M, 0.28M, 0.21M, 3 },
                    { -748, new DateTime(2023, 1, 13), 0.26M, 0.31M, 0.32M, 0.23M, 4 },
                    { -748, new DateTime(2023, 1, 17), 0.41M, 0.36M, 0.43M, 0.31M, 76 },
                    { -748, new DateTime(2023, 1, 18), 0.57M, 0.31M, 0.47M, 0.35M, 6 },
                    { -748, new DateTime(2023, 1, 19), 0.15M, 0.14M, 0.16M, 0.15M, 22 },
                    { -748, new DateTime(2023, 1, 20), 0.15M, 0.16M, 0.14M, 0.16M, 4 },
                    { -748, new DateTime(2023, 1, 23), 0.21M, 0.37M, 0.31M, 0.23M, 14 },
                    { -748, new DateTime(2023, 1, 24), 0.23M, 0.3M, 0.33M, 0.26M, 29 },
                    { -748, new DateTime(2023, 1, 25), 0.28M, 0.27M, 0.26M, 0.24M, 1 },
                    { -748, new DateTime(2023, 1, 26), 0.29M, 0.32M, 0.33M, 0.3M, 2 },
                    { -748, new DateTime(2023, 1, 27), 0.24M, 0.22M, 0.24M, 0.21M, 7 },
                    { -748, new DateTime(2023, 1, 30), 0.31M, 0.34M, 0.29M, 0.31M, 3 },
                    { -748, new DateTime(2023, 2, 10), 0.18M, 0.2M, 0.2M, 0.21M, 17 },
                    { -748, new DateTime(2023, 2, 14), 0.35M, 0.34M, 0.31M, 0.3M, 2 },
                    { -748, new DateTime(2023, 2, 15), 0.33M, 0.42M, 0.34M, 0.28M, 11 },
                    { -748, new DateTime(2023, 2, 16), 0.28M, 0.26M, 0.22M, 0.25M, 30 },
                    { -748, new DateTime(2023, 2, 17), 0.32M, 0.3M, 0.28M, 0.32M, 2 },
                    { -748, new DateTime(2023, 2, 21), 0.22M, 0.18M, 0.22M, 0.18M, 22 },
                    { -748, new DateTime(2023, 2, 24), 0.2M, 0.19M, 0.21M, 0.18M, 3 },
                    { -748, new DateTime(2023, 3, 1), 0.15M, 0.16M, 0.14M, 0.15M, 6 },
                    { -748, new DateTime(2023, 3, 3), 0.18M, 0.19M, 0.2M, 0.21M, 4 },
                    { -748, new DateTime(2023, 3, 6), 0.14M, 0.15M, 0.13M, 0.15M, 1 },
                    { -748, new DateTime(2023, 3, 8), 0.15M, 0.14M, 0.15M, 0.15M, 3 },
                    { -748, new DateTime(2023, 3, 15), 0.19M, 0.2M, 0.2M, 0.21M, 2 },
                    { -748, new DateTime(2023, 3, 17), 0.11M, 0.11M, 0.11M, 0.11M, 1 },
                    { -748, new DateTime(2023, 3, 20), 0.14M, 0.14M, 0.15M, 0.1M, 22 },
                    { -748, new DateTime(2023, 3, 21), 0.13M, 0.15M, 0.16M, 0.15M, 1 },
                    { -748, new DateTime(2023, 3, 22), 0.17M, 0.18M, 0.19M, 0.19M, 3 },
                    { -748, new DateTime(2023, 3, 27), 0.11M, 0.1M, 0.12M, 0.09M, 13 },
                    { -748, new DateTime(2023, 3, 29), 0.2M, 0.09M, 0.21M, 0.1M, 4 },
                    { -748, new DateTime(2023, 3, 30), 0.05M, 0.05M, 0.05M, 0.04M, 3 },
                    { -748, new DateTime(2023, 3, 31), 0.08M, null, null, null, null },
                    { -748, new DateTime(2023, 4, 10), 0.13M, 0.13M, 0.11M, 0.13M, 2 },
                    { -748, new DateTime(2023, 4, 11), 0.13M, 0.12M, 0.11M, 0.12M, 28 },
                    { -748, new DateTime(2023, 4, 12), 0.1M, 0.09M, 0.09M, 0.09M, 2 },
                    { -748, new DateTime(2023, 4, 14), 0.1M, 0.1M, 0.1M, 0.09M, 5 },
                    { -759, new DateTime(2023, 1, 20), 68.14M, 61.85M, 53.96M, 61.5M, 11278473 },
                    { -759, new DateTime(2023, 1, 23), 64.34M, 57.92M, 63.97M, 54.19M, 4337900 },
                    { -759, new DateTime(2023, 1, 24), 60.65M, 62.56M, 55.19M, 62.08M, 3238548 },
                    { -759, new DateTime(2023, 1, 25), 72.55M, 69.3M, 64.32M, 71.01M, 4237097 },
                    { -759, new DateTime(2023, 1, 26), 70.92M, 69.57M, 71.77M, 55.51M, 3335783 },
                    { -759, new DateTime(2023, 1, 27), 63.5M, 61.06M, 69.98M, 57.82M, 4015084 },
                    { -759, new DateTime(2023, 1, 30), 69.99M, 74.1M, 61.38M, 70.11M, 7575893 },
                    { -759, new DateTime(2023, 1, 31), 67.87M, 53.76M, 63.66M, 60.96M, 4746485 },
                    { -759, new DateTime(2023, 2, 1), 64.25M, 64.72M, 73.15M, 69.84M, 4880891 },
                    { -759, new DateTime(2023, 2, 2), 62.2M, 70.01M, 73.25M, 81.02M, 6110414 },
                    { -759, new DateTime(2023, 2, 3), 67.65M, 70.83M, 68.03M, 63.75M, 7000603 },
                    { -759, new DateTime(2023, 2, 6), 66.25M, 63.2M, 68.19M, 61.62M, 4942833 },
                    { -759, new DateTime(2023, 2, 7), 71.3M, 70.73M, 66.2M, 69.51M, 4700882 },
                    { -759, new DateTime(2023, 2, 8), 71.05M, 67.03M, 59.24M, 65.47M, 3651628 },
                    { -759, new DateTime(2023, 2, 9), 62.81M, 72.97M, 72.89M, 69.41M, 5663728 },
                    { -759, new DateTime(2023, 2, 10), 75.31M, 70.15M, 69.97M, 62.64M, 3344429 },
                    { -759, new DateTime(2023, 2, 13), 66.77M, 62.84M, 80.96M, 66.79M, 6029283 },
                    { -759, new DateTime(2023, 2, 14), 70.05M, 69.06M, 68.68M, 68.37M, 3242023 },
                    { -759, new DateTime(2023, 2, 15), 64.76M, 68.5M, 62.67M, 73.66M, 3189307 },
                    { -759, new DateTime(2023, 2, 16), 67.54M, 65.84M, 71.15M, 64.02M, 3419543 },
                    { -759, new DateTime(2023, 2, 17), 58.29M, 63.48M, 66.41M, 62M, 4021608 },
                    { -759, new DateTime(2023, 2, 21), 64.57M, 63.35M, 76.53M, 62.44M, 3142912 },
                    { -759, new DateTime(2023, 2, 22), 61.28M, 69.57M, 63.49M, 68.82M, 6023557 },
                    { -759, new DateTime(2023, 2, 23), 76.85M, 67.41M, 74.17M, 70.96M, 5525711 },
                    { -759, new DateTime(2023, 2, 24), 62.9M, 67.94M, 53.91M, 64.8M, 2329819 },
                    { -759, new DateTime(2023, 2, 27), 61.49M, 63.9M, 68.54M, 59.19M, 3681861 },
                    { -759, new DateTime(2023, 2, 28), 62.1M, 67.12M, 65.1M, 69.24M, 3976069 },
                    { -759, new DateTime(2023, 3, 1), 76.98M, 71.19M, 60.5M, 49.37M, 3028361 },
                    { -759, new DateTime(2023, 3, 2), 62.54M, 62.69M, 64.01M, 66.77M, 4744882 },
                    { -759, new DateTime(2023, 3, 3), 66.44M, 66.23M, 57.87M, 48.88M, 2048610 },
                    { -759, new DateTime(2023, 3, 6), 63.24M, 65.48M, 63.07M, 65.42M, 4256006 },
                    { -759, new DateTime(2023, 3, 7), 59.62M, 68.79M, 68.46M, 63.76M, 2779910 },
                    { -759, new DateTime(2023, 3, 8), 62.64M, 61.83M, 69.64M, 56.32M, 4270412 },
                    { -759, new DateTime(2023, 3, 9), 59.03M, 62.16M, 54.54M, 64.43M, 4880318 },
                    { -759, new DateTime(2023, 3, 10), 63.39M, 62.89M, 65.2M, 53.55M, 10055225 },
                    { -759, new DateTime(2023, 3, 13), 55.3M, 61.23M, 59.08M, 62.95M, 8485990 },
                    { -759, new DateTime(2023, 3, 14), 62.39M, 54.76M, 61.86M, 63.02M, 4695917 },
                    { -759, new DateTime(2023, 3, 15), 51.83M, 51.78M, 63.99M, 53.6M, 4347999 },
                    { -759, new DateTime(2023, 3, 16), 63.17M, 55.91M, 55.01M, 58.52M, 6977028 },
                    { -759, new DateTime(2023, 3, 17), 61.7M, 58.36M, 54.5M, 59.83M, 6671856 },
                    { -759, new DateTime(2023, 3, 20), 64.38M, 53.44M, 58.7M, 55.96M, 3867265 },
                    { -759, new DateTime(2023, 3, 21), 56.87M, 52.66M, 59.06M, 63.35M, 3603917 },
                    { -759, new DateTime(2023, 3, 22), 64.79M, 55.18M, 59.46M, 57.92M, 3433389 },
                    { -759, new DateTime(2023, 3, 23), 57.55M, 58.34M, 62.17M, 61.28M, 3667046 },
                    { -759, new DateTime(2023, 3, 24), 55.92M, 54.94M, 56.27M, 48.39M, 3199994 },
                    { -759, new DateTime(2023, 3, 27), 57.08M, 61.09M, 63.11M, 62.5M, 3526862 },
                    { -759, new DateTime(2023, 3, 28), 61.26M, 65.16M, 54.26M, 56.17M, 1327628 },
                    { -759, new DateTime(2023, 3, 29), 69.04M, 59.39M, 54.44M, 57.7M, 2890000 },
                    { -759, new DateTime(2023, 3, 30), 63.55M, 56.49M, 65.21M, 60.4M, 2648918 },
                    { -759, new DateTime(2023, 3, 31), 72.14M, 66.44M, 62.97M, 60.22M, 2908903 },
                    { -759, new DateTime(2023, 4, 3), 60.18M, 58.36M, 62.29M, 55.52M, 3113942 },
                    { -759, new DateTime(2023, 4, 4), 57.36M, 60.13M, 63.21M, 55.81M, 3379052 },
                    { -759, new DateTime(2023, 4, 5), 61.28M, 59.33M, 64.17M, 64.6M, 3473521 },
                    { -759, new DateTime(2023, 4, 6), 70.51M, 62.33M, 57.51M, 61.56M, 3045772 },
                    { -759, new DateTime(2023, 4, 10), 69M, 44.79M, 68.47M, 56.2M, 1944971 },
                    { -759, new DateTime(2023, 4, 11), 57.21M, 63.76M, 53.16M, 61.65M, 1936524 },
                    { -759, new DateTime(2023, 4, 12), 54.57M, 64.05M, 63.08M, 59.95M, 3339794 },
                    { -759, new DateTime(2023, 4, 13), 60.74M, 68.68M, 55.93M, 53.35M, 4380019 },
                    { -759, new DateTime(2023, 4, 14), 57.11M, 66.65M, 56.21M, 67.18M, 3628978 },
                    { -759, new DateTime(2023, 4, 17), 59.8M, 59.11M, 61.05M, 66.87M, 2939787 },
                    { -759, new DateTime(2023, 4, 18), 56.25M, 65.22M, 71.46M, 55.82M, 3289774 },
                    { -759, new DateTime(2023, 4, 19), 72.98M, 65.06M, 61.53M, 57.3M, 2774896 },
                    { -759, new DateTime(2023, 4, 20), 63.02M, 67.13M, 67.29M, 56.2M, 3358527 },
                    { -759, new DateTime(2023, 4, 21), 60.68M, 51.17M, 58.87M, 57.69M, 5090733 },
                    { -760, new DateTime(2023, 3, 14), 55.03M, 51.22M, 55.74M, 57.67M, 128174365 },
                    { -760, new DateTime(2023, 3, 15), 59.53M, 59.73M, 67.88M, 52.01M, 82962524 },
                    { -760, new DateTime(2023, 3, 16), 51.06M, 56.18M, 61.73M, 53.62M, 64798657 },
                    { -760, new DateTime(2023, 3, 17), 55.75M, 57.9M, 54.37M, 55.66M, 69850450 },
                    { -760, new DateTime(2023, 3, 20), 55.86M, 56.96M, 58.48M, 56.88M, 49359670 },
                    { -760, new DateTime(2023, 3, 21), 60.18M, 62.02M, 56.85M, 51.25M, 37951947 },
                    { -760, new DateTime(2023, 3, 22), 53.38M, 55.16M, 63.4M, 56.07M, 34465942 },
                    { -760, new DateTime(2023, 3, 23), 57.36M, 52.68M, 59.46M, 49.81M, 49641651 },
                    { -760, new DateTime(2023, 3, 24), 51.33M, 54.99M, 59.92M, 51.93M, 50760428 },
                    { -760, new DateTime(2023, 3, 27), 47.69M, 56.5M, 56.1M, 53.86M, 29064971 },
                    { -760, new DateTime(2023, 3, 28), 56.69M, 60.39M, 54.59M, 57.53M, 23420884 },
                    { -760, new DateTime(2023, 3, 29), 57.19M, 59.75M, 59.88M, 56.2M, 26392742 },
                    { -760, new DateTime(2023, 3, 30), 54.98M, 49.37M, 54.67M, 54.97M, 51009698 },
                    { -760, new DateTime(2023, 3, 31), 53.34M, 52.73M, 54.35M, 54.87M, 47204275 },
                    { -760, new DateTime(2023, 4, 3), 48.19M, 51.54M, 53.37M, 49.47M, 26989370 },
                    { -760, new DateTime(2023, 4, 4), 52.92M, 55.09M, 51.37M, 50.57M, 27186483 },
                    { -760, new DateTime(2023, 4, 5), 49.9M, 53.78M, 46.36M, 42.46M, 37628159 },
                    { -760, new DateTime(2023, 4, 6), 49.7M, 56.3M, 51.22M, 53.74M, 26732076 },
                    { -760, new DateTime(2023, 4, 10), 49.97M, 48.42M, 50.47M, 48.76M, 30999167 },
                    { -760, new DateTime(2023, 4, 11), 52.21M, 51.58M, 46.15M, 50.29M, 18933815 },
                    { -760, new DateTime(2023, 4, 12), 54.61M, 56.12M, 50.33M, 56.48M, 18625291 },
                    { -760, new DateTime(2023, 4, 13), 49.45M, 50.12M, 51.01M, 55.69M, 17474948 },
                    { -760, new DateTime(2023, 4, 14), 51.72M, 47.03M, 46.74M, 45.95M, 34858230 },
                    { -760, new DateTime(2023, 4, 17), 55.58M, 45.39M, 52.31M, 51.8M, 56052809 },
                    { -760, new DateTime(2023, 4, 18), 47.09M, 47.96M, 48.79M, 52.5M, 38792722 },
                    { -760, new DateTime(2023, 4, 19), 63.41M, 56.32M, 50.86M, 53.92M, 35436024 },
                    { -760, new DateTime(2023, 4, 20), 64.08M, 59.32M, 56.27M, 53.4M, 24484621 },
                    { -760, new DateTime(2023, 4, 21), 49.92M, 48.2M, 53.44M, 49.59M, 18459515 },
                    { -761, new DateTime(2023, 4, 21), 63.56M, 58.79M, 52.8M, 56.75M, 7385839 },
                }
                 select row)
                .Select(row =>
                    new SecurityPrice()
                    {
                        SecurityId = Convert.ToInt32(row[0]),
                        PriceDate = Convert.ToDateTime(row[1]),
                        PriceClose = (row[2] as decimal? ?? default),
                        PriceOpen = row[3] as decimal?,
                        PriceHigh = row[4] as decimal ?,
                        PriceLow = row[5] as decimal ?,
                        Volume = row[6] as long?
                    })
                .ToArray();

            configurationCollection
                .WithConfiguration(NewConfiguration(sourceGuid, securities))
                .WithConfiguration(NewConfiguration(sourceGuid, symbols))
                .WithConfiguration(NewConfiguration(sourceGuid, securityAttributes))
                .WithConfiguration(NewConfiguration(sourceGuid, securityPrices));

            return configurationCollection;
        }
    }

    #endregion
}
