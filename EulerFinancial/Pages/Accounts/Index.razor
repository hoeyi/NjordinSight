@inject Data.IAccountService AccountService

<table class="table">
    <thead>
        <tr>
            <th>
                @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.AccountNavigation.AccountObjectCode))
            </th>
            <th>
                @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.AccountNumber))
            </th>
            <th>
                @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.DisplayOrder))
            </th>
            <th>
                @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.BooksClosedDate))
            </th>
            <th>
                @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.IsComplianceTradable))
            </th>
            <th>
                @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.HasWallet))
            </th>
            <th>
                @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.HasBankTransaction))
            </th>
            <th>
                @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.HasBrokerTransaction))
            </th>
            <th>
                @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.AccountCustodianId))
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Accounts)
        {
            <tr>
                <td>@item.AccountNavigation.AccountObjectCode.ToString()</td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.AccountId">Details</a> |
                </td>
            </tr>
        }
    </tbody>
</table>

@code{
    public IList<Account> Accounts { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Accounts = await AccountService.SelectAll();
    }
}