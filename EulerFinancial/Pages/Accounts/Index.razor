@page "/Accounts"
@inject Data.IAccountService AccountService

@if (accounts is null){
    <p><em>Loading...</em></p>
}
else{
    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Data.ModelMetadataHelper.GetDisplayName(typeof(AccountObject), nameof(Account.AccountNavigation.AccountObjectCode))
                    </th>
                    <th>
                        @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.AccountNumber))
                    </th>
                    <th>
                        @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.DisplayOrder))
                    </th>
                    <th>
                        @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.BooksClosedDate))
                    </th>
                    <th>
                        @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.IsComplianceTradable))
                    </th>
                    <th>
                        @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.HasWallet))
                    </th>
                    <th>
                        @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.HasBankTransaction))
                    </th>
                    <th>
                        @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.HasBrokerTransaction))
                    </th>
                    <th>
                        @Data.ModelMetadataHelper.GetDisplayName(typeof(Account), nameof(Account.AccountCustodianId))
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var account in accounts)
                {
                    <tr>
                        <td>@account.AccountNavigation.AccountObjectCode</td>
                        <td>@account.AccountNumber</td>
                        <td>@account.DisplayOrder</td>
                        <td>@account.BooksClosedDate?.ToString(CultureInfo.CurrentUICulture.DateTimeFormat.ShortDatePattern)</td>
                        <td>@account.IsComplianceTradable.ToString()</td>
                        <td>@account.HasWallet</td>
                        <td>@account.HasBankTransaction.ToString()</td>
                        <td>@account.HasBrokerTransaction.ToString()</td>
                        <td>@account.AccountCustodian?.CustodianCode</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@account.AccountId">Details</a> |
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code{
    private IList<Account> accounts;

    protected override async Task OnInitializedAsync()
    {
        accounts = await AccountService.SelectAllAsync();
    }
}