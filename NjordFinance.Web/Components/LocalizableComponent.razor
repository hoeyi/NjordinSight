@using System.Reflection
@using System.ComponentModel.DataAnnotations

@inherits CustomComponent

@code{
    /// <summary>
    /// Gets or sets the <see cref="IModelMetadataService"/> for this component.
    /// </summary>
    [Inject]
    protected IModelMetadataService ModelMetadata { get; set; } = default!;

    protected static string? DescriptionFor<TEnum>(TEnum @enum) =>
        GetAttribute<TEnum, DisplayAttribute>(@enum)?.GetDescription();

    protected static string? GroupNameFor<TEnum>(TEnum @enum) =>
        GetAttribute<TEnum, DisplayAttribute>(@enum)?.GetGroupName();

    protected static string NameFor<TEnum>(TEnum @enum) =>
        GetAttribute<TEnum, DisplayAttribute>(@enum)?.GetName();

    protected static int? OrderFor<TEnum>(TEnum @enum) =>
        GetAttribute<TEnum, DisplayAttribute>(@enum)?.GetOrder();

    protected static string? PromptFor<TEnum>(TEnum @enum) =>
        GetAttribute<TEnum, DisplayAttribute>(@enum)?.GetPrompt();

    protected static string? ShortNameFor<TEnum>(TEnum @enum) =>
        GetAttribute<TEnum, DisplayAttribute>(@enum)?.GetShortName();

    private static TAttribute GetAttribute<TEnum, TAttribute>(TEnum @enum)
        where TAttribute : Attribute
    {
        var enumType = typeof(TEnum);
        var name = Enum.GetName(enumType, @enum);

        var memberAttribute = enumType
            .GetMember(name)
            .FirstOrDefault()
            ?.GetCustomAttribute<TAttribute>();

        return memberAttribute;
    }
}