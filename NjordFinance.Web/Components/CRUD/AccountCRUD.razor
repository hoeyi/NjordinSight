@inherits ModelCRUD<Account>

@if (Model is null || AccountCustodians is null)
{
    <LoadingSvg />
}
else
{
    <ModelForm Model="@Model">
        <ModelFormLineItem MemberName="@nameof(Account.AccountNumber)">
            @if (ReadOnly)
            {
                @Model.AccountNumber
            }
            else
            {
                <InputText class="form-control" @bind-Value=Model.AccountNumber
                        disable="@Disabled" />
                <ValidationMessage For="@(() => Model.AccountNumber)" />
            }
        </ModelFormLineItem>
        <ModelFormLineItem MemberName="@nameof(Account.AccountCustodianId)">
            @if (ReadOnly)
            {
                @Model.AccountCustodian?.DisplayName
            }
            else
            {
                <InputSelect id="account-custodian" class="form-control"
                            DisplayName="Model.AccountCustodian.CustodianCode"
                            @bind-Value="Model.AccountCustodianId"
                            disabled="@Disabled">
                    @foreach (var custodian in AccountCustodians)
                    {
                    <option value=@custodian.Key>@custodian.Display</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Model.AccountCustodianId)" />
            }
        </ModelFormLineItem>
        <ModelFormLineItem MemberName="@nameof(Account.BooksClosedDate)">
            @if (ReadOnly)
            {
                @Model.BooksClosedDate?.ToShortDateString()
            }
            else
            {
                <InputDate class="form-control" @bind-Value=Model.BooksClosedDate
                        disabled="@Disabled" />
                <ValidationMessage For="@(() => Model.BooksClosedDate)" />
            }
        </ModelFormLineItem>
        <ModelFormLineItem MemberName="@nameof(Account.IsComplianceTradable)">
            @if (ReadOnly)
            {
                @Model.IsComplianceTradable
            }
            else
            {
                <InputCheckbox @bind-Value=Model.IsComplianceTradable disabled="@Disabled" />
                <ValidationMessage For="@(() => Model.IsComplianceTradable)" />
            }
        </ModelFormLineItem>
        <ModelFormLineItem MemberName="@nameof(Account.HasWallet)">
            @if (ReadOnly)
            {
                @Model.HasWallet
            }
            else
            {
                <InputCheckbox @bind-Value=Model.HasWallet disabled="@Disabled" />
                <ValidationMessage For="@(() => Model.HasWallet)" />
            }
        </ModelFormLineItem>
        <ModelFormLineItem MemberName="@nameof(Account.HasBankTransaction)">
            @if (ReadOnly)
            {
                @Model.HasBankTransaction
            }
            else
            {
                <InputCheckbox @bind-Value=Model.HasBankTransaction disabled="@Disabled" />
                <ValidationMessage For="@(() => Model.HasBankTransaction)" />
            }
        </ModelFormLineItem>
        <ModelFormLineItem MemberName="@nameof(Account.HasBrokerTransaction)">
            @if (ReadOnly)
            {
                @Model.HasBrokerTransaction
            }
            else
            {
                <InputCheckbox @bind-Value=Model.HasBrokerTransaction disabled="@Disabled" />
                <ValidationMessage For="@(() => Model.HasBrokerTransaction)" />
            }
        </ModelFormLineItem>
    </ModelForm>
}
@code {
    [Parameter]
    public IEnumerable<LookupModel> AccountCustodians { get; set; }
}
