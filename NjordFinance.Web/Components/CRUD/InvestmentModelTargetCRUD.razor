@inherits ModelCRUD<InvestmentModelTargetViewModel>

@if(IsLoading)
{
    <LoadingSvg />
}
else
{
    <ContentTile>
        <TitleAlignLeft>
            @ViewModel.ParentAttribute.DisplayName
            @if(ReadOnly)
            {
                <span class="sub-title">
                    (@ViewModel.EffectiveDate.ToShortDateString())
                </span>
            }
        </TitleAlignLeft>
        <TitleAlignRight>
            @if(!ReadOnly)
            {
                <InputDate class="form-control right" @bind-Value="@ViewModel.EffectiveDate" />
            }
        </TitleAlignRight>
        <Body>
            <DataGrid Data="@ViewModel.Entries">
                <ValidationMessage For=@(() => ViewModel.SumOfMemberWeights) />
                    @if(ReadOnly)
                    {
                        <DataGridColumn 
                            Property=@nameof(InvestmentStrategyTarget.AttributeMemberId)
                            Caption=@(NameFor<InvestmentStrategyTarget>(nameof(InvestmentStrategyTarget.AttributeMemberId)))>
                                    <CellTemplate Context="model">
                                        @model.AttributeMember.DisplayName
                                    </CellTemplate>
                        </DataGridColumn>
                        <DataGridColumn 
                            Property=@nameof(InvestmentStrategyTarget.Weight)
                            Caption=@(NameFor<InvestmentStrategyTarget>(nameof(InvestmentStrategyTarget.Weight)))>
                                <CellTemplate Context="model">
                                    @model.Weight
                                </CellTemplate>
                        </DataGridColumn>
                    }
                    else
                    {
                        <DataGridColumn 
                            Property=@nameof(InvestmentStrategyTarget.AttributeMemberId)
                            Caption=@(NameFor<InvestmentStrategyTarget>(nameof(InvestmentStrategyTarget.AttributeMemberId)))>
                                <CellEditTemplate Context="model">
                                    <InputSelect class="form-control"
                                        @bind-Value="@model.AttributeMemberId">
                                        @foreach(var member in AttributeMemberLookup)
                                        {
                                            <option value="@member.Key">@member.Display</option>
                                        }
                                    </InputSelect>
                                </CellEditTemplate>
                        </DataGridColumn>
                        <DataGridColumn 
                            Property=@nameof(InvestmentStrategyTarget.Weight)
                            Caption=@(NameFor<InvestmentStrategyTarget>(nameof(InvestmentStrategyTarget.Weight)))>
                                <CellEditTemplate Context="model">
                                    <InputNumber class="form-control" @bind-Value="@model.Weight" />
                                </CellEditTemplate>
                        </DataGridColumn>
                    }
                </DataGrid>
        </Body>
    </ContentTile>
}

@code{
    [CascadingParameter]
    public IEnumerable<LookupModel> AttributeMemberLookup { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        bool modelIsNull = ViewModel is null;
        bool attributeLookupIsNull = AttributeMemberLookup is null;

        IsLoading = ViewModel is null || (ReadOnly ^ (AttributeMemberLookup is null));
    }
}