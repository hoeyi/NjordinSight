@inherits ModelCRUD<AccountCompositeViewModel>

@if(ViewModel is null)
{
    <LoadingSvg />
}
else
{
    <ModelForm TViewModel="AccountCompositeViewModel">
        @*AccountObject inputs*@
        <ModelFormLineItem ForMember="@(x => x.AccountObjectCode)"
            ValidationMessageDelegate="@(() => ViewModel.AccountObjectCode)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ViewModel.AccountObjectCode
                </div>
            }
            else
            {
                <InputText class="form-control" @bind-Value=ViewModel.AccountObjectCode
                    disable="@Disabled"
                   DisplayName=@(NameFor(x => x.AccountObjectCode)) />
            }
        </ModelFormLineItem>
        <ModelFormLineItem ForMember="@(x => x.DisplayName)"
            ValidationMessageDelegate="@(() => ViewModel.DisplayName)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ViewModel.DisplayName
                </div>
            }
            else
            {
                <InputText class="form-control" @bind-Value=ViewModel.DisplayName
                    disable="@Disabled"
                    DisplayName=@(NameFor(x => x.DisplayName)) />
            }
        </ModelFormLineItem>
        <ModelFormLineItem ForMember="@(x => x.Description)"
            ValidationMessageDelegate="@(() => ViewModel.Description)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ViewModel.Description
                </div>
            }
            else
            {
                <InputText class="form-control" @bind-Value=ViewModel.Description
                    disable="@Disabled"
                   DisplayName=@(NameFor(x => x.Description)) />
            }
        </ModelFormLineItem>
        <ModelFormLineItem ForMember="@(x => x.StartDate)"
            ValidationMessageDelegate="@(() => ViewModel.StartDate)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ViewModel.StartDate.ToShortDateString()
                </div>
            }
            else
            {
                <InputDate class="form-control" @bind-Value=ViewModel.StartDate disable="@Disabled" />
            }
        </ModelFormLineItem>
        <ModelFormLineItem ForMember="@(x => x.CloseDate)"
            ValidationMessageDelegate="@(() => ViewModel.CloseDate)">
            @if (ReadOnly)
            {
                <div class="form-control">
                    @ViewModel.CloseDate?.ToShortDateString()
                </div>
            }
            else
            {
                <InputDate class="form-control" @bind-Value=ViewModel.CloseDate disable="@Disabled" />
            }
        </ModelFormLineItem>
    </ModelForm>
}