@typeparam TViewModel

@inherits LocalizableComponent

@if(!string.IsNullOrEmpty(LabelText))
{
    <tr>
        <td class="col-sm-2">
            @if(!string.IsNullOrEmpty(ToolTipText))
            {
                <ToolTip Text="@ToolTipText">
                    @LabelText
                </ToolTip>
            }
            else
            {
                @LabelText
            }
        </td>
        <td class="col-sm-10">
            @ChildContent
            @if(!SuppressValidation)
            {
                <ValidationMessage For="@ForMember" />
            }
        </td>
    </tr>
}

@code {
    [CascadingParameter]
    private ModelForm<TViewModel> ParentForm { get; set; }

    [Parameter, EditorRequired] 
    public RenderFragment ChildContent { get; set; }

    [Parameter, EditorRequired]
    public Expression<Func<object>> ForMember { get; set; }

    [Parameter]
    public string LabelOverride { get; set; }

    [Parameter]
    public bool SuppressValidation { get; set; }

    private string ToolTipText { get; set; }

    private string LabelText { get; set; }

    private Expression<Func<TViewModel, object>> TypedAccessor { get; set; }

    protected override void OnInitialized()
    {
        if (ForMember is null)
            throw new ArgumentNullException(paramName: nameof(ForMember));

        // Convert the ForMember parameter into a typed accessor for compatability with the
        // IModelMetadataService methods.
        TypedAccessor = ExpressionConverter.ConvertAccessor<TViewModel, object>(ForMember);

        LabelText = string.IsNullOrEmpty(LabelOverride) ?
            ModelMetadata.NameFor<TViewModel>(TypedAccessor) : LabelOverride;

        ToolTipText = ModelMetadata.DescriptionFor(TypedAccessor);
    }


}
