::deep .themed-component {
    color: var(--theme-text-color-0, black);
    background-color: var(--theme-elevation-backcolor-0, white);
    position: static;
}

::deep form.model-editor {
    width: 50%;
}

::deep .model-attributes td {
    padding: 0.25rem;
}

::deep .text-area {
    white-space: pre-wrap;
}

/*#region DataGrid*/

::deep .datagrid {
    width: 100%;
    overflow: scroll;
}

::deep .datagrid-cell a {
    color: var(--theme-text-color-0, black);
    font-weight: bold;
    text-indent: 0.5rem;
    text-decoration: none;
    display: inline-block;
    width: 100%;
    height: 100%;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
}

    ::deep .datagrid-cell a:hover {
        background-color: var(--theme-tablecell-onhover-color, gray);
        color: var(--theme-text-color-0, black);
        cursor: pointer;
        text-decoration: underline;
    }

::deep .datagrid .title {
    font-size: 1.25rem;
    font-weight: bold;
}


::deep .datagrid-cell {
    background-color: var(--theme-tablecell-back-color, white);
    border: solid;
    border-width: 0.5px;
    border-color: var(--theme-tablecell-border-color, white);
    color: var(--theme-tablecell-fore-color, black);

}

::deep .datagrid-cell.text {
    text-indent: 0.5rem;
}

::deep .datagrid-column-header {
    border: solid;
    text-indent: 0.5rem;
    border-width: 0.5px;
    border-color: var(--theme-tableheader-border-color, white);
    background-color: var(--theme-tableheader-back-color, white);
    color: var(--theme-tableheader-fore-color, black);
}

/*#endregion DataGrid*/


/*#region Form Control*/
::deep .form-control {
    color: var(--theme-text-color-0, black) !important;
    outline: none !important;
    padding: 0.125em !important;
    font-size: inherit !important;
    font-family: inherit !important;
}

::deep .form-control:not(.label):not(.button) {
    background-color: var(--theme-form-control-back-color, white);
    border-color: var(--theme-form-control-border-color, gray);
}

    ::deep .form-control.label {
        background-color: var(--theme-elevation-backcolor-0, white) !important;
        border: none !important;
        color: var(--theme-text-color-0, black) !important;
        font-size: inherit !important;
        font-family: inherit !important;
        outline: none !important;
        padding: 0.125em !important;
    }

    ::deep .form-control.button {
        background-color: var(--theme-hexcolor-primary-0, inherit) !important;
        border-color: var(--theme-form-control-border-color, inherit) !important;
        color: var(--theme-text-color-0, white) !important;
    }

        ::deep .form-control.button:hover {
            background-color: var(--theme-hexcolor-primary-2, inherit) !important;
            border-color: var(--theme-form-control-border-color, inherit) !important;
            color: var(--theme-text-color-0, white) !important;
        }

::deep input[type=checkbox]:checked:before {
    background: var(--euler-hexcolor-primary-1, blue);
}
/*#endregion Form Control*/


/*#region Titles, Headers, & Sections*/

.content-tile-title {
    --default-height: 32px;
    --icon-max-width: 32px;
}

::deep .content-tile-title {
    display: flex;
    position: relative;
    padding-left: 0.25rem;
    justify-content: space-between;
    /*height: 1rem;*/
}

::deep .content-tile-title .left {
    margin-right: auto;
}

::deep .content-tile-title .right {
    margin-left: auto;
    /*width: 2rem;*/
}

    ::deep .content-tile-title .icon {
        width: 2rem;
    }
    ::deep .content-tile-title .sub-title {
        font-size: 0.85rem;
    }

::deep p.content-tile::after {
    padding-bottom: 1rem;
}

::deep .column {
    width: 50%;
}

/*#endregion Titles, Headers & Sections*/


/*#region Modal forms/dialog */
::deep .custom-modal .model-editor {
    width: 100%;
}
/*#endregion */

/*#region Ion-Icon svg formatting */
/*Change the fill color to light shade if not 'none' or 'transparent'.*/
::deep .ion-icon :not(svg[fill="none"], svg[fill="transparent"]) {
    fill: var(--theme-text-color-0, black);
}

/*Change the stroke color to light shade if not 'none' or 'transparent'.*/
::deep .ion-icon :not(svg[stroke="none"], svg[stroke="transparent"]) {
    stroke: var(--theme-text-color-0, black);
}

/*Set the default background color for IonIcons.*/
::deep .ion-icon svg {
    background: none;
}

/*#endregion*/