/* Override the a element rules so that value inherits from parent. */
a {
    text-decoration: inherit !important;
    font-family: inherit !important;
    font-size: inherit !important;
    color: inherit !important;
    background-color: inherit !important;
    padding: inherit !important;
    margin: inherit !important;
    display: block;
}

.menu-root {
    position: absolute;
    display: inline-block;
    bottom: 0px;
}

.menu-item {
    position: relative;
    background-color: var(--euler-hexcolor-back-0, white);
    color: var(--euler-hexcolor-fore-0, black);
    border: none;
    cursor: pointer;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 0.85rem;
    text-align: left;
    text-decoration: none;
}

    .menu-item.dropdown-anchor {
        display: inline-block;
        padding: 0.25rem;
        border: 2px;
    }

        .menu-item.dropdown-anchor:hover {
            background-color: var(--euler-hexcolor-back-1-alt, white);
        }

            .menu-item.dropdown-anchor:hover > .dropdown-content {
                display: block;
            }

/*
    Dropdown content elements contain the visible detail when the parent anchor 
    is underneath the cursor.
*/
.dropdown-content {
    color: var(--euler-hexcolor-fore-0, black);
    background-color: var(--euler-hexcolor-back-1-alt, white);
    display: none;
    position: absolute;
    left: 0px;
    text-overflow: ellipsis;
    text-decoration: none;
    width: 15vw;
    padding: inherit;
    z-index: 3;
}

/*  
    Menu item detail elements contain specific page links and 
    have not children.
*/
.menu-item.detail {
    background-color: var(--euler-hexcolor-back-1-alt, white);
    padding-left: 0.75rem;
    padding-top: 0.25rem;
    padding-bottom: 0.25rem;
    font-size: 0.75rem;
}

    .menu-item.detail:hover {
        background-color: var(--euler-hexcolor-back-1, white);
    }


/* Change the fill color to light shade if not 'none' or 'transparent'. */
::deep .ion-icon :not(svg[fill="none"], svg[fill="transparent"]) {
    fill: var(--euler-hexcolor-fore-0, black);
}

/* Change the stroke color to light shade if not 'none' or 'transparent'. */
::deep .ion-icon :not(svg[stroke="none"], svg[stroke="transparent"]) {
    stroke: var(--euler-hexcolor-fore-0, black);
}

/* Set the default background color for IonIcons.*/
::deep .ion-icon svg {
    background: none;
}

::deep .ion-icon {
    position: relative;
    padding: 5px;
    height: 10%;
    width: 10%;
    left: 0%;
    top: 0%;
    z-index: 1;
}