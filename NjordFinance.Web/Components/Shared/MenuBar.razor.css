/*#region Local variables */

.menu-bar, .sub-menu {
    --default-link-onhover-back-color: var(--theme-hexcolor-primary-0, gray);
    --fore-color: var(--theme-text-color-0, black);
    --background-color: var(--theme-elevation-backcolor-0);
    --border-color: var(--theme-elevation-backcolor-9, black);
    --border-hover-color: var(--theme-text-color-0, black);
    --border-size: 1px;
    --hover-color: var(--theme-elevation-backcolor-2);
    --hover-color-detail: var(--theme-elevation-backcolor-5);
    --default-height: 32px;
    --icon-max-width: 32px;
    --menu-fontfamily-default: Arial, Helvetica, sans-serif;
}
/*#endregion*/

.menu-bar {
    display: flex;
    list-style-type: none;
    margin: 0;
    padding: 0;

    z-index: 98;
}

.custom-nav-link:hover {
    background-color: var(--default-link-onhover-back-color);
    cursor: pointer;
}

::deep .menu-item.root-node {
    display: flex;
    font-family: var(--theme-fontfamily-default, --menu-fontfamily-default);
    font-style: italic;
    font-size: 1.5rem;
    height: 100%; /*calc(1 * var(--default-height, 32px));*/
    position: relative;
}

::deep .root-node .caption {
    padding: 0.5rem 0.25rem 0.5rem 0.5rem;
}

    ::deep .menu-item:not(.root-node) {
        font-family: var(--theme-fontfamily-actionmenu, --menu-fontfamily-default);
        font-style: normal;
        font-size: 0.75rem;
        height: var(--default-height, 32px);
        position: relative;
    }

::deep .icon.root {
    aspect-ratio: 1/1;
    height: 100%;
    max-width: var(--icon-max-width, 32px);
}

/*#region sub-menu class and variants*/
::deep .sub-menu {
    background-color: var(--hover-color);
    display: none;
    list-style-type: none;
    margin: 0;
    max-width: 30vw;
    min-width: max(150px, 13vw);
    padding: 0;
    position: absolute;
}

::deep .sub-menu:not(.level-0) {
    display: none;
}

::deep .sub-menu.level-0 {
    left: 0;
    top: 100%;
}

::deep .sub-menu.level-0:before {
    content: '';
    position: absolute;
    width: 50%;
    background: var(--border-color);
    height: 1px;
    right: 0rem;
}

::deep .sub-menu.level-n {
    left: 99%;
    top: 0;
}
/*#endregion*/

/*#region Hover behavior*/
::deep .parent:hover > .sub-menu {
    box-shadow: 
        0.25rem 0.25rem rgb(0 0 0 / var(--theme-box-shadow-opacity, 0.3)),
        0 -1px 0 var(--border-color) inset, 
        1px 0 0 var(--border-color) inset,
        -1px 0 0 var(--border-color) inset;
    display: block;
}

::deep .parent:not(.root-node):hover > .sub-menu {
    box-shadow: 
        0.25rem 0.25rem rgb(0 0 0 / var(--theme-box-shadow-opacity, 0.3)),
        0 1px 0 var(--border-color) inset,
        0 -1px 0 var(--border-color) inset,
        1px 0 0 var(--border-color) inset, 
        -1px 0 0 var(--border-color) inset;
}

::deep .menu-item.parent:hover{
    box-shadow: 
            /*0.25rem 0.25rem rgb(0 0 0 / var(--theme-box-shadow-opacity, 0.3)),*/
            0 1px 0 var(--border-color) inset, 
            1px 0 0 var(--border-color) inset,
            -1px 0 0 var(--border-color) inset;
    background-color: var(--hover-color);
}

::deep .menu-item:hover {
    background-color: var(--hover-color-detail);
}

::deep .sub-menu > .menu-item:hover {
    background-color: var(--hover-color-detail);

    outline: var(--border-size) solid var(--border-hover-color);
    outline-offset: -0.25rem;
}
/*#endregion*/

/*#region Ion-Icon svg formatting */
 /*Change the fill color to light shade if not 'none' or 'transparent'.*/ 
::deep .ion-icon :not(svg[fill="none"], svg[fill="transparent"]) {
    fill: var(--fore-color, black);
}

/*Change the stroke color to light shade if not 'none' or 'transparent'.*/
::deep .ion-icon :not(svg[stroke="none"], svg[stroke="transparent"]) {
    stroke: var(--fore-color, black);
}

 /*Set the default background color for IonIcons.*/
::deep .ion-icon svg {
    background: none;
}

/*#endregion*/