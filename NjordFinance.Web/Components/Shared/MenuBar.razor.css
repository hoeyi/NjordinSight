/*#region Local variables */
.menu-bar, .sub-menu {
    --fore-color: var(--theme-text-color-0, black);
    --background-color: var(--theme-elevation-backcolor-0);
    --hover-color: var(--theme-elevation-backcolor-3);
    --hover-color-detail: var(--theme-elevation-backcolor-6);
    --menu-fontfamily-default: var(--euler-fontfamily-actionmenu, 'Arial');
    --default-height: 32px;
    --icon-max-width: 32px;
}
/*#endregion*/

.menu-bar {
    display: flex;
    list-style-type: none;
    margin: 0;
    padding: 0;
    font-family: var(--menu-fontfamily-default);
}

::deep .menu-item {
    position: relative;
    font-size: 0.75rem;
    height: var(--default-height, 32px);
    display: flex;
}

    ::deep .menu-item.root-node {
        position: relative;
        display: flex;
        height: calc(0.75 * var(--default-height, 32px));
    }

::deep .icon.root {
    max-width: var(--icon-max-width, 32px);
    height: 100%;
    aspect-ratio: 1/1;
}

/*#region sub-menu class and variants*/
::deep .sub-menu {
    /*border: solid;*/
    /*border-width: 1px;*/
    /*border-color: var(--theme-elevation-backcolor-4);*/
    display: none;
    margin: 0;
    padding: 0;
    min-width: 15vw;
    max-width: 25vw;
    background-color: var(--hover-color);
}

::deep .sub-menu.level-0 {
    left: 0;
    position: absolute;
    top: 100%;
    list-style-type: none;
}

    ::deep .sub-menu.level-n {
        left: 100%;
        position: absolute;
        top: 0;
        list-style-type: none;
    }
/*#endregion*/

/*#region Hover behavior*/
::deep .parent:hover > .sub-menu {
    display: block;
}

::deep .menu-item.parent:hover{
    background-color: var(--hover-color);
}

::deep .menu-item:hover {
    background-color: var(--hover-color-detail);
}

::deep .sub-menu > .menu-item:hover {
    background-color: var(--hover-color-detail);
}
/*#endregion*/

/*#region Ion-Icon svg formatting */
 /*Change the fill color to light shade if not 'none' or 'transparent'.*/ 
::deep .ion-icon :not(svg[fill="none"], svg[fill="transparent"]) {
    fill: var(--fore-color, black);
}

/*Change the stroke color to light shade if not 'none' or 'transparent'.*/
::deep .ion-icon :not(svg[stroke="none"], svg[stroke="transparent"]) {
    stroke: var(--fore-color, black);
}

 /*Set the default background color for IonIcons.*/
::deep .ion-icon svg {
    background: none;
}

/*#endregion*/