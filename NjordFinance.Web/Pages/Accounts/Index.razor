@page "/Accounts"

@inherits ModelIndex<Account>


@*<div>
    <a class="link-button" href="@($"{PageIndexUri}/Create")"
       @onclick="@(args => NavigateToCreate($"{Guid.NewGuid()}"))"
       @onclick:preventDefault>
        @Resources.Strings.Caption_Button_Create
    </a>
</div>*@

<PageTitle>@(PageTitle.Index().AsPageTitle())</PageTitle>

<div class="top-row">
    <div class="header-item">
        <MenuStrip Menu="@menu" />
    </div>
    <div class="header-item">
        @(PageTitle.Index())
    </div>
</div>

<hr/>

<div>
    <SearchInputTable TModel=@Account
                    ComparisonOperators=@ComparisonOperators
                    ExpressionBuilder=@ExpressionBuilder
                    SearchFields=@SearchFields
                    OnSearchClick=@(args => SearchClicked(args))>
    </SearchInputTable>
</div>
@if (IsLoading)
{
    <LoadingSvg />
}
else
{
    <span>
        <DataGrid Data="@Models" class="datagrid">
            <DataGridColumn Property=@nameof(Account.AccountNavigation.AccountObjectCode)
                        Caption=@(NameFor<AccountObject>(nameof(AccountObject.AccountObjectCode)))>
                <CellTemplate Context="model">
                    <a href="@($"{PageIndexUri}/Details/{model.AccountId}")" @onclick="@(args => NavigateToDetail(model, args))"
                   @onclick:preventDefault>
                        @model.AccountNavigation.AccountObjectCode.ToUpper()
                    </a>
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.AccountNavigation.ObjectDisplayName)
                        Caption=@(NameFor<AccountObject>(nameof(AccountObject.ObjectDisplayName)))>
                <CellTemplate Context="model">
                    @model.AccountNavigation.ObjectDisplayName
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.AccountNavigation.ObjectDescription)
                        Caption=@(NameFor<AccountObject>(nameof(AccountObject.ObjectDescription)))>
                <CellTemplate Context="model">
                    @model.AccountNavigation.ObjectDescription
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.AccountNavigation.StartDate)
                        Caption=@(NameFor<AccountObject>(nameof(AccountObject.StartDate)))>
                <CellTemplate Context="model">
                    @model.AccountNavigation.StartDate.ToShortDateString()
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.AccountNavigation.CloseDate)
                        Caption=@(NameFor<AccountObject>(nameof(AccountObject.CloseDate)))>
                <CellTemplate Context="model">
                    @model.AccountNavigation.CloseDate?.ToShortDateString()
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.AccountNumber)
                        Caption=@(NameFor<Account>(nameof(Account.AccountNumber)))>
                <CellTemplate Context="model">
                    @model.AccountNumber
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.BooksClosedDate)
                        Caption=@(NameFor<Account>(nameof(Account.BooksClosedDate)))>
                <CellTemplate Context="model">
                    @model.BooksClosedDate?.ToShortDateString()
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.IsComplianceTradable)
                        Caption=@(NameFor<Account>(nameof(Account.IsComplianceTradable)))>
                <CellTemplate Context="model">
                    @model.IsComplianceTradable
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.HasWallet)
                        Caption=@(NameFor<Account>(nameof(Account.HasWallet)))>
                <CellTemplate Context="model">
                    @model.HasWallet
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.HasBankTransaction)
                        Caption=@(NameFor<Account>(nameof(Account.HasBankTransaction)))>
                <CellTemplate Context="model">
                    @model.HasBankTransaction
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.HasBrokerTransaction)
                        Caption=@(NameFor<Account>(nameof(Account.HasBrokerTransaction)))>
                <CellTemplate Context="model">
                    @model.HasBrokerTransaction
                </CellTemplate>
            </DataGridColumn>
            <DataGridColumn Property=@nameof(Account.AccountCustodian.CustodianCode)
                        Caption=@(NameFor<Account>(nameof(Account.AccountCustodianId)))>
                <CellTemplate Context="model">
                    @model.AccountCustodian?.CustodianCode
                </CellTemplate>
            </DataGridColumn>
        </DataGrid>
    </span>
}

@code {

    private Menu menu = new()
    {
        IconKey = "reorder-four",
        Children = new()
        {
        }
    };

    /// <inheritdoc/>
    protected override Task OnInitializedAsync()
    {
        MaxRecordCount = -1;

        return base.OnInitializedAsync();
    }

    private void NavigateToDetail(Account model, MouseEventArgs args)
    {
        NavigateToDetail($"{model.AccountId}");
    }
}