@page "/Composites"

@inherits ModelIndex<AccountComposite>

<PageTitle>@(PageTitle.ReadMany().AsPageTitle())</PageTitle>

<ThemedComponent>
    <ModelPageMenuHeader ActionMenu="@ActionMenu" Header="@(PageTitle.ReadMany())" />

    <SearchInputTable TModel=@AccountComposite
                        ComparisonOperators=@ComparisonOperators
                        ExpressionBuilder=@ExpressionBuilder
                        SearchFields=@SearchFields
                        OnSearchClick=@(args => SearchClicked(args))>
    </SearchInputTable>
    
    @if (IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <PageSection>
            <DataGrid Data="@Models" >
                <DataGridColumn Property=@nameof(AccountComposite.AccountCompositeNavigation.AccountObjectCode)
                            Caption=@(NameFor<AccountObject>(nameof(AccountObject.AccountObjectCode)))>
                    <CellTemplate Context="model">
                        <a href="@(FormatDetailUri(model.AccountCompositeId))" @onclick:preventDefault
                            @onclick="@(args => Detail_OnClick(model, args))">
                            @model.AccountCompositeNavigation.AccountObjectCode.ToUpper()
                        </a>
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountComposite.AccountCompositeNavigation.ObjectDisplayName)
                            Caption=@(NameFor<AccountObject>(nameof(AccountObject.ObjectDisplayName)))>
                    <CellTemplate Context="model">
                        @model.AccountCompositeNavigation.ObjectDisplayName
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountComposite.AccountCompositeNavigation.ObjectDescription)
                            Caption=@(NameFor<AccountObject>(nameof(AccountObject.ObjectDescription)))>
                    <CellTemplate Context="model">
                        @model.AccountCompositeNavigation.ObjectDescription
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountComposite.AccountCompositeNavigation.StartDate)
                            Caption=@(NameFor<AccountObject>(nameof(AccountObject.StartDate)))>
                    <CellTemplate Context="model">
                        @model.AccountCompositeNavigation.StartDate.ToShortDateString()
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountComposite.AccountCompositeNavigation.CloseDate)
                            Caption=@(NameFor<AccountObject>(nameof(AccountObject.CloseDate)))>
                    <CellTemplate Context="model">
                        @model.AccountCompositeNavigation.CloseDate?.ToShortDateString()
                    </CellTemplate>
                </DataGridColumn>
            </DataGrid>
        </PageSection>
    }
</ThemedComponent>

@code {
    protected override async Task OnInitializedAsync()
    {
        ActionMenu = new()
        {
            IconKey = "reorder-four",
            Children = new()
            {
                { 0, new MenuItem()
                    {
                        IconKey = "create",
                        Caption = $"Create new {ModelNoun.GetSingular()}",
                        UriStem = FormatCreateUri(Guid.NewGuid())
                    }
                }
            }
        };

        MaxRecordCount = -1;

        await base.OnInitializedAsync();

    }

    private void Detail_OnClick(AccountComposite model, MouseEventArgs args)
    {
        NavigationHelper.NavigateTo(FormatDetailUri(model.AccountCompositeId));
    }
}
