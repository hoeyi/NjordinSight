@page "/InvestmentModels/Create/{RequestGuid:guid}"

@inherits ModelDetail<InvestmentStrategy>

<ThemedComponent>
    @if(IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <PageTitle>@(PageTitle.CreateSingle().AsPageTitle())</PageTitle>

        <ModelPageMenuHeader ActionMenu="@ActionMenu"
                         Header="@(PageTitle.CreateSingle())" />

        <EditorControl 
            OnCancelEditorClick="CancelEditorHandler"
            OnValidFormSubmit="ValidFormSubmitHandler"
            ViewModel="@ViewModel"
            Mode="EditorMode.Add" />
    }
</ThemedComponent>

@code{
    /// <summary>
    /// Gets or sets the identifier for the <see cref="InvestmentStrategy" /> worked using this
    /// page.
    /// </summary>
    [Parameter]
    public int ModelId { get; set; }

    private InvestmentModelViewModel ViewModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ActionMenu = new()
            {
                IconKey = "reorder-four",
                Children = new()
                {
                    // Add index button.
                    { 0, new MenuItem()
                        {
                            IconKey = "list",
                            Caption = $"{Resources.Strings.Caption_Button_Index}",
                            UriStem = $"{IndexUriRelativePath}"
                        }
                    }
                }
            };

        IsLoading = true;

        try
        {
            var modelQuery = await Controller.GetDefaultAsync();

            if (modelQuery.Value is InvestmentStrategy model)
            {
                Model = model;
            }

            ViewModel = new(Model);
        }
        finally
        {
            IsLoading = Model is null || ViewModel is null;
        }
    }

    /// <summary>
    /// Handles the valid form submission event of this page.
    /// </summary>
    private async Task ValidFormSubmitHandler(EditContext args)
    {
        Model = ViewModel.ToEntity();

        var result = await Controller.UpdateAsync(Model.InvestmentStrategyId, Model);

        if (result.Value is not null)
            NavigationHelper.NavigateTo(FormatDetailUri(result.Value.InvestmentStrategyId));
    }

    /// <summary>
    /// Handles the cancel editor event of this page.
    /// </summary>
    private void CancelEditorHandler(MouseEventArgs args) =>
        NavigationHelper.NavigateTo(FormatDetailUri(ModelId));
}