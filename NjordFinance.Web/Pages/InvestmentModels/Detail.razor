@page "/InvestmentModels/Detail/{ModelId:int}"

@inherits ModelDetail<InvestmentStrategy>

@inject IReferenceDataService ReferenceData

<ThemedComponent>
    @if (IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <PageTitle>@(PageTitle.ReadSingle(Model.DisplayName).AsPageTitle())</PageTitle>

        <ModelPageMenuHeader Header="@(PageTitle.ReadSingle(Model.DisplayName))" />

        <ThemedComponent>
            @foreach(var group in ViewModel.CurrentTargetCollection)
            {
                <EditForm class="model-editor" Model="@group.First()">
                    <InvestmentModelTargetCRUD 
                        Model="@group.First()"
                        Disabled="false"
                        ReadOnly="true" />
                </EditForm>
            }
        </ThemedComponent>
    }
</ThemedComponent>

@code{
    [Parameter]
    public int ModelId { get; set; }

    private IEnumerable<LookupModel> ModelAttributes { get; set; }

    private InvestmentModelViewModel ViewModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        await base.OnInitializedAsync();
                
        try
        {
            var modelQuery = Controller.ReadAsync(ModelId);
            var attributesQuery = ReferenceData.ModelAttributeListAsync(
                ModelAttributeScopeCode.Country |
                ModelAttributeScopeCode.Security);

            if((await modelQuery).Value is InvestmentStrategy model)
                Model = model;

            ModelAttributes = await attributesQuery;

            ViewModel = new(Model);
        }
        finally
        {
            IsLoading = Model is null || ViewModel is null;
        }
    }

    private IEnumerable<LookupModel> GetAttributeMemberLookupModels(int attributeId)
    {
        throw new NotImplementedException();
    }

}