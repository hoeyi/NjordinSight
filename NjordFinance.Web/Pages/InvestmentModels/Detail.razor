@page "/investment-models/{ModelId:int}/detail"

@inherits ModelDetail<InvestmentStrategy>

@inject IReferenceDataService ReferenceData

<ThemedComponent>
    @if (IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <PageTitle>@(PageTitle.ReadSingle(Model.DisplayName).AsPageTitle())</PageTitle>

        <ModelPageMenuHeader
            ActionMenu="@ActionMenu" 
            Header="@(PageTitle.ReadSingle(Model.DisplayName))" />

        <ContentTile>
            <Body>
                <CascadingValue Value="@ViewModel">
                    <EditForm class="model-editor" Model="@ViewModel" >
                        <InvestmentModelCRUD Disabled="false" ReadOnly="true" />
                    </EditForm>
                </CascadingValue>
            </Body>
        </ContentTile>
        @foreach(var group in ViewModel.CurrentAttributeEntryGroups.OrderBy(g => g.Key.DisplayName))
        {
            <ContentTile>
                <Body>
                    <CascadingValue Value="@group.First()">
                        <EditForm class="model-editor" Model="@group.First()">
                            <InvestmentModelTargetCRUD 
                                Disabled="false"
                                ReadOnly="true" />
                        </EditForm>
                    </CascadingValue>
                </Body>
            </ContentTile>
        }
    }
</ThemedComponent>

@code{
    [Parameter]
    public int ModelId { get; set; }

    private InvestmentModel ViewModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;


        try
        {
            var modelQuery = Controller.ReadAsync(ModelId);

            if((await modelQuery).Value is InvestmentStrategy model)
                Model = model;

            ActionMenu = new()
                    {
                        IconKey = "reorder-four",
                        Children = new()
                    {
                        // Add index button.
                        { 0, new MenuItem()
                            {
                                IconKey = "list",
                                Caption = $"{Resources.Strings.Caption_Button_Index}",
                                UriStem = $"{IndexUriRelativePath}"
                            }
                        },
                        // Add edit button.
                        { 1, new MenuItem()
                            {
                                IconKey = "pencil",
                                Caption = $"{Resources.Strings.Caption_Button_Edit} {ModelNoun.GetSingular()}",
                                UriStem = FormatEditUri(Model.InvestmentStrategyId)
                            }
                        }
                    }
                };  

            ViewModel = new(Model);
        }
        finally
        {
            IsLoading = Model is null || ViewModel is null;
        }
    }
}