@page "/bank-transaction-codes"

@inherits ModelIndex<BankTransactionCode>

<ThemedComponent>
    <PageTitle>@(PageTitle.ReadMany().AsPageTitle())</PageTitle>

    <ModelPageMenuHeader ActionMenu="@ActionMenu" />

    @if (IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <ContentTile>
            <Body>
                <DataGrid Data="@Models">
                    <DataGridColumn Property=@nameof(BankTransactionCode.TransactionCode)
                                Caption=@(NameFor(nameof(BankTransactionCode.TransactionCode)))>
                        <CellTemplate Context="model">
                            @model.TransactionCode
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Property=@nameof(BankTransactionCode.DisplayName)
                                Caption=@(NameFor(nameof(BankTransactionCode.DisplayName)))>
                        <CellTemplate Context="model">
                            @model.DisplayName
                        </CellTemplate>
                    </DataGridColumn>
                    <DataGridColumn Type="DataGridCellType.Button">
                        <CellTemplate Context="model">
                            <ToolTip Text="@Resources.Strings.Caption_Properties_View">
                                <button class="form-control button icon"
                                    type="button"
                                    @onclick="(args) => OnAttributeDetailSelect(args, model)">
                                    <IonIcon Name="list-circle" />
                                </button>
                            </ToolTip>
                        </CellTemplate>
                    </DataGridColumn>
                </DataGrid>
            </Body>
        </ContentTile>
    }
</ThemedComponent>

@code {
    /// <inheritdoc/>
    protected override async Task OnInitializedAsync()
    {
        ActionMenu = new()
            {
                IconKey = "reorder-four",
                Caption = PageTitle.ReadMany(),
                Children = new()
            {
                { 0, new MenuItem()
                    {
                        IconKey = "pencil",
                        Caption = $"{Resources.Strings.Caption_Button_Edit} {ModelNoun.GetPlural()}",
                        UriStem = $"{IndexUriRelativePath}/edit"
                    }
                }
            }
            };

        MaxRecordCount = -1;

        await base.OnInitializedAsync();
    }

    private void OnAttributeDetailSelect(MouseEventArgs args, BankTransactionCode model)
    {
        NavigationHelper.NavigateTo($"{IndexUriRelativePath}/{model.TransactionCodeId}/detail/attributes");
    }
}
