@page "/bank-transaction-codes/{ModelId:int}/detail/attributes"

@inherits ModelDetail<BankTransactionCode>

@inject IReferenceDataService ReferenceData

<ThemedComponent>
    @if (IsLoading)
    {
        <LoadingSvg />
    }
    else
    {
        <PageTitle>@(PageTitle.ReadSingle(Model.DisplayName).AsPageTitle())</PageTitle>

        <ModelPageMenuHeader 
            ActionMenu="@ActionMenu"
            Header="@(PageTitle.ReadSingle(Model.DisplayName))" />

        @foreach (var entry in ViewModel.CurrentEntries.OrderBy(g => 
        g.AttributeMember.Attribute.DisplayName))
        {
            <ContentTile>
                <Body>
                    <ModelForm TModel="BankTransactionCodeAttributeMemberEntry"
                        >
                        <ModelFormLineItem MemberName="@nameof(BankTransactionCode.TransactionCode)">
                            @entry.AttributeMember.DisplayName
                        </ModelFormLineItem>
                        <ModelFormLineItem MemberName="@nameof(BankTransactionCode.DisplayName)">
                            @entry.EffectiveDate.ToShortDateString()
                        </ModelFormLineItem>
                    </ModelForm>
                </Body>
            </ContentTile>
        }
    }
</ThemedComponent>

@code {
    [Parameter]
    public int ModelId { get; set; }

    private BankTransactionCodeViewModel ViewModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;


        try
        {
            var modelQuery = Controller.ReadAsync(ModelId);

            if ((await modelQuery).Value is BankTransactionCode model)
                Model = model;

            ActionMenu = new()
                {
                    IconKey = "reorder-four",
                    Children = new()
                    {
                        // Add index button.
                        { 0, new MenuItem()
                            {
                                IconKey = "list",
                                Caption = $"{Resources.Strings.Caption_Button_Index}",
                                UriStem = $"{IndexUriRelativePath}"
                            }
                        },
                        // Add edit button.
                        { 1, new MenuItem()
                            {
                                IconKey = "pencil",
                                Caption = $"{Resources.Strings.Caption_Button_Edit} {ModelNoun.GetSingular()}",
                                UriStem = $"{FormatEditUri(Model.TransactionCodeId)}/attributes"
                            }
                        }
                    }
                };

            ViewModel = new(Model);
        }
        finally
        {
            IsLoading = Model is null || ViewModel is null;
        }
    }
}