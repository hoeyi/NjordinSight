@page "/Accounts"

@inherits ModelIndex<Account>

<div><h3>@ModelMetadata.NounFor(typeof(Account))?.GetPlural()?.ToTitleCase()</h3></div>
<button class="btn btn-primary" @onclick="@(args => NavigateToCreate())">
    @Resources.UserInterfaceString.CreateNew_Button_Caption
</button>

<button class="btn btn-primary" @onclick="@(args => SearchClicked())">
    @Resources.UserInterfaceString.Search_Button_Caption
</button>

@if (IsLoading)
{
    <p><em>@Resources.UserInterfaceString.Page_Loading_Caption</em></p>
}
else
{
    <div>
        <label hidden="@SearchIsValid" class="alert-info">@SearchErrorMessage</label>
    </div>
    <div>
        <table class="table parameter-table">
            <tbody>
                <tr>
                    <td><label>@Resources.UserInterfaceString.Search_FieldSelector_Caption</label></td>
                    <td>
                        <select class="form-control selectpicker" @bind="@CurrentSearchMemberName" id="SearchFieldSelect">
                            @foreach (var field in SearchFields)
                            {
                                <option value="@field.QualifiedMemberName">@field.Display?.GetName()</option>

                            }
                        </select>
                    </td>
                    <td>
                        <select class="form-control selectpicker" @bind="@CurrentSearchOperator" id="search-operator-select">
                            @foreach (var op in ComparisonOperators)
                            {
                                <option value=@op>@(ModelMetadata.NameFor<ComparisonOperator>($"{op}"))</option>
                            }
                        </select>
                    </td>
                    <td>
                        <input @bind="SearchValue" />
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div>
        <ObjectList Data=@Models>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @(ModelMetadata.NameFor<AccountObject>(nameof(AccountObject.AccountObjectCode)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<AccountObject>(nameof(AccountObject.ObjectDisplayName)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<AccountObject>(nameof(AccountObject.StartDate)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<AccountObject>(nameof(AccountObject.CloseDate)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<Account>(nameof(Account.AccountNumber)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<Account>(nameof(Account.DisplayOrder)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<Account>(nameof(Account.BooksClosedDate)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<Account>(nameof(Account.IsComplianceTradable)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<Account>(nameof(Account.HasWallet)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<Account>(nameof(Account.HasBankTransaction)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<Account>(nameof(Account.HasBrokerTransaction)))
                        </th>
                        <th>
                            @(ModelMetadata.NameFor<Account>(nameof(Account.AccountCustodianId)))
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@context.AccountNavigation.AccountObjectCode</td>
                        <td>@context.AccountNavigation.ObjectDisplayName</td>
                        <td>@context.AccountNavigation.StartDate.ToShortDateString()</td>
                        <td>@context.AccountNavigation.CloseDate?.ToShortDateString()</td>
                        <td>@context.AccountNumber</td>
                        <td>@context.DisplayOrder</td>
                        <td>@context.BooksClosedDate?.ToShortDateString()</td>
                        <td>@context.IsComplianceTradable</td>
                        <td>@context.HasWallet</td>
                        <td>@context.HasBankTransaction</td>
                        <td>@context.HasBrokerTransaction</td>
                        <td>@context.AccountCustodian?.CustodianCode</td>
                        <td>
                            <button class="btn btn-primary"
                                    @onclick="@(args => NavigateToDetail(args, context))">
                                Details
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </ObjectList>
    </div>
}

@code{ 
    protected override string IndexUri { get; set; } = "/Accounts";

    private void NavigateToCreate()
    {
        NavigationHelper.NavigateTo($"{IndexUri}/Create/{Guid.NewGuid()}");
    }

    protected override void NavigateToDetail(MouseEventArgs args, Account account)
    {
        NavigationHelper.NavigateTo($"{IndexUri}/Detail/{account?.AccountId ?? default}");
    }
}