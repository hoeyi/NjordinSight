@typeparam TViewModelParent
@typeparam TViewModelChild
@typeparam TModel
@typeparam TModelChild

@inherits LocalizableComponent

@if(IsLoading)
{
    <LoadingSvg />
}
else
{
    <ActionButtonMenu>
        <button type="submit" form="@FormGuid" class="form-control button" disabled="@_formInvalid">
            @Strings.Caption_Button_Save
        </button>
        @if (Mode == EditorMode.Edit)
        {
            <button type="button" class="form-control button"
                    @onclick="(() => DrawAttributeSelectorDialog = true)"
                    @onclick:preventDefault>
                @(Strings.Caption_CreateNew.Format(
                    ModelMetadata.GetAttribute<TModelChild, NounAttribute>()?.GetSingular()))
            </button>
            <button type="button" class="form-control button"
                @onclick="@(async (args) => await OnDeleteModelClick.InvokeAsync(args))"
                @onclick:preventDefault>
                @Strings.Caption_Button_Delete
            </button>
        }
        <button type="button" class="form-control button"
                @onclick="@(async(args) => await OnCancelEditorClick.InvokeAsync(args))"
                @onclick:preventDefault>
            @Strings.Caption_Button_Cancel
        </button>
    </ActionButtonMenu>
    <ContentTile class="left">
        <Body>
            <CascadingValue Value="@ModelDto">
                <EditForm id="@FormGuid"
                      EditContext="_editContext"
                      OnValidSubmit="@(async (args) => await OnValidFormSubmit.InvokeAsync(args))">
                    <DataAnnotationsValidator />
                    @ViewModelCRUD
                </EditForm>
            </CascadingValue>
        </Body>
    </ContentTile>
    @if(ViewModelChildCRUD is not null)
    {
        @foreach (var group in ModelDto.EntryCollection)
        {
            <CascadingValue Value="@group">
                <CascadingValue 
                    Value="@GetAttributeMembers(group.ParentAttribute)" 
                    Name="AttributeMembers">
                    @ViewModelChildCRUD
                </CascadingValue>
            </CascadingValue>
        }
    }

    @if (DrawAttributeSelectorDialog)
    {
        <AttributeSelectorModal 
            OnClose="OnModalAttributeSelectorClosed"
            AllowableAttributes="@AllowableModelAttributes">
        </AttributeSelectorModal>
    }
}

@code {
    [CascadingParameter]
    public TModel Model { get; set; }

    /// <summary>
    /// Gets or sets the identifier for the <see cref="EditorMode" /> for the page.
    /// </summary>
    [Parameter, EditorRequired]
    public EditorMode Mode { get; set; }

    /// <summary>
    /// Gets or sets the delegate for handling a request to cancel the editor initiated by a
    /// mouse click.
    /// </summary>
    [Parameter, EditorRequired]
    public EventCallback<MouseEventArgs> OnCancelEditorClick { get; set; }

    /// <summary>
    /// Gets or sets the delegate for handling a request to delete a model initiated by a
    /// mouse click.
    /// </summary>
    [Parameter]
    public EventCallback<MouseEventArgs> OnDeleteModelClick { get; set; }

    /// <summary>
    /// Gets or sets the delegate for handling a request to submit a valid form initiated by a
    /// mouse click.
    /// </summary>
    [Parameter, EditorRequired]
    public EventCallback<EditContext> OnValidFormSubmit { get; set; }

    /// <summary>
    /// Gets or sets the <typeparamref name="TViewModelParent"/> representing the worked model.
    /// </summary>
    [Parameter, EditorRequired]
    public TViewModelParent ModelDto { get; set; }

    /// <summary>
    /// Gets or sets the component responsible for presenting editor controls for
    /// <typeparamref name="TViewModelChild"/> instances.
    /// </summary>
    [Parameter]
    public RenderFragment ViewModelChildCRUD { get; set; }

    /// <summary>
    /// Gets or sets the component responsible for presenting editor controls for the
    /// <typeparamref name="TViewModelParent"/> instance.
    /// </summary>
    [Parameter]
    public RenderFragment ViewModelCRUD { get; set; }
}

    
