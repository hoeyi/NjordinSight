@using System.ComponentModel

@typeparam TModelDto where TModelDto : class

@inherits LocalizableComponent

@code {
    private ITypedMetadataService<TModelDto> _typedMetadataHelper = default!;

    /// <summary>
    /// Gets the description text for select <typeparamref name="TModelDto"/> member.
    /// </summary>
    /// <param name="expression">The expression indicated the member to retrieve metadata for.</param>
    /// <returns>A <see cref="string"/> representing the description if defined, else null.</returns>
    protected string DescriptionFor(Expression<Func<TModelDto, object>> expression)
        => TypedMetdataHelper.DescriptionFor(expression);

    /// <summary>
    /// Gets the group name for select <typeparamref name="TModelDto"/> member.
    /// </summary>
    /// <param name="expression">The expression indicated the member to retrieve metadata for.</param>
    /// <returns>A <see cref="string"/> representing the description if defined, else null.</returns>
    protected string GroupNameFor(Expression<Func<TModelDto, object>> expression)
        => TypedMetdataHelper.GroupNameFor(expression);

    /// <summary>
    /// Gets the name for select <typeparamref name="TModelDto"/> member.
    /// </summary>
    /// <param name="expression">The expression indicated the member to retrieve metadata for.</param>
    /// <returns>A <see cref="string"/> representing the name if defined, else null.</returns>
    protected string NameFor(Expression<Func<TModelDto, object?>> expression)
        => TypedMetdataHelper.NameFor(expression);

    /// <summary>
    /// Gets the display order for select <typeparamref name="TModelDto"/> member.
    /// </summary>
    /// <param name="expression">The expression indicated the member to retrieve metadata for.</param>
    /// <returns>A <see cref="int"/> representing the display order if defined, else null.</returns>
    protected int? OrderFor(Expression<Func<TModelDto, object>> expression)
        => TypedMetdataHelper.OrderFor(expression);

    /// <summary>
    /// Gets the input prompt text for select <typeparamref name="TModelDto"/> member.
    /// </summary>
    /// <param name="expression">The expression indicated the member to retrieve metadata for.</param>
    /// <returns>A <see cref="string"/> representing the input prompt if defined, else null.</returns>
    protected string PromptFor(Expression<Func<TModelDto, object>> expression)
        => TypedMetdataHelper.PromptFor(expression);

    /// <summary>
    /// Gets the short name text for select <typeparamref name="TModelDto"/> member.
    /// </summary>
    /// <param name="expression">The expression indicated the member to retrieve metadata for.</param>
    /// <returns>A <see cref="string"/> representing the short name if defined, else null.</returns>
    protected string ShortNameFor(Expression<Func<TModelDto, object>> expression)
            => TypedMetdataHelper.ShortNameFor(expression);

    /// <summary>
    /// Gets the <see cref="ITypedMetadataService{T}"/> instance for this component's type.
    /// </summary>
    public ITypedMetadataService<TModelDto> TypedMetdataHelper
    {
        get
        {
            _typedMetadataHelper ??= new TypedMetadataService<TModelDto>(ModelMetadata);
            return _typedMetadataHelper;
        }
    }
}
