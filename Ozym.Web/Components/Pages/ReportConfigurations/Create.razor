@page "/report-configurations/create/{RequestGuid:guid}"

@inherits ModelDetail<ReportConfigurationDto>

@if (IsLoading)
{
    <LoadingSvg />
}
else
{
    <PageTitle>@(PageTitle.UpdateSingle(Model.ConfigurationCode).AsPageTitle())</PageTitle>

    <ModelPageHeader Header="@(PageTitle.CreateSingle())" />

    <CascadingValue Value="@ErrorMessage">
        <ErrorMessageBox Header="@Resources.Strings.Exception_Message_Generic" />
    </CascadingValue>

    <CascadingValue Value="@Model">
        <EditForm class="model-editor" Model="@Model" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ActionButtonMenu>
                <button type="submit" class="form-control button">
                    @Strings.Caption_Button_Save
                </button>
                <button type="button" class="form-control button"
                    @onclick="FormCancelClickHandler"
                    @onclick:preventDefault>
                    @Strings.Caption_Button_Cancel
                </button>
            </ActionButtonMenu>
            <ContentTile>
                <Body>
                    <ReportConfigurationCRUD Disabled="false" ReadOnly="false" />
                </Body>
            </ContentTile>
        </EditForm>
    </CascadingValue>
}

@code {
    [Parameter]
    public Guid RequestGuid { get; init; }

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;

        try
        {
            Model = await HttpService.InitDefaultAsync();
        }
        finally
        {
            IsLoading = Model is null;
        }
    }

    private void FormCancelClickHandler() => NavigationHelper.NavigateTo(IndexUriRelativePath);
}