@page "/composites"

@inherits ModelIndex<AccountCompositeDto>

<PageTitle>@(PageTitle.ReadMany().AsPageTitle())</PageTitle>

<ModelPageHeader ActionMenu="@SectionNavigationMenu" Header="@(PageTitle.ReadMany())" />

@if(SearchFields is null)
{
    <LoadingSvg />
}
else
{
    @if (SearchFields.Any())
    {
        <ContentTile>
            <Body>
                <SearchInputTable TModel="AccountCompositeDto"
                    ComparisonOperators=@ComparisonOperators
                    ExpressionBuilder=@ExpressionBuilder
                    SearchFields=@SearchFields
                    OnSearchClick=@(async (args) => await SearchClicked(args))>
                </SearchInputTable>
            </Body>
        </ContentTile>
    }
}
    
<CascadingValue Value="@ErrorMessage">
    <ErrorMessageBox Header="@Resources.Strings.Exception_Message_Generic" />
</CascadingValue>

<ContentTile>
    <TitleAlignLeft>
        <Paginator Model="PaginationHelper"
                IndexChanged="OnIndexChangedAsync" PageSizeChanged="OnPageSizeChangedAsync" />
    </TitleAlignLeft>
    <Body>
        @if (IsLoading)
        {
            <LoadingSvg />
        }
        else
        {
            <DataGrid Data="@Entries" FootNote="@PaginationHelper.RecordReport">
                <DataGridColumn 
                    Property=@nameof(AccountCompositeDto.ShortCode)
                    Caption=@(ModelMetadata.NameFor<AccountCompositeDto>(x => x.ShortCode))
                    Type=@DataGridCellType.Link>
                    <CellTemplate Context="model">
                        <a class="custom-nav-link" href="@(FormatDetailUri(model.Id))" @onclick:preventDefault
                            @onclick="@(args => Detail_OnClick(model, args))">
                            @model.ShortCode.ToUpper()
                        </a>
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn 
                    Property=@nameof(AccountCompositeDto.DisplayName)
                    Caption=@(ModelMetadata.NameFor<AccountCompositeDto>(x => x.DisplayName))>
                    <CellTemplate Context="model">
                        @model.DisplayName
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountCompositeDto.Description)
                            Caption=@(ModelMetadata.NameFor<AccountCompositeDto>(x => x.Description))>
                    <CellTemplate Context="model">
                        @model.Description
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountCompositeDto.StartDate)
                            Caption=@(ModelMetadata.NameFor<AccountCompositeDto>(x => x.StartDate))>
                    <CellTemplate Context="model">
                        @model.StartDate.ToShortDateString()
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountCompositeDto.CloseDate)
                            Caption=@(ModelMetadata.NameFor<AccountCompositeDto>(x => x.CloseDate))>
                    <CellTemplate Context="model">
                        @model.CloseDate?.ToShortDateString()
                    </CellTemplate>
                </DataGridColumn>
            </DataGrid>
        }
    </Body>
</ContentTile>

@code {
    private void Detail_OnClick(AccountCompositeDto model, MouseEventArgs args)
    {
        NavigationHelper.NavigateTo(FormatDetailUri(model.Id));
    }
}
