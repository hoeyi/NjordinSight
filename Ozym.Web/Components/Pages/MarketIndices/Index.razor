@page "/market-indices"

@inherits ModelIndex<MarketIndexDto>

<PageTitle>@(PageTitle.ReadMany().AsPageTitle())</PageTitle>

<ModelPageHeader ActionMenu="@SectionNavigationMenu" Header="@(PageTitle.ReadMany())" />

<CascadingValue Value="@ErrorMessage">
    <ErrorMessageBox Header="@Resources.Strings.Exception_Message_Generic" />
</CascadingValue>

<ContentTile>
    <TitleAlignLeft>
        <Paginator Model="PaginationHelper"
                IndexChanged="OnIndexChangedAsync" PageSizeChanged="OnPageSizeChangedAsync" />
    </TitleAlignLeft>
    <Body>
        @if (IsLoading)
        {
            <LoadingSvg />
        }
        else
        {
            <DataGrid Data="@Entries" FootNote="@PaginationHelper.RecordReport">
                <DataGridColumn Property=@nameof(MarketIndexDto.IndexCode)
                    Caption=@(NameFor(x => x.IndexCode))
                    Type=@DataGridCellType.Link>
                    <CellTemplate Context="model">
                        <a class="custom-nav-link" href=@(FormatDetailUri(model.IndexId)) 
                            @onclick:preventDefault
                            @onclick="@(args => Detail_OnClick(model, args))">
                            @model.IndexCode.ToUpper()
                        </a>
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(MarketIndexDto.IndexDescription)
                    Caption=@(NameFor(x => x.IndexDescription))>
                    <CellTemplate Context="model">
                        @model.IndexDescription
                    </CellTemplate>
                </DataGridColumn>
            </DataGrid>
        }
    </Body>
</ContentTile>

@code {
    private void Detail_OnClick(MarketIndexDto model, MouseEventArgs args)
    {
        NavigationHelper.NavigateTo(FormatDetailUri(model.IndexId));
    }
}