@page "/accounts"

@inherits ModelIndex<AccountDto>

<PageTitle>@(PageTitle.ReadMany().AsPageTitle())</PageTitle>

<ModelPageHeader ActionMenu="@SectionNavigationMenu" Header="@(PageTitle.ReadMany())" />

@if(SearchFields is null)
{
    <LoadingSvg />
}
else
{
    @if (SearchFields.Any())
    {
        <ContentTile>
            <Body>
                <SearchInputTable TModel="AccountDto"
                    ComparisonOperators=@ComparisonOperators
                    ExpressionBuilder=@ExpressionBuilder
                    SearchFields=@SearchFields
                    OnSearchClick=@(async (args) => await SearchClicked(args))>
                </SearchInputTable>
            </Body>
        </ContentTile>
    }
}

<CascadingValue Value="@ErrorMessage">
    <ErrorMessageBox Header="@(Resources.Strings.Exception_Message_Generic)" />
</CascadingValue>

<ContentTile>
    <TitleAlignLeft>
        <Paginator Model="PaginationHelper"
                IndexChanged="OnIndexChangedAsync" PageSizeChanged="OnPageSizeChangedAsync" />
    </TitleAlignLeft>
    <Body>
        @if (IsLoading)
        {
            <LoadingSvg />
        }
        else
        {
            <DataGrid Data="@Entries" FootNote="@PaginationHelper.RecordReport">
                <DataGridColumn Property=@nameof(AccountDto.ShortCode)
                                Caption=@(ModelMetadata.NameFor<AccountDto>(x => x.ShortCode))
                            Type=@DataGridCellType.Link>
                    <CellTemplate Context="model">
                        <a class="custom-nav-link" href=@(FormatDetailUri(model.Id)) 
                            @onclick:preventDefault 
                            @onclick="@(args => Detail_OnClick(model, args))">
                            @model.ShortCode.ToUpper()
                        </a>
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountDto.DisplayName)
                                Caption=@(ModelMetadata.NameFor<AccountDto>(x => x.DisplayName))>
                    <CellTemplate Context="model">
                        @model.DisplayName
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountDto.Description)
                                Caption=@(ModelMetadata.NameFor<AccountDto>(x => x.Description))>
                    <CellTemplate Context="model">
                        @model.Description
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountDto.StartDate)
                            Caption=@(ModelMetadata.NameFor<AccountDto>(x => x.StartDate))>
                    <CellTemplate Context="model">
                        @model.StartDate.ToShortDateString()
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountDto.CloseDate)
                            Caption=@(ModelMetadata.NameFor<AccountDto>(x => x.CloseDate))>
                    <CellTemplate Context="model">
                        @model.CloseDate?.ToShortDateString()
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountDto.AccountNumber)
                            Caption=@(ModelMetadata.NameFor<AccountDto>(x => x.AccountNumber))>
                    <CellTemplate Context="model">
                        @model.AccountNumber
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountDto.BooksClosedDate)
                            Caption=@(ModelMetadata.NameFor<AccountDto>(x => x.BooksClosedDate))>
                    <CellTemplate Context="model">
                        @model.BooksClosedDate?.ToShortDateString()
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountDto.HasWallet)
                            Caption=@(ModelMetadata.NameFor<AccountDto>(x => x.HasWallet))>
                    <CellTemplate Context="model">
                        @model.HasWallet
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountDto.HasBankTransaction)
                            Caption=@(ModelMetadata.NameFor<AccountDto>(x => x.HasBankTransaction))>
                    <CellTemplate Context="model">
                        @model.HasBankTransaction
                    </CellTemplate>
                </DataGridColumn>
                <DataGridColumn Property=@nameof(AccountDto.HasBrokerTransaction)
                            Caption=@(ModelMetadata.NameFor<AccountDto>(x => x.HasBrokerTransaction))>
                    <CellTemplate Context="model">
                        @model.HasBrokerTransaction
                    </CellTemplate>
                </DataGridColumn>
            </DataGrid>
        }
    </Body>
</ContentTile>


@code {
    private void Detail_OnClick(AccountDto model, MouseEventArgs args)
    {
        NavigationHelper.NavigateTo(FormatDetailUri(model.Id));
    }
}