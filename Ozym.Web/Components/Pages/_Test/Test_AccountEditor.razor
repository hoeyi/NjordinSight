@page "/_test/test-account-editor"

@inherits ModelDetail<AccountDto>

<PageTitle>@(PageTitle.CreateSingle().AsPageTitle())</PageTitle>

<ModelPageHeader Header="@(PageTitle.CreateSingle())" />

@if (IsLoading)
{
    <LoadingSvg />
}
else
{
    <CascadingValue Value="@ErrorMessage">
        <ErrorMessageBox Header="@Resources.Strings.Exception_Message_Generic" />
    </CascadingValue>

    <ContentTile class="left">
        <Body>
            <CascadingValue Value="@Model">
                <ActionButtonMenu>
                    <button type="submit" form="@_formGuid" class="form-control button" disabled="@_formInvalid">
                        @Strings.Caption_Button_Save
                    </button>
                    <button type="button" class="form-control button"
                            @onclick="FormCancelClickHandler"
                    @onclick:preventDefault>
                        @Strings.Caption_Button_Cancel
                    </button>
                </ActionButtonMenu>
                <EditForm id="@_formGuid"
                            EditContext="_editContext"
                            OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <AccountCRUD AccountCustodians="@CustodianDtos" Disabled="false" ReadOnly="false" />
                </EditForm>
            </CascadingValue>
        </Body>
    </ContentTile>
}

@code {
    private IEnumerable<AccountCustodianDto> CustodianDtos { get; set; } = [];
    private EditContext _editContext = default!;
    private Guid _formGuid = new Guid();
    private bool _formInvalid = false;

    protected override string IndexUriRelativePath => "/";

    #if DEBUG
    protected override async Task OnParametersSetAsync()
    {
        IsLoading = true;

        await Task.Delay(1500);

        Model = new AccountDto();
        CustodianDtos = new List<AccountCustodianDto>()
        {
            new(){ AccountCustodianId = 1, CustodianCode = "Bank", DisplayName = "Savings & Loans" },
            new(){ AccountCustodianId = 2, CustodianCode = "Broker", DisplayName = "Brokerage" }
        };
        _editContext = new(Model);

        IsLoading = Model is null || CustodianDtos is null;
    }
    #endif

    private void FormCancelClickHandler() => NavigationHelper.NavigateTo("/");
}
